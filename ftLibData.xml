<?xml version="1.0" encoding="UTF-8"?>
<MF0 version="1.1" packageUris="http://schema.mathworks.com/mf0/cxxfe_ast/R2023b http://schema.mathworks.com/mf0/cxxfe_ast_annotations/20180710">
  <mwAnnotation.FundamentalArray type="mwAnnotation.FundamentalArray" uuid="fe79613e-00f7-4633-8455-879a9c815472">
    <cppElemType>unsigned char</cppElemType>
    <mlElemType>uint8</mlElemType>
    <name>clib.array.ftLib.UnsignedChar</name>
  </mwAnnotation.FundamentalArray>
  <cxxfe.ast.Project type="cxxfe.ast.Project" uuid="be4161ba-7546-4194-b3f8-05dff6810d33">
    <Compilations type="cxxfe.ast.source.CompilationUnit" uuid="65dfe9a5-d2a9-4af6-bb38-e73e514b96a0">
      <Files type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
      <Files type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
      <Language>CXX</Language>
      <Annotations type="mwAnnotation.AbsolutePathBuildInfo" uuid="77e43d83-544d-44ac-8de1-b26e412bbcee">
        <additionalCompilerFlags></additionalCompilerFlags>
        <additionalLinkerFlags></additionalLinkerFlags>
        <classArrays>clib.array.ftLib.FT_DEVICE_LIST_INFO_NODE</classArrays>
        <classArrays>clib.array.ftLib.I2C_ChannelConfig</classArrays>
        <classArrays>clib.array.ftLib.I2C_ChannelContext</classArrays>
        <classArrays>clib.array.ftLib.SPI_ChannelConfig</classArrays>
        <classArrays>clib.array.ftLib.SPI_ChannelContext</classArrays>
        <definedMacros>FT_VER_MAJOR=1</definedMacros>
        <definedMacros>FT_VER_MINOR=0</definedMacros>
        <definedMacros>FT_VER_BUILD=1</definedMacros>
        <definedMacros>WIN32</definedMacros>
        <definedMacros>_WINDOWS</definedMacros>
        <definedMacros>_USRDLL</definedMacros>
        <definedMacros>FTDIMPSSE_EXPORTS</definedMacros>
        <fundamentalArrays type="mwAnnotation.FundamentalArray" uuid="4f44580a-c7b4-4b84-9be2-4b899fc9b519"/>
        <fundamentalArrays type="mwAnnotation.FundamentalArray" uuid="c843a0c1-46bf-4a24-8d99-c38c972aa3ee"/>
        <fundamentalArrays type="mwAnnotation.FundamentalArray" uuid="fe79613e-00f7-4633-8455-879a9c815472"/>
        <fundamentalArrays type="mwAnnotation.FundamentalArray" uuid="539be08e-079b-4d21-bb3d-be301916d107"/>
        <headers>D:\matlabDLL\libmpsse_i2c.h</headers>
        <headers>D:\matlabDLL\libmpsse_spi.h</headers>
        <headersRelative>D:\matlabDLL\libmpsse_i2c.h</headersRelative>
        <headersRelative>D:\matlabDLL\libmpsse_spi.h</headersRelative>
        <includePaths>D:\matlabDLL</includePaths>
        <includePathsRelative>D:\matlabDLL</includePathsRelative>
        <libraries>libmpsse.lib</libraries>
        <librariesRelative>libmpsse.lib</librariesRelative>
        <location>D:\matlabDLL</location>
        <locationRelative>D:\matlabDLL</locationRelative>
        <opaqueTypes type="mwAnnotation.OpaqueTypeAnnotation" uuid="e34922e9-b02f-4b31-b282-852e4361e0aa"/>
        <libData type="mwAnnotation.LibraryAnnotation" uuid="4c44a71a-219d-4e9c-b049-d959b08d589e">
          <architecture>win64</architecture>
          <matlabVersion>R2024a</matlabVersion>
          <packageName>ftLib</packageName>
        </libData>
      </Annotations>
      <Constants type="cxxfe.ast.constants.TemplateParamConstant" uuid="66ea21c6-817a-49e8-b5c2-c66aa01764ba">
        <Name>N</Name>
        <Type type="cxxfe.ast.types.TemplateParamType" uuid="b40290ed-4cfb-420e-89ff-7806ef34e5d1"/>
      </Constants>
      <Constants type="cxxfe.ast.constants.TemplateParamConstant" uuid="67f9f43a-3c8e-4ec2-aa3c-8ac56e51d258">
        <Name>N</Name>
        <Type type="cxxfe.ast.types.TemplateParamType" uuid="59d924d8-9eeb-4baa-bd04-ac70488b3479"/>
      </Constants>
      <Symbols type="cxxfe.ast.types.StructType" uuid="fe3bd4bd-033e-47de-adb8-1a7f9a23f076">
        <Linkage>ExternalCXX</Linkage>
        <NeedsImplicitConstructor>true</NeedsImplicitConstructor>
        <NeedsImplicitCopyConstructor>true</NeedsImplicitCopyConstructor>
        <AssocTemplate type="cxxfe.ast.Template" uuid="e8444abf-b4e3-4d03-8132-6cfae9f9d013"/>
        <IsIncomplete>true</IsIncomplete>
        <IsTemplatePrototype>true</IsTemplatePrototype>
        <TemplateArgs type="cxxfe.ast.TemplateArg" uuid="3accb39a-c558-4438-a062-92b03a7df395">
          <Kind>TemplateTemplate</Kind>
          <Name>templateTemplateParam</Name>
        </TemplateArgs>
        <TemplateArgs type="cxxfe.ast.TemplateArg" uuid="fae2cdce-3930-42ac-a128-011c2ffd99f9">
          <Kind>Type</Kind>
          <Type type="cxxfe.ast.types.TemplateParamType" uuid="b40290ed-4cfb-420e-89ff-7806ef34e5d1"/>
        </TemplateArgs>
        <TemplateArgs type="cxxfe.ast.TemplateArg" uuid="56597db8-2a73-4e92-8480-a4e2f289b18c">
          <Kind>NonType</Kind>
          <Val type="cxxfe.ast.constants.TemplateParamConstant" uuid="66ea21c6-817a-49e8-b5c2-c66aa01764ba"/>
        </TemplateArgs>
        <Name>__make_integer_seq</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="d2e8494b-3bc6-459b-a32b-6823a03e19b1">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="e5dbc664-6d6b-4d63-8fd1-cb5448aeadaf">
            <definitionStatus>Inaccessible</definitionStatus>
          </integrationStatus>
        </Annotations>
      </Symbols>
      <Symbols type="cxxfe.ast.Template" uuid="e8444abf-b4e3-4d03-8132-6cfae9f9d013">
        <Kind>Class</Kind>
        <ProtoTypeInstantiation type="cxxfe.ast.types.StructType" uuid="fe3bd4bd-033e-47de-adb8-1a7f9a23f076"/>
        <Name>__make_integer_seq</Name>
        <Scope type="cxxfe.ast.Scope" uuid="0986e360-ae6f-4a36-acac-30c0e424da6d">
          <Symbols type="cxxfe.ast.types.TemplateParamType" uuid="b40290ed-4cfb-420e-89ff-7806ef34e5d1">
            <Name>T</Name>
          </Symbols>
        </Scope>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="29003d58-5bef-4c2e-9ce0-1d9df2808b9c">
        <AssocTemplate type="cxxfe.ast.Template" uuid="08b1f98d-87aa-4c30-adf1-d807eae0effa"/>
        <IsAlias>true</IsAlias>
        <IsDependent>true</IsDependent>
        <IsPrototypeInstantiation>true</IsPrototypeInstantiation>
        <IsTemplateAlias>true</IsTemplateAlias>
        <TemplateArgs type="cxxfe.ast.TemplateArg" uuid="a2cb996c-a3e0-45b2-af92-05a5363a2d88">
          <Kind>TemplateTemplate</Kind>
          <Name>templateTemplateParam</Name>
        </TemplateArgs>
        <TemplateArgs type="cxxfe.ast.TemplateArg" uuid="d320ffae-ec75-4b12-9faa-37b590e12707">
          <Kind>Type</Kind>
          <Type type="cxxfe.ast.types.TemplateParamType" uuid="59d924d8-9eeb-4baa-bd04-ac70488b3479"/>
        </TemplateArgs>
        <TemplateArgs type="cxxfe.ast.TemplateArg" uuid="e3ae6c61-22f8-40b4-b5ae-750fd912676a">
          <Kind>NonType</Kind>
          <Val type="cxxfe.ast.constants.TemplateParamConstant" uuid="67f9f43a-3c8e-4ec2-aa3c-8ac56e51d258"/>
        </TemplateArgs>
        <Type type="cxxfe.ast.types.TemplateParamType" uuid="59d924d8-9eeb-4baa-bd04-ac70488b3479"/>
        <Name>__make_integer_seq_alias</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.Template" uuid="08b1f98d-87aa-4c30-adf1-d807eae0effa">
        <Kind>Class</Kind>
        <ProtoTypeInstantiation type="cxxfe.ast.types.TypedefType" uuid="29003d58-5bef-4c2e-9ce0-1d9df2808b9c"/>
        <Name>__make_integer_seq_alias</Name>
        <Scope type="cxxfe.ast.Scope" uuid="728a6ca4-cc6e-4778-9007-6f8b3fa679fe">
          <Symbols type="cxxfe.ast.types.TemplateParamType" uuid="59d924d8-9eeb-4baa-bd04-ac70488b3479">
            <Name>T</Name>
          </Symbols>
        </Scope>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c">
        <Type type="cxxfe.ast.types.IntegerType" uuid="78e18ba2-dbb9-41de-a205-1d9dce9cc986"/>
        <Name>ULONG</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ccf07523-9b85-4c24-9671-16704b4c32bc">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>51</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="78e18ba2-dbb9-41de-a205-1d9dce9cc986">
        <IsSigned>false</IsSigned>
        <Kind>UnsignedLong</Kind>
        <NumBits>32</NumBits>
        <Name>unsigned long</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="82b46303-6926-44de-8c40-63907be5eddf">
        <Type type="cxxfe.ast.types.PointerType" uuid="1aeed841-a829-4314-84a1-d38e94aa47d3"/>
        <Name>PULONG</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a8e7303e-0e4b-4db0-b181-3b16e764ce7e">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>52</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="1aeed841-a829-4314-84a1-d38e94aa47d3">
        <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e">
        <Type type="cxxfe.ast.types.IntegerType" uuid="b666f7a9-54c9-4374-af57-05a51f5e71dc"/>
        <Name>USHORT</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="63f9ce9d-e7a6-4af3-a3b8-b17fb4374b02">
          <Col>24</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>53</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="b666f7a9-54c9-4374-af57-05a51f5e71dc">
        <IsSigned>false</IsSigned>
        <Kind>UnsignedShort</Kind>
        <NumBits>16</NumBits>
        <Name>unsigned short</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1">
        <Type type="cxxfe.ast.types.IntegerType" uuid="9a5f502f-53cc-4117-895a-e3232c1824a4"/>
        <Name>UCHAR</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7849bf67-aa9d-4763-99c8-a715731fdce9">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>55</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="9a5f502f-53cc-4117-895a-e3232c1824a4">
        <IsSigned>false</IsSigned>
        <Kind>UnsignedChar</Kind>
        <NumBits>8</NumBits>
        <Name>unsigned char</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8">
        <Type type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <Name>PUCHAR</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="10ad648c-691f-4346-ba32-ca366f5f9e0e">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>56</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e">
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23">
        <Type type="cxxfe.ast.types.IntegerType" uuid="78e18ba2-dbb9-41de-a205-1d9dce9cc986"/>
        <Name>DWORD</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d5ea9f7d-fff6-4126-a224-f0f4f03de1be">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>156</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9">
        <Type type="cxxfe.ast.types.IntegerType" uuid="3e9d02b1-ecf9-493f-82e0-a0e5b0718518"/>
        <Name>BOOL</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1a85378b-71b1-4196-81b2-acfa530b34d2">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>157</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="3e9d02b1-ecf9-493f-82e0-a0e5b0718518">
        <NumBits>32</NumBits>
        <Name>int</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="a43696d9-a2b0-48b6-ad29-544e7346ac03">
        <Type type="cxxfe.ast.types.IntegerType" uuid="9a5f502f-53cc-4117-895a-e3232c1824a4"/>
        <Name>BYTE</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ea26dc1d-ea97-47ee-b138-029f6b8470b2">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>158</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911">
        <Type type="cxxfe.ast.types.IntegerType" uuid="b666f7a9-54c9-4374-af57-05a51f5e71dc"/>
        <Name>WORD</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1890b250-c421-4690-8024-12c62010530e">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>159</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="25c077e6-5596-47a4-b56d-0aef537e6ed7">
        <Type type="cxxfe.ast.types.PointerType" uuid="e6ae68fa-17fe-47f6-ae61-d16908a88c3f"/>
        <Name>LPWORD</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="02ff6b7a-409b-4902-bd9c-6c42f9360cd7">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>169</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="e6ae68fa-17fe-47f6-ae61-d16908a88c3f">
        <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="e8da4c65-dbc8-4865-9793-01b4b077ad22">
        <Type type="cxxfe.ast.types.PointerType" uuid="c5005d6c-a106-4865-a490-11ec335745cc"/>
        <Name>LPLONG</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="38a7b3e6-8f35-4785-9145-c812d19d2e88">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>170</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="c5005d6c-a106-4865-a490-11ec335745cc">
        <Type type="cxxfe.ast.types.IntegerType" uuid="d564028e-ff6a-4a29-b82d-92635701f2a4"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="d564028e-ff6a-4a29-b82d-92635701f2a4">
        <Kind>SignedLong</Kind>
        <NumBits>32</NumBits>
        <Name>long</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4">
        <Type type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
        <Name>LPDWORD</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8675ecb3-0c76-43c9-93af-b922faaeb61a">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>172</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b">
        <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289">
        <Type type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
        <Name>LPVOID</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2e0f169a-65b7-4cce-8567-bd3d43d8bed7">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>173</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65">
        <Type type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f">
        <Name>void</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="5270920c-8357-458f-83bc-5adbe6bdebd5">
        <Type type="cxxfe.ast.types.IntegerType" uuid="8e75ba64-eb3d-4e82-976d-353491f41022"/>
        <Name>UINT</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e91aac48-b02b-46cc-9cea-1d3530357a51">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>177</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="8e75ba64-eb3d-4e82-976d-353491f41022">
        <IsSigned>false</IsSigned>
        <Kind>UnsignedInt</Kind>
        <NumBits>32</NumBits>
        <Name>unsigned int</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="4ff3a9e8-92f9-418d-9ed3-7dad283e592e">
        <Type type="cxxfe.ast.types.IntegerType" uuid="0effd3cf-1b32-4070-b93d-23eca1246545"/>
        <Name>ULONG_PTR</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="80f2c445-92b9-436f-9156-e3ed392b56f9">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="8cae1e0a-1885-4f22-80e8-12cff3f68c00"/>
          <Line>129</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="0effd3cf-1b32-4070-b93d-23eca1246545">
        <IsSigned>false</IsSigned>
        <Kind>UnsignedLongLong</Kind>
        <NumBits>64</NumBits>
        <Name>unsigned long long</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d">
        <Type type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
        <Name>PVOID</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4db0cd88-6192-4dbc-bbaf-b9132e5d589c">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>425</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="0ec3bd98-49cc-49f3-b815-f4fd7bae2e5c">
        <Type type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9"/>
        <Name>CHAR</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2f3e6daa-cda9-4ee4-8f36-0e79fe3a47d1">
          <Col>14</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>467</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9">
        <Kind>Char</Kind>
        <NumBits>8</NumBits>
        <Name>char</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="207a0d30-acf0-436b-ae9c-6a32c3c02487">
        <Type type="cxxfe.ast.types.PointerType" uuid="ea0a8ae5-2b66-4c14-9cb0-ba10a1b2f99d"/>
        <Name>PCHAR</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a080f2c5-3b46-4ea2-98c0-b9915a5988ad">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>555</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="ea0a8ae5-2b66-4c14-9cb0-ba10a1b2f99d">
        <Type type="cxxfe.ast.types.TypedefType" uuid="0ec3bd98-49cc-49f3-b815-f4fd7bae2e5c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="43bcc19d-9577-4f29-b3f1-8f0af2812edc">
        <Type type="cxxfe.ast.types.PointerType" uuid="9df10c5e-97b2-48ed-9405-ae63b2e0aa20"/>
        <Name>LPCSTR</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ec5b52a6-3afe-4012-865e-6093bec4be2f">
          <Col>39</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>561</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="9df10c5e-97b2-48ed-9405-ae63b2e0aa20">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="e7969d9c-3ffe-4c55-b398-48c065609d6a"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="e7969d9c-3ffe-4c55-b398-48c065609d6a">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.TypedefType" uuid="0ec3bd98-49cc-49f3-b815-f4fd7bae2e5c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="a50dee62-8629-4c30-8133-cd47a12cf74e">
        <Type type="cxxfe.ast.types.TypedefType" uuid="43bcc19d-9577-4f29-b3f1-8f0af2812edc"/>
        <Name>LPCTSTR</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7eeca086-73c3-4ba0-a639-12b525407b3d">
          <Col>24</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>611</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="bea86721-abbf-4265-ad2e-4a4a5e6ed61f">
        <Type type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
        <Name>HANDLE</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5114a4d9-8b9d-47ca-ad9b-71c27cbf85d5">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>669</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="10d6290b-3eda-40a7-8b29-d0dbb92b9119">
        <Type type="cxxfe.ast.types.IntegerType" uuid="0effd3cf-1b32-4070-b93d-23eca1246545"/>
        <Name>ULONGLONG</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1a399dcb-9608-4687-96b7-c8b79a6513f8">
          <Col>26</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>841</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="3189b416-1a26-4761-ad22-b80e08c577d9">
        <Linkage>ExternalCXX</Linkage>
        <NeedsImplicitConstructor>true</NeedsImplicitConstructor>
        <NeedsImplicitCopyConstructor>true</NeedsImplicitCopyConstructor>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="a5d5a456-87a0-4cfc-9328-4c2039f873bf">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>nLength</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="be9980cb-2974-4772-bfda-84536578fa2a">
            <Col>11</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
            <Line>47</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6b32a4ac-90eb-42dc-92de-0db4ff1ba6fb">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
          <Name>lpSecurityDescriptor</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a88cf156-ee93-4dbe-9cd6-6d1e777bba08">
            <Col>12</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
            <Line>48</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d468fc0e-c831-402d-8410-5fdc361e859f">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
          <Name>bInheritHandle</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c2506b34-4eec-422f-ad3b-77f631211b42">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
            <Line>49</Line>
          </DefPos>
        </Members>
        <Name>_SECURITY_ATTRIBUTES</Name>
        <Scope type="cxxfe.ast.Scope" uuid="697274e3-baa7-4866-969d-3ed6bed0b6bc"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3d3dfcea-df66-4973-85e9-d23deef6ae1a">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
          <Line>46</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="6c1b2ed3-8410-458b-8d99-15b99384cd69">
        <Type type="cxxfe.ast.types.PointerType" uuid="ab3c4f3d-02a3-40b6-9415-acfeed54fa22"/>
        <Name>LPSECURITY_ATTRIBUTES</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9b8dd75c-fdb6-4f13-b851-a56c474aa903">
          <Col>48</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
          <Line>50</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="ab3c4f3d-02a3-40b6-9415-acfeed54fa22">
        <Type type="cxxfe.ast.types.StructType" uuid="3189b416-1a26-4761-ad22-b80e08c577d9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="4637740d-bba4-4a92-a9fd-3548d4d916d4">
        <Linkage>ExternalCXX</Linkage>
        <NeedsImplicitConstructor>true</NeedsImplicitConstructor>
        <NeedsImplicitCopyConstructor>true</NeedsImplicitCopyConstructor>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="c27b72d4-40ea-4bd8-ba14-ea34fac13653">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="4ff3a9e8-92f9-418d-9ed3-7dad283e592e"/>
          <Name>Internal</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="77eed1ee-7166-4429-bf3b-16fe648e293e">
            <Col>15</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
            <Line>53</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4af8e3be-effb-4fc5-8742-48c17b00f092">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="4ff3a9e8-92f9-418d-9ed3-7dad283e592e"/>
          <Name>InternalHigh</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="610f6055-7b91-48fe-a2d4-43a27fd3cace">
            <Col>15</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
            <Line>54</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f632cad2-4813-4e81-9e69-a92612851b54">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.UnionType" uuid="74c821d3-264c-4770-a7e2-740a00a362ff"/>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4c0045d1-af00-45c9-8254-312a5b017d71">
            <Col>5</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
            <Line>55</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3f74754c-0210-4fe4-ae1b-c845ae43d3b6">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="bea86721-abbf-4265-ad2e-4a4a5e6ed61f"/>
          <Name>hEvent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ccecd7b3-3cb9-4740-a293-6281222cf19e">
            <Col>13</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
            <Line>63</Line>
          </DefPos>
        </Members>
        <Name>_OVERLAPPED</Name>
        <Scope type="cxxfe.ast.Scope" uuid="baddac49-7478-422c-86c5-e3aac2e6006a">
          <Symbols type="cxxfe.ast.types.UnionType" uuid="74c821d3-264c-4770-a7e2-740a00a362ff">
            <IsPOD>true</IsPOD>
            <IsStandardLayout>true</IsStandardLayout>
            <Members type="cxxfe.ast.types.Member" uuid="cd6248ad-fee0-43f1-a75e-d4df2e036e7a">
              <Type type="cxxfe.ast.types.StructType" uuid="310e69a1-e3b6-4daa-accd-f5257f50e54d"/>
              <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ca6ca762-673c-4f35-b648-e6011f58ada8">
                <Col>9</Col>
                <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
                <Line>56</Line>
              </DefPos>
            </Members>
            <Members type="cxxfe.ast.types.Member" uuid="4f2bfcb5-b92b-4ecf-abd4-50f9363c5e97">
              <Type type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d"/>
              <Name>Pointer</Name>
              <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0e4ed159-6b59-4bf3-8393-857babb48b15">
                <Col>15</Col>
                <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
                <Line>60</Line>
              </DefPos>
            </Members>
            <Access>Public</Access>
            <DefPos type="cxxfe.ast.source.SourcePosition" uuid="54206ee9-4a13-4e2c-8ff1-022a8bce7661">
              <Col>11</Col>
              <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
              <Line>55</Line>
            </DefPos>
          </Symbols>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e5f0f52c-aadb-4e7c-a855-093e0a4e4945">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
          <Line>52</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="310e69a1-e3b6-4daa-accd-f5257f50e54d">
        <NeedsImplicitConstructor>true</NeedsImplicitConstructor>
        <NeedsImplicitCopyConstructor>true</NeedsImplicitCopyConstructor>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="f39e580e-17ea-4926-b775-b24660aa6d9b">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>Offset</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="811dbef8-4109-4ef9-8983-2389c71fca14">
            <Col>19</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
            <Line>57</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="bcd42532-a83c-4bc1-83dd-a71cd8f5b959">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>OffsetHigh</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d8f91d0e-1ece-4c18-a968-d132562a0f0a">
            <Col>19</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
            <Line>58</Line>
          </DefPos>
        </Members>
        <Access>Public</Access>
        <Scope type="cxxfe.ast.Scope" uuid="493fb053-1aef-4f02-919c-5e1c022a4ab7"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="54b272fc-7d5a-4fa7-81c3-418b422821d6">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
          <Line>56</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d">
        <Type type="cxxfe.ast.types.PointerType" uuid="423370b5-e888-4994-a194-cb2522d41577"/>
        <Name>LPOVERLAPPED</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f3fd2b19-3a0f-4f39-9313-8a4ad2126343">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
          <Line>64</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="423370b5-e888-4994-a194-cb2522d41577">
        <Type type="cxxfe.ast.types.StructType" uuid="4637740d-bba4-4a92-a9fd-3548d4d916d4"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c">
        <Type type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d"/>
        <Name>FT_HANDLE</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="97788546-bdc1-4e31-936f-f096d817a661">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>82</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154">
        <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
        <Name>FT_STATUS</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d815fb5d-8ef1-412c-8b36-228996a04333">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>88</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.EnumType" uuid="7dbdd0f4-bf9c-41cd-b16b-a82a292ccd1d">
        <StorageType type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1"/>
        <Strings>FT_OK</Strings>
        <Strings>FT_INVALID_HANDLE</Strings>
        <Strings>FT_DEVICE_NOT_FOUND</Strings>
        <Strings>FT_DEVICE_NOT_OPENED</Strings>
        <Strings>FT_IO_ERROR</Strings>
        <Strings>FT_INSUFFICIENT_RESOURCES</Strings>
        <Strings>FT_INVALID_PARAMETER</Strings>
        <Strings>FT_INVALID_BAUD_RATE</Strings>
        <Strings>FT_DEVICE_NOT_OPENED_FOR_ERASE</Strings>
        <Strings>FT_DEVICE_NOT_OPENED_FOR_WRITE</Strings>
        <Strings>FT_FAILED_TO_WRITE_DEVICE</Strings>
        <Strings>FT_EEPROM_READ_FAILED</Strings>
        <Strings>FT_EEPROM_WRITE_FAILED</Strings>
        <Strings>FT_EEPROM_ERASE_FAILED</Strings>
        <Strings>FT_EEPROM_NOT_PRESENT</Strings>
        <Strings>FT_EEPROM_NOT_PROGRAMMED</Strings>
        <Strings>FT_INVALID_ARGS</Strings>
        <Strings>FT_NOT_SUPPORTED</Strings>
        <Strings>FT_OTHER_ERROR</Strings>
        <Strings>FT_DEVICE_LIST_NOT_READY</Strings>
        <Values>0</Values>
        <Values>1</Values>
        <Values>2</Values>
        <Values>3</Values>
        <Values>4</Values>
        <Values>5</Values>
        <Values>6</Values>
        <Values>7</Values>
        <Values>8</Values>
        <Values>9</Values>
        <Values>10</Values>
        <Values>11</Values>
        <Values>12</Values>
        <Values>13</Values>
        <Values>14</Values>
        <Values>15</Values>
        <Values>16</Values>
        <Values>17</Values>
        <Values>18</Values>
        <Values>19</Values>
        <NumBits>32</NumBits>
        <Annotations type="mwAnnotation.EnumAnnotation" uuid="8482176d-5062-452a-b8ee-205ae17924d1">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="7b105ed4-bc68-475a-b3bf-480ac450c1f1">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="66459475-6568-44f8-a0d2-82878a0e3c11">
          <Col>6</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>90</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1">
        <NumBits>32</NumBits>
        <Name>int</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="78658b0a-8ea2-4ac7-9e74-63c07b04fc38">
        <Type type="cxxfe.ast.types.PointerType" uuid="45f85d64-69ab-46d9-b8c8-ce720f8404d4"/>
        <Name>PFT_EVENT_HANDLER</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cbe3d7ec-3b39-4d9b-b48e-35c7a51d34f9">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>217</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="45f85d64-69ab-46d9-b8c8-ce720f8404d4">
        <Type type="cxxfe.ast.types.FunctionType" uuid="241c2273-1142-48ae-bbab-3c227c04d875"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="241c2273-1142-48ae-bbab-3c227c04d875">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="9f3badb4-faef-4899-815f-7772052ec350">
        <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
        <Name>FT_DEVICE</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="448f4b31-0fc2-4f4b-b9b0-d10769056f74">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>236</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.EnumType" uuid="ca1dc40c-5397-42fd-b815-6c5860a32491">
        <StorageType type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1"/>
        <Strings>FT_DEVICE_BM</Strings>
        <Strings>FT_DEVICE_AM</Strings>
        <Strings>FT_DEVICE_100AX</Strings>
        <Strings>FT_DEVICE_UNKNOWN</Strings>
        <Strings>FT_DEVICE_2232C</Strings>
        <Strings>FT_DEVICE_232R</Strings>
        <Strings>FT_DEVICE_2232H</Strings>
        <Strings>FT_DEVICE_4232H</Strings>
        <Strings>FT_DEVICE_232H</Strings>
        <Strings>FT_DEVICE_X_SERIES</Strings>
        <Strings>FT_DEVICE_4222H_0</Strings>
        <Strings>FT_DEVICE_4222H_1_2</Strings>
        <Strings>FT_DEVICE_4222H_3</Strings>
        <Strings>FT_DEVICE_4222_PROG</Strings>
        <Strings>FT_DEVICE_900</Strings>
        <Strings>FT_DEVICE_930</Strings>
        <Strings>FT_DEVICE_UMFTPD3A</Strings>
        <Strings>FT_DEVICE_2233HP</Strings>
        <Strings>FT_DEVICE_4233HP</Strings>
        <Strings>FT_DEVICE_2232HP</Strings>
        <Strings>FT_DEVICE_4232HP</Strings>
        <Strings>FT_DEVICE_233HP</Strings>
        <Strings>FT_DEVICE_232HP</Strings>
        <Strings>FT_DEVICE_2232HA</Strings>
        <Strings>FT_DEVICE_4232HA</Strings>
        <Values>0</Values>
        <Values>1</Values>
        <Values>2</Values>
        <Values>3</Values>
        <Values>4</Values>
        <Values>5</Values>
        <Values>6</Values>
        <Values>7</Values>
        <Values>8</Values>
        <Values>9</Values>
        <Values>10</Values>
        <Values>11</Values>
        <Values>12</Values>
        <Values>13</Values>
        <Values>14</Values>
        <Values>15</Values>
        <Values>16</Values>
        <Values>17</Values>
        <Values>18</Values>
        <Values>19</Values>
        <Values>20</Values>
        <Values>21</Values>
        <Values>22</Values>
        <Values>23</Values>
        <Values>24</Values>
        <NumBits>32</NumBits>
        <Annotations type="mwAnnotation.EnumAnnotation" uuid="1ed4dd8b-e583-49af-9dc0-5141d37205fd">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="3099ba10-a5ca-49ac-9d3b-7c321444e9a4">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b5acb007-498e-4408-8c46-b373fd5414d8">
          <Col>6</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>238</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.EnumType" uuid="64619a8e-7462-4e8c-8a67-79a0c5dd3849">
        <Comments>/** @{
 * @name FT_DEVICE_LIST_INFO_NODE Device Information Flags
 * @par Summary
 * These flags are used in the Flags member of FT_DEVICE_LIST_INFO_NODE to indicated the state of 
 * the device and speed of the device.
*/</Comments>
        <StorageType type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1"/>
        <Strings>FT_FLAGS_OPENED</Strings>
        <Strings>FT_FLAGS_HISPEED</Strings>
        <Values>1</Values>
        <Values>2</Values>
        <NumBits>32</NumBits>
        <Annotations type="mwAnnotation.EnumAnnotation" uuid="e6a6dbe9-d74e-448c-ac01-c2db60ec8b5a">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="168cf7fa-2675-4df4-8a0a-08b86edbcd2c">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="61ce7c31-6693-4537-86d8-05ab7ac58cf4">
          <Col>6</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>361</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="f4b9b446-85a8-4a46-91bf-3ccc2bf4ba18">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="b2638126-ea33-4656-b636-a3366c96a192">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="b08b8c8d-d565-4daf-8544-299d91ce092c"/>
          <Name>~_ft_device_list_info_node</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="5a1803c7-5651-4d50-bd01-95cbd669ebcb">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="3832869e-ca3f-4db8-b962-8ff449fbd5d8">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="4f0d4482-8828-41ec-b32d-cdaf20eab225">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="46153960-993d-453a-a03a-4305df0768c0">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="0f8f5c5d-34e0-4311-87ce-9fb6b618cdc7"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="ea61b4ff-9c49-4d0c-adb6-ce2fab4a658c"/>
          <Name>_ft_device_list_info_node</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="df6fc2c4-74ad-4594-bb08-f9fed47a1f99">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="56c631e8-037c-444a-bdd4-baae7259fde4">
              <definitionStatus>Unsupported</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="8f4ed38b-a2d8-4003-90c9-eddd56621a63">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="9608fd02-d660-4794-b8eb-91804826fb6d">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="509e39f8-8f3f-497c-b0e4-a3b29de83570"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="78207156-2b71-4f01-af4d-bef3270efeb8"/>
          <Name>_ft_device_list_info_node</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="4e1709c7-d8c1-48d8-88b9-d2727c679a93">
            <cppPosition>7</cppPosition>
            <cppSignature>_ft_device_list_info_node::_ft_device_list_info_node(_ft_device_list_info_node const &amp; input1)</cppSignature>
            <cppSignatureFcnType>void(*)(_ft_device_list_info_node const &amp;)</cppSignatureFcnType>
            <description>clib.ftLib.FT_DEVICE_LIST_INFO_NODE Constructor of C++ class _ft_device_list_info_node.</description>
            <inputs type="mwAnnotation.Argument" uuid="a75650c8-9c6c-4685-8045-f997d4754312">
              <cppPosition>1</cppPosition>
              <cppType>[_ft_device_list_info_node]ConstRef</cppType>
              <isConstData>true</isConstData>
              <mwType>clib.ftLib.FT_DEVICE_LIST_INFO_NODE</mwType>
              <name>input1</name>
              <validTypes>clib.ftLib.FT_DEVICE_LIST_INFO_NODE</validTypes>
            </inputs>
            <name>x_ft_device_list_info_node</name>
            <ptKey>A/_ft_device_list_info_node@[_ft_device_list_info_node]ConstRef</ptKey>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="e9f0d49b-80c1-42c6-8875-e187d5cff828"/>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="7f02445a-c950-4182-93b6-40cae79cdbd0">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="8ae2495e-2db4-4b64-9169-47fc54a9e0f9"/>
          <Name>_ft_device_list_info_node</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="0f20bf62-b0cd-4440-a822-fc057b3d2f00">
            <cppPosition>7</cppPosition>
            <cppSignature>_ft_device_list_info_node::_ft_device_list_info_node()</cppSignature>
            <cppSignatureFcnType>void(*)()</cppSignatureFcnType>
            <description>clib.ftLib.FT_DEVICE_LIST_INFO_NODE Constructor of C++ class _ft_device_list_info_node.</description>
            <name>x_ft_device_list_info_node</name>
            <ptKey>A/_ft_device_list_info_node</ptKey>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="76bd4004-33ed-432f-b20c-9551d0b415da"/>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="6445a5dd-623d-4896-83e1-82b9c2df15df">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="ada8c77f-7935-4d6f-a02f-a6d36c17cec3">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="509e39f8-8f3f-497c-b0e4-a3b29de83570"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="26875db4-dfd0-4793-a28e-f1754b9a50d2"/>
          <Name>operator=</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="5a73ff28-731e-4d65-b2d1-3ddeecd177f1">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="5183c7ac-7efc-408e-9a23-e390b8584ef8">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="14f514b9-6ef0-4a2b-8f9a-c3b7a7f262a1">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="32c92a28-a884-4887-8462-8b6e862f480a">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="0f8f5c5d-34e0-4311-87ce-9fb6b618cdc7"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="1692a7a1-3f78-4000-a808-10babbf24445"/>
          <Name>operator=</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="37a69e21-af7e-4140-88bf-67496c506a3e">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="7f728007-dd9b-4320-b253-dde47e636a31">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="9a69c54e-ca1b-4d0a-b9ec-6a24aaa6d07f">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>Flags</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="56fc40c1-6db0-4bed-8c82-fe68c2a0ffaa">
            <cppPosition>1</cppPosition>
            <cppSignature>ULONG _ft_device_list_info_node::Flags</cppSignature>
            <cppType>[unsigned long]</cppType>
            <description>uint32    Data member of C++ class _ft_device_list_info_node.</description>
            <getterPTKey>DM/?get/_ft_device_list_info_node/Flags</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint32</mwType>
            <setterPTKey>DM/?set/_ft_device_list_info_node/Flags</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="97b12c4f-f5e3-4b29-88fe-92de5fefde20"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="35305250-6c76-45b6-8962-64784da1e24c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>463</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c9b554a5-d2d8-4e07-bb37-ca86aa028ee1">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>Type</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="a9995403-d5ff-4b3d-aa9a-3de2e66b51f2">
            <cppPosition>2</cppPosition>
            <cppSignature>ULONG _ft_device_list_info_node::Type</cppSignature>
            <cppType>[unsigned long]</cppType>
            <description>uint32    Data member of C++ class _ft_device_list_info_node.</description>
            <getterPTKey>DM/?get/_ft_device_list_info_node/Type</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint32</mwType>
            <setterPTKey>DM/?set/_ft_device_list_info_node/Type</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="e11eb108-4627-4f70-b9e2-35ec7fed6dd1"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="13d8d576-f2b8-4069-acbe-e5a5de67e3cf">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>464</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d6a4d18a-7d79-412f-b062-16e82472f684">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>ID</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="23c2f777-da94-41f1-a5e7-6b62d6a583fa">
            <cppPosition>3</cppPosition>
            <cppSignature>ULONG _ft_device_list_info_node::ID</cppSignature>
            <cppType>[unsigned long]</cppType>
            <description>uint32    Data member of C++ class _ft_device_list_info_node.</description>
            <getterPTKey>DM/?get/_ft_device_list_info_node/ID</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint32</mwType>
            <setterPTKey>DM/?set/_ft_device_list_info_node/ID</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="bd1eb402-a251-4232-914d-0c25c39d94e8"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7714393d-8dc6-46bb-b8bb-34525015bae8">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>465</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d7fb8ce4-d073-476e-807c-4b666a7bd255">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>LocId</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="702fdd89-02fb-4abc-86cd-9cccb4ec3cc4">
            <cppPosition>4</cppPosition>
            <cppSignature>DWORD _ft_device_list_info_node::LocId</cppSignature>
            <cppType>[unsigned long]</cppType>
            <description>uint32    Data member of C++ class _ft_device_list_info_node.</description>
            <getterPTKey>DM/?get/_ft_device_list_info_node/LocId</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint32</mwType>
            <setterPTKey>DM/?set/_ft_device_list_info_node/LocId</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="0b6b400e-d3c7-4f57-a07a-0d3081e854a4"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fd8e4a74-3b28-420a-a09a-15dd141a8938">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>466</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="66ec8837-04d1-4b51-8cc4-bb2217eca441">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.ArrayType" uuid="2401867d-f007-4dae-88e0-4cc297e14a01"/>
          <Name>SerialNumber</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="83355c10-1cda-40d7-83f8-5693d6d4a7fc">
            <cppPosition>5</cppPosition>
            <cppSignature>char [16] _ft_device_list_info_node::SerialNumber</cppSignature>
            <cppType>[char]Arr16</cppType>
            <description>clib.array.ftLib.Char    Data member of C++ class _ft_device_list_info_node.</description>
            <dimensions type="mwAnnotation.FixedDimension" uuid="7d89afcd-b60f-4a4a-94b3-3f4208b55349">
              <value>16</value>
            </dimensions>
            <getterPTKey>DM/?get/_ft_device_list_info_node/SerialNumber</getterPTKey>
            <mwType>clib.array.ftLib.Char</mwType>
            <setterPTKey>DM/?set/_ft_device_list_info_node/SerialNumber</setterPTKey>
            <shape>Array</shape>
            <storage>Array</storage>
            <validTypes>clib.array.ftLib.Char</validTypes>
            <validTypes>int8</validTypes>
            <validTypes>string</validTypes>
            <validTypes>char</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="6007c21d-a8a0-493e-bd01-37fd5db92408"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="01688901-1d13-44dd-9137-6f921e119129">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>467</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2505b633-6a42-4222-b9cc-4debff69bd7a">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.ArrayType" uuid="af15b7e4-ffe3-47d9-924b-8f9fa6dce171"/>
          <Name>Description</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="0a309021-7037-402f-a2f3-df51f6e902d2">
            <cppPosition>6</cppPosition>
            <cppSignature>char [64] _ft_device_list_info_node::Description</cppSignature>
            <cppType>[char]Arr64</cppType>
            <description>clib.array.ftLib.Char    Data member of C++ class _ft_device_list_info_node.</description>
            <dimensions type="mwAnnotation.FixedDimension" uuid="4fa52aa5-08f1-443e-a1e1-1caf0721397f">
              <value>64</value>
            </dimensions>
            <getterPTKey>DM/?get/_ft_device_list_info_node/Description</getterPTKey>
            <mwType>clib.array.ftLib.Char</mwType>
            <setterPTKey>DM/?set/_ft_device_list_info_node/Description</setterPTKey>
            <shape>Array</shape>
            <storage>Array</storage>
            <validTypes>clib.array.ftLib.Char</validTypes>
            <validTypes>int8</validTypes>
            <validTypes>string</validTypes>
            <validTypes>char</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="3cdeb912-0d05-4a16-8538-d42d25881faf"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b546ee08-3874-44b1-b7a9-f96fa7d3479f">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>468</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e755ddd5-65f1-4682-b206-3c55af8cbec7">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="cb344aee-e42b-4dd3-8fb3-abca084ac837">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="5597f5d5-24fe-4ebb-b6b9-f280188589e6">
              <definitionStatus>Unsupported</definitionStatus>
            </integrationStatus>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a37c58e0-7d04-45c9-8123-fe875493ed20">
            <Col>13</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>469</Line>
          </DefPos>
        </Members>
        <Name>_ft_device_list_info_node</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="4c8d4502-3d1a-4607-b165-0d67622d76ff">
          <deallocatorPTKey>D/_ft_device_list_info_node</deallocatorPTKey>
          <description>clib.ftLib.FT_DEVICE_LIST_INFO_NODE    Representation of C++ class _ft_device_list_info_node.</description>
          <isAssignable>true</isAssignable>
          <isDestructible>true</isDestructible>
          <name>clib.ftLib.FT_DEVICE_LIST_INFO_NODE</name>
          <needArray>true</needArray>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d287603d-5d50-4b4b-93f3-53a050e96d85"/>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="eaad1c37-123f-434c-bcc1-3ba55dd00807">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="0fd016af-a242-4a92-bd16-4f7c2cc78540">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="aef29511-308a-4b9a-ab00-ed85dbf77246"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d94c166e-2d76-46ea-b78c-5539fafa83cf">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>462</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="2401867d-f007-4dae-88e0-4cc297e14a01">
        <Dimensions>16</Dimensions>
        <Type type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8b844a28-cb3f-4799-b509-574969d878be">
          <Col>20</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>467</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="af15b7e4-ffe3-47d9-924b-8f9fa6dce171">
        <Dimensions>64</Dimensions>
        <Type type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7a338388-410c-4847-bc96-2a54c6ba7c06">
          <Col>19</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>468</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="b08b8c8d-d565-4daf-8544-299d91ce092c">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ea61b4ff-9c49-4d0c-adb6-ce2fab4a658c">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="0f8f5c5d-34e0-4311-87ce-9fb6b618cdc7"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="0f8f5c5d-34e0-4311-87ce-9fb6b618cdc7">
        <Type type="cxxfe.ast.types.StructType" uuid="f4b9b446-85a8-4a46-91bf-3ccc2bf4ba18"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="78207156-2b71-4f01-af4d-bef3270efeb8">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="509e39f8-8f3f-497c-b0e4-a3b29de83570"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="509e39f8-8f3f-497c-b0e4-a3b29de83570">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="3ed1e879-9d33-452a-bc87-d30ebba7c2f7"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="3ed1e879-9d33-452a-bc87-d30ebba7c2f7">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="f4b9b446-85a8-4a46-91bf-3ccc2bf4ba18"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="8ae2495e-2db4-4b64-9169-47fc54a9e0f9">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="26875db4-dfd0-4793-a28e-f1754b9a50d2">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="509e39f8-8f3f-497c-b0e4-a3b29de83570"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="0b7005d8-f7b6-4941-8e92-6c32271006c6"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="0b7005d8-f7b6-4941-8e92-6c32271006c6">
        <Type type="cxxfe.ast.types.StructType" uuid="f4b9b446-85a8-4a46-91bf-3ccc2bf4ba18"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="1692a7a1-3f78-4000-a808-10babbf24445">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="0f8f5c5d-34e0-4311-87ce-9fb6b618cdc7"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="0b7005d8-f7b6-4941-8e92-6c32271006c6"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="fadb57b9-0245-4b0a-9d5d-77d4ba343da9">
        <Type type="cxxfe.ast.types.StructType" uuid="f4b9b446-85a8-4a46-91bf-3ccc2bf4ba18"/>
        <Name>FT_DEVICE_LIST_INFO_NODE</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4d7e5412-f918-4093-9d9d-4da4cea220ec">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>470</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="06cf63f8-aba6-405e-b915-a65fe666a435">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="93c7c580-82ec-47cc-82ea-70458ff9e6d4">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="7a67f212-97f3-42df-9f78-234f2223bc34"/>
          <Name>~ft_program_data</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="a7bf7ff9-8ad3-4d8e-a154-93cd6efc1a17">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="ce9cf531-f5c5-46de-86d9-36672fc5cfd4">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="78090392-b141-4d56-a6f4-87f83f89f0c8"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="4ea9f10d-7433-45b0-978f-d83a6822e2c4"/>
          <Name>ft_program_data</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="93f5479a-79d8-4e72-8250-6c90f94ac571">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="4e6b42ef-00b5-404c-a60f-6102c96dd9d8">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="a66075f1-b7cf-4b9d-b764-2c8a18084307"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="12811e2e-9afd-46d2-a994-2b324592c1d1"/>
          <Name>ft_program_data</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="18c8d8c8-01c0-4d05-96ad-9b93df096332">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="d3f0aab8-fd9b-418a-bac3-471c4ed056f9"/>
          <Name>ft_program_data</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="92c16913-b161-4592-b08e-2436ed6fe58f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="471bbd17-3095-417e-91b3-ad5eb01f6aa6">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="a66075f1-b7cf-4b9d-b764-2c8a18084307"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="e4425444-6369-445a-bdf4-e80ba16d034e"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="1c516861-1a93-4034-920a-bd70c9561c74">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="c4392491-6c6d-45a8-804d-ef2e6155bc39">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="78090392-b141-4d56-a6f4-87f83f89f0c8"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="4360a84d-26e2-44ad-8677-da28d7432357"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="cbeaef46-d5a9-4b94-a9db-6d3f073fdae6">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>Signature1</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ea7a0f74-353d-4662-9abd-c7e57785ecea">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1522</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e5d7441f-95f3-4a97-ae4f-131d297e1479">
          <Access>Public</Access>
          <Comments>/// Header - must be 0x00000000 </Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>Signature2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="370e5d5e-13df-4311-9450-460e080f00ee">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1523</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="747b0d38-c841-4866-81c6-faf23c292b7d">
          <Access>Public</Access>
          <Comments>/// Header - must be 0xffffffff</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>Version</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2e6740b7-766a-41ad-8c12-56e105cfb45a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1524</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e87f5871-4c75-421e-ace2-6d2474c86061">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>VendorId</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6c326c28-dab1-4325-8507-181677d465f6">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1532</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9363ad5d-c1f4-4a74-9f3f-79a0a21e7fe1">
          <Access>Public</Access>
          <Comments>/// 0x0403</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>ProductId</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b5b5e121-54b6-49be-a063-451dd240d7b3">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1533</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="acdfacbb-f526-43c9-b509-3aef7a18e7dd">
          <Access>Public</Access>
          <Comments>/// 0x6001</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>Manufacturer</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="47ee0987-6610-4304-a62c-0826df69a84a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1534</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="67a50c52-fbd2-4d5f-8314-8505724bd627">
          <Access>Public</Access>
          <Comments>/// &quot;FTDI&quot;</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>ManufacturerId</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3c1aa675-92d8-4df5-9b92-e2cc09af2c14">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1535</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="92fc821e-3ec4-41fd-a699-333b1b1035a6">
          <Access>Public</Access>
          <Comments>/// &quot;FT&quot;</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>Description</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="16a63234-05f8-48e4-875a-1c300438720a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1536</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="dda2a4d9-16f1-4ce4-b15d-5f149fe65f66">
          <Access>Public</Access>
          <Comments>/// &quot;USB HS Serial Converter&quot;</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>SerialNumber</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="383a8567-1cba-4f97-b51c-9e6f9872d16e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1537</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e6373322-7f79-4de5-85f4-18acfbb8c35b">
          <Access>Public</Access>
          <Comments>/// &quot;FT000001&quot; if fixed, or NULL</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>MaxPower</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c230ef2d-853f-4633-9aaa-0a8305a22183">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1538</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="61c5a2bb-be53-4a72-8e17-95d441d33061">
          <Access>Public</Access>
          <Comments>/// 0 &lt; MaxPower &lt;= 500</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>PnP</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8e00ab4f-84aa-478b-9caf-e451971fe078">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1539</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="be9f9b67-b069-40ff-8d63-b9a5f43a991b">
          <Access>Public</Access>
          <Comments>/// 0 = disabled, 1 = enabled</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>SelfPowered</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2e156bd1-07f9-414a-8d4b-845f332897a7">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1540</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5b563fa5-197f-44f0-bfdc-56f0efe2d263">
          <Access>Public</Access>
          <Comments>/// 0 = bus powered, 1 = self powered</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>RemoteWakeup</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c9e95a5e-080d-4194-b32b-2b30d4ff58ee">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1541</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5ef595e7-746a-4db7-8502-d41feb481fea">
          <Access>Public</Access>
          <Comments>/// 0 = not capable, 1 = capable
/// Rev4 (FT232B) extensions</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Rev4</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="11829bff-df2e-458f-8ac0-53dce0610b95">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1543</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="facb9f13-8ecf-4cea-987d-13efe931fd41">
          <Access>Public</Access>
          <Comments>/// non-zero if Rev4 chip, zero otherwise</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsoIn</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fe597898-13c2-4b2e-bfcf-56045ffc0a2c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1544</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c8de5c7f-14d9-48e6-9ad2-05fca3219e06">
          <Access>Public</Access>
          <Comments>/// non-zero if in endpoint is isochronous</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsoOut</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="47e1a4da-3323-4136-b3ef-ad83c1080bcd">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1545</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7a9da289-f96c-4909-bbd1-54ce48d2dc69">
          <Access>Public</Access>
          <Comments>/// non-zero if out endpoint is isochronous</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PullDownEnable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a2d734f1-390e-43b9-b7e2-c91da9b6d7db">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1546</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d1a2eada-9ecc-4f94-a25e-e43e259edc2f">
          <Access>Public</Access>
          <Comments>/// non-zero if pull down enabled</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SerNumEnable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="26173473-ea7e-49c4-a147-908f7c808082">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1547</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8323e7c9-d05b-49c4-a624-66f455308eec">
          <Access>Public</Access>
          <Comments>/// non-zero if serial number to be used</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>USBVersionEnable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="58d1d8d8-1c42-47ea-9cef-b58b7b4b4459">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1548</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e469a0aa-c998-44d4-a5a4-b6edc58e004d">
          <Access>Public</Access>
          <Comments>/// non-zero if chip uses USBVersion</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>USBVersion</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="89e07e5f-0964-4134-80da-ae81b81449c6">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1549</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e09bdd5a-5cbd-4745-9a7a-b30321cd5b0a">
          <Access>Public</Access>
          <Comments>/// BCD (0x0200 =&gt; USB2)
/// Rev 5 (FT2232) extensions</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Rev5</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="21377132-ac00-4196-afbe-127d483cc978">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1551</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b035dc9e-0683-4064-961c-44daceb7ce4c">
          <Access>Public</Access>
          <Comments>/// non-zero if Rev5 chip, zero otherwise</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsoInA</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="50e521e7-e882-4330-9311-e2d1847e0a98">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1552</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="cd801dc3-1faf-4345-9abc-c8dd58b96547">
          <Access>Public</Access>
          <Comments>/// non-zero if in endpoint is isochronous</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsoInB</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="63b6c2ae-a06b-41f7-97c4-32b18ac2640c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1553</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8da549ff-92d0-4d36-b4ee-bb91bfbd638c">
          <Access>Public</Access>
          <Comments>/// non-zero if in endpoint is isochronous</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsoOutA</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d217010e-4f2d-483c-b6ca-6e02a1fd3780">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1554</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d2b91a57-7610-40ba-9a31-4d09ce04f798">
          <Access>Public</Access>
          <Comments>/// non-zero if out endpoint is isochronous</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsoOutB</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f367bfae-cf3e-4ce9-aed5-e09a5ed8fe22">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1555</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="edfb1007-2875-4114-90e0-d97eed9392a1">
          <Access>Public</Access>
          <Comments>/// non-zero if out endpoint is isochronous</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PullDownEnable5</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cc4e2434-bfbd-47e5-b87e-fc09211e2ffb">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1556</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8f887730-18b9-4a89-9779-71361beff0f2">
          <Access>Public</Access>
          <Comments>/// non-zero if pull down enabled</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SerNumEnable5</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e0eee517-aa61-4727-8e37-05173f14d85f">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1557</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="bc395f41-942d-4519-a524-228ee589b607">
          <Access>Public</Access>
          <Comments>/// non-zero if serial number to be used</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>USBVersionEnable5</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="235867da-7bc8-4d80-8165-ddc806e0d22e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1558</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f02c7144-0715-46da-8de7-4a5fb41287d2">
          <Access>Public</Access>
          <Comments>/// non-zero if chip uses USBVersion</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>USBVersion5</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8e2e7d0b-1c57-45a6-89aa-217164ed33f2">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1559</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e3cbe0c4-d29d-4d83-9103-20eff135bf32">
          <Access>Public</Access>
          <Comments>/// BCD (0x0200 =&gt; USB2)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsHighCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9eb24460-e22c-4cc7-b605-b1c7a027256a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1560</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e4d8dc99-600b-4553-a850-a242eb3bb22a">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is high current</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsHighCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f86061c7-a0f0-40f3-927c-7835b0acc942">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1561</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c3663d38-1304-4d28-bd36-e554e4bc5ae4">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is high current</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFAIsFifo</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="72629942-ab09-455f-9cb1-f7ae7c270818">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1562</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="21ccfa59-d89b-44cc-88fa-e99ec8d6cc9d">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFAIsFifoTar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="921edeb7-9a93-41d6-bdc8-d0f0c6b1d02d">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1563</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6d1cd532-6d4a-4bd7-8bbc-f1f75fae0c4e">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO CPU target</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFAIsFastSer</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0c5592c1-04f0-4673-a659-22c892942a47">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1564</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="496e830a-d67e-4412-8886-8e71596e33fd">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is Fast serial</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsVCP</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="debb74e3-0819-4e32-8885-645fdbd29c5e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1565</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3acabe7e-228a-4a81-af4c-82d580296333">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFBIsFifo</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="81d0f39d-9219-4c57-bae1-56646eb9ff66">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1566</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="40f3880c-4525-4fe2-b4b3-e6c59069a2a0">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFBIsFifoTar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="daacc390-e2bf-412b-99f5-51544166cd27">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1567</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="720c87fb-29b1-4eed-bfbe-86423a14bbe1">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO CPU target</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFBIsFastSer</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1c879383-b061-4505-8272-7dd2aff7c614">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1568</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4eee0a5e-546d-4962-a934-402dcf2e6437">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is Fast serial</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsVCP</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="15d972a1-dc03-4205-a855-8d370dcfce4e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1569</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9b1f085c-da11-4436-87c0-c0c3ae899140">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers
/// Rev 6 (FT232R) extensions</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>UseExtOsc</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2267af87-5c04-4008-b50a-a9969358d9a7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1571</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e48bb5da-26cf-485a-925c-e03a44786552">
          <Access>Public</Access>
          <Comments>/// Use External Oscillator</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>HighDriveIOs</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="39419be4-c09d-4075-b40e-2455f6971ffc">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1572</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="dfeff53b-5fcf-4a61-bb48-600c1c184902">
          <Access>Public</Access>
          <Comments>/// High Drive I/Os</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>EndpointSize</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0615ade9-88d9-4247-ae01-1e4bf0012413">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1573</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="64c17e15-546a-498c-8200-b54cc30666d6">
          <Access>Public</Access>
          <Comments>/// Endpoint size</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PullDownEnableR</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fd337758-8698-4161-bcf4-352ff66019fd">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1574</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ba61f07e-d506-4089-9aa1-dec372eda9d8">
          <Access>Public</Access>
          <Comments>/// non-zero if pull down enabled</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SerNumEnableR</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1b506384-b337-43f9-9da4-2e758e6b063d">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1575</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ec232c88-bebe-4571-af93-99123f511ba9">
          <Access>Public</Access>
          <Comments>/// non-zero if serial number to be used</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertTXD</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="edec6da2-9a82-4319-884c-39ac27cdb181">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1576</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="82dd7761-c4cb-4368-a0cc-53a536147e8a">
          <Access>Public</Access>
          <Comments>/// non-zero if invert TXD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertRXD</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1554102d-4916-42de-ad79-60622bf98222">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1577</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="82ef8f03-9f58-4a69-964d-685d22102269">
          <Access>Public</Access>
          <Comments>/// non-zero if invert RXD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertRTS</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="805efca3-b2d9-4bed-a7f5-5a3ef4c47e1e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1578</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ef839d0f-d9a0-470d-b3fe-6eb9b2d376f9">
          <Access>Public</Access>
          <Comments>/// non-zero if invert RTS</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertCTS</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0b2afb9d-1a18-43bb-b779-4f52d3949197">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1579</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0af0ccc0-ad35-4b81-a35c-435da8ccf316">
          <Access>Public</Access>
          <Comments>/// non-zero if invert CTS</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertDTR</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="89141e41-a9c9-4412-b28b-57107d0829c4">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1580</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="510a4a7e-d199-44a2-80ba-bee1ed9a31a3">
          <Access>Public</Access>
          <Comments>/// non-zero if invert DTR</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertDSR</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9cb959ee-da90-4610-939c-b1a8a0f3eefc">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1581</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6adeacaa-4bc8-44a8-bfe8-ae9089126358">
          <Access>Public</Access>
          <Comments>/// non-zero if invert DSR</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertDCD</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7a5f9e85-d480-440c-8e6f-9258814219e3">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1582</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="151569d9-eafd-4583-9b33-2da2aca324cf">
          <Access>Public</Access>
          <Comments>/// non-zero if invert DCD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertRI</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0a64a8cd-c8b2-48ca-90b8-78afa9f75991">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1583</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5bb822bb-a544-4ca4-9441-5fbbe0c6a75c">
          <Access>Public</Access>
          <Comments>/// non-zero if invert RI</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus0</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4430a193-46f9-4aba-bc30-fc92003bb943">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1584</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2bbe2c4e-e04c-47f8-b2b3-6bc41469165d">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus1</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2b633ee8-036a-4573-8624-7fefbf2b43d1">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1585</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5120b1f0-6c12-4cb7-a1ad-8be47a381ab6">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c476b28f-6db6-4959-93bd-c7f91bcfcd6c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1586</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="70eb4d13-29bf-4be4-8cc8-7280664b1a86">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus3</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="48269187-d438-49bd-aafe-6a8305afa2f4">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1587</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="55271ab1-c3f3-41c8-baea-b53e1f1d011e">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus4</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2f4ce804-3b0e-40ad-a0e0-d6f5b6550cac">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1588</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e5775094-541b-4207-9b4c-9de932968d1e">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>RIsD2XX</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="07177381-0a55-4dbb-958c-d401d5bf30ba">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1589</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5e7215e2-3309-4553-bd7f-8bb988cefdd9">
          <Access>Public</Access>
          <Comments>/// non-zero if using D2XX driver
/// Rev 7 (FT2232H) Extensions</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PullDownEnable7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="35d0510b-a895-42aa-a0bb-04a9a018e0cb">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1591</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="88188f63-4db0-4ee3-807b-00767d7c1774">
          <Access>Public</Access>
          <Comments>/// non-zero if pull down enabled</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SerNumEnable7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="efd6f069-62b8-42e0-9014-eb8a48887ea6">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1592</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a1bf0fb4-5c7a-457d-a3c4-8a613177a515">
          <Access>Public</Access>
          <Comments>/// non-zero if serial number to be used</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ALSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="115c0a0f-20b7-4f64-95c8-dd8a7fc35735">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1593</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b932e10d-0264-4359-9318-80156abdc644">
          <Access>Public</Access>
          <Comments>/// non-zero if AL pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ALSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9684e0c0-eb0c-4ff8-b2d0-a46ad1618997">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1594</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="aff5c7f9-99b4-4451-8206-6f44a9963635">
          <Access>Public</Access>
          <Comments>/// non-zero if AL pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ALDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="055b857f-3d70-4557-ad95-47cd6355d5eb">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1595</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4471395c-a789-43f8-9178-ab787337d061">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AHSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="be0b2681-475b-4612-8811-273d3bd1ef81">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1596</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c88d369c-59a4-4a1c-b28a-ec197e725064">
          <Access>Public</Access>
          <Comments>/// non-zero if AH pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AHSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bb82b46b-ae96-4c72-b494-3ebe11133ae9">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1597</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a418e75b-d045-4aad-a089-a681672ad9a2">
          <Access>Public</Access>
          <Comments>/// non-zero if AH pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AHDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cb5e3af4-a4c1-4e7e-a418-f21c53411c03">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1598</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9e76d9c1-db30-41a3-8a13-677f1b3f5b24">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BLSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="98caf44b-7af9-4ff1-9296-aeecf4f841bb">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1599</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d84bee2d-4f0d-43ff-aaed-f42cf6aab0cb">
          <Access>Public</Access>
          <Comments>/// non-zero if BL pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BLSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2de5ea6d-52bb-4ae1-8818-efa88bbc84a8">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1600</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2f2977e6-fe97-4c7d-99d4-ffe71e9f42e7">
          <Access>Public</Access>
          <Comments>/// non-zero if BL pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BLDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="dcfa4f28-605d-47b6-ab59-7c3ce538cd77">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1601</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a3b8b72c-9218-4f1f-b048-fb0ba27df2c4">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BHSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fa866ec4-d57a-4cba-9725-b59a8b7914ac">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1602</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="41780c7c-efed-4e0f-b1b8-6bffa68363d8">
          <Access>Public</Access>
          <Comments>/// non-zero if BH pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BHSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="daef6243-807e-45d3-9849-e9088fa5f9a7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1603</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1a044e5c-4f29-45a7-b5d9-048f3a6e330c">
          <Access>Public</Access>
          <Comments>/// non-zero if BH pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BHDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9b81d596-9349-4096-a7f8-b57e7e19c4a7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1604</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9093a901-a1e5-411a-8f97-80847256f902">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFAIsFifo7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b7b005e3-0b0c-42d3-863c-a689660892a7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1605</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="dd18a88f-1459-46ef-b921-1cdc3276e43c">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFAIsFifoTar7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0d4c1534-b8ac-48ab-aabb-de8845bed2a7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1606</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="34dca12d-d213-480f-90cf-aad925eb9c0e">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO CPU target</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFAIsFastSer7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b8999242-e94d-4084-94eb-97aea6bc9272">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1607</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b725397c-9dae-4304-9245-f9242788c367">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is Fast serial</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsVCP7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="93a00406-a306-4a0c-840e-610ddd7008d2">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1608</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="69975c78-addd-4209-8bac-040a1060837d">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFBIsFifo7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5ff35ad4-fb86-433e-9268-cba5e9e321a5">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1609</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2df1391c-156e-4b48-9766-47d5dca28520">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFBIsFifoTar7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="00e7bff2-4397-45c6-b1aa-5ecf28de3010">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1610</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e27765e3-aca1-4e57-8894-17eab0f4f3f5">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO CPU target</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IFBIsFastSer7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7f9fa191-5dbb-4329-a34d-feb17fb23104">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1611</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="431b4a8f-8351-4b41-859a-e7c9ad6b1670">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is Fast serial</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsVCP7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="74de5759-ff9c-4800-a980-139cd99f7c9a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1612</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3ad8b4b7-dba3-4e10-9834-5a3bf03d8388">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PowerSaveEnable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="687a1652-dcd3-4a69-b719-ce2760498674">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1613</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c1a9996d-83a7-4fd0-a798-87c94bddbb2f">
          <Access>Public</Access>
          <Comments>/// non-zero if using BCBUS7 to save power for self-powered designs
/// Rev 8 (FT4232H) Extensions</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PullDownEnable8</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6e656b65-e32a-47bc-8bc6-b2aed93219c5">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1615</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="82648417-acec-44b2-bb73-d146328d24aa">
          <Access>Public</Access>
          <Comments>/// non-zero if pull down enabled</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SerNumEnable8</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2b480f00-542f-482a-abc5-0e792de2a342">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1616</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f9298247-aa7c-4850-8dcc-2f6ec1653141">
          <Access>Public</Access>
          <Comments>/// non-zero if serial number to be used</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ASlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d1ab7549-fcf5-40c7-ac99-0e661cdf9914">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1617</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="356c5efc-3095-41f5-958c-02840b903fb1">
          <Access>Public</Access>
          <Comments>/// non-zero if A pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ASchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c723a00d-f308-4403-8f09-69922a82581a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1618</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a533de36-9d81-4af5-a346-1ebd7b8fa22b">
          <Access>Public</Access>
          <Comments>/// non-zero if A pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8cf353ab-c78a-40cc-887d-1f99b9d1bf96">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1619</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="48b8f541-c83e-46a2-9ba6-349b5c190e77">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="df71a532-7f6f-4557-8fe7-321bec5f714b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1620</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="31ca97e5-b2c1-45c1-9d63-dff6f29302b8">
          <Access>Public</Access>
          <Comments>/// non-zero if B pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="306a28a8-0e88-44bd-8ddd-0502ce91eb29">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1621</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="82af970b-b3c7-4b93-a836-d2a45525762a">
          <Access>Public</Access>
          <Comments>/// non-zero if B pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9303688f-ded5-4598-9a85-467351ce604c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1622</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ddb28ec5-37da-4b26-9c15-45287a7dabbd">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>CSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="22ee560f-4bd2-4375-a309-649d3d1f2f14">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1623</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b79233d7-d42b-4c6c-b2c4-080626f8f462">
          <Access>Public</Access>
          <Comments>/// non-zero if C pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>CSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d625d6cb-c102-4a51-aee0-a98cf26e9384">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1624</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7d6b943b-40fe-45d4-a6fe-edbec36b0d52">
          <Access>Public</Access>
          <Comments>/// non-zero if C pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>CDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1b04b5c3-bb3b-4fff-86fc-004dce6df8be">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1625</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="be215a4e-61ea-4bcd-bb29-c1fe89747870">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0c00a75b-a701-46be-99f1-8c794b6d4bf5">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1626</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="28a68f60-361d-4100-94a3-4fa53411bf4b">
          <Access>Public</Access>
          <Comments>/// non-zero if D pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5290628a-35b0-40e4-8657-621ce547fed1">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1627</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2d75b40a-8a63-4bc9-900f-e31a0a5b2f74">
          <Access>Public</Access>
          <Comments>/// non-zero if D pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e976cfa3-6977-4e71-b56b-cd0159deacd3">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1628</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3e895ea6-83b0-4018-9134-9b06ab4f1fb1">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ARIIsTXDEN</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a8df6699-c313-40c8-a133-24afe0156970">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1629</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3f66f730-0bf5-46d0-8353-5c3f62bdda26">
          <Access>Public</Access>
          <Comments>/// non-zero if port A uses RI as RS485 TXDEN</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BRIIsTXDEN</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="04c07c62-a007-4531-909b-339bb4f33b34">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1630</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6a6512dd-0fb9-4879-9ee5-8498a68c9ce8">
          <Access>Public</Access>
          <Comments>/// non-zero if port B uses RI as RS485 TXDEN</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>CRIIsTXDEN</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a86cb4b6-c1a6-4983-8b61-216551170118">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1631</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="52eec634-fac9-40ab-94b9-3b1102b8724e">
          <Access>Public</Access>
          <Comments>/// non-zero if port C uses RI as RS485 TXDEN</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DRIIsTXDEN</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9e0032c5-d133-4fb3-933c-0c5d5a544c60">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1632</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e6acf64d-5d58-46b6-978f-78e1eefd1d40">
          <Access>Public</Access>
          <Comments>/// non-zero if port D uses RI as RS485 TXDEN</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsVCP8</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="186424b1-0bed-454d-a8c0-1207363e7243">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1633</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="67406825-5a8f-4309-9450-40f4dd305d82">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsVCP8</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5ff8f2d0-c925-4fc4-8221-f332723b708d">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1634</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6a41ecb7-f97c-4c36-bf44-8d70d230c130">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>CIsVCP8</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f7f16d1d-8b62-49cc-815b-46f7fedbc2c0">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1635</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="19e32dfc-adb6-4946-ad8c-d98bf4516cf3">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DIsVCP8</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cc562628-be70-4a53-9c22-7d73bad9307b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1636</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="cfe2299a-ad28-4a3d-9333-9e316f490177">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers
/// Rev 9 (FT232H) Extensions</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PullDownEnableH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="08a1ad3f-ca10-44f3-beb0-9780f1c9f3d0">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1638</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="fd065cf2-0098-40bd-8e25-33d16a836166">
          <Access>Public</Access>
          <Comments>/// non-zero if pull down enabled</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SerNumEnableH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="25d4e03d-3960-4753-b58e-8399c89ba44b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1639</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7446daf1-599d-4eeb-9083-c768b3d76b3c">
          <Access>Public</Access>
          <Comments>/// non-zero if serial number to be used</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ACSlowSlewH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="901c04e6-3623-4142-a336-9871bcb43fec">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1640</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3c079fa7-d936-41f8-bc9a-596f350a1b8d">
          <Access>Public</Access>
          <Comments>/// non-zero if AC pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ACSchmittInputH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="66b14626-32aa-4e81-9a07-45d937e38657">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1641</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="38faa295-11db-431b-a386-5e244515bed1">
          <Access>Public</Access>
          <Comments>/// non-zero if AC pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ACDriveCurrentH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ef1d0a37-8418-4365-abb0-9c026f2a3a97">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1642</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7735b00a-57a6-4920-a60f-8a08457dacae">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADSlowSlewH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2cf84e56-28f8-4a41-92ae-d4bb905f2c55">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1643</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e059e0d9-1515-4631-9eee-93682177c968">
          <Access>Public</Access>
          <Comments>/// non-zero if AD pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADSchmittInputH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="12fed153-80b2-4f54-a228-388c7ce7c895">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1644</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1274c61c-e03f-4807-bfd8-f084a85fe966">
          <Access>Public</Access>
          <Comments>/// non-zero if AD pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADDriveCurrentH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="17505ed9-f646-4b02-b8d7-3d0b02902f0f">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1645</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5bcfe672-b446-4e34-bfef-3643e9ca6f44">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus0H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="99d1c137-8d0d-44b9-b67c-fe2c3b67016e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1646</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1d5b7fdb-265f-4f22-8e1b-0cf115b46dc5">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus1H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8e60731a-facc-44a6-80d1-646bcf067ad2">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1647</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7be96252-e756-4616-a2c3-52f776eda776">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus2H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3a9a2275-4b1b-4203-9dbb-07b19d823827">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1648</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ec0f5fbb-9c8e-46e6-a351-8071e21ede97">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus3H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="24dd84b8-2120-4b6d-a36c-7b56a9adcecd">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1649</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="cbb1c1e2-5927-4f52-aa0f-a7c1049a7ca2">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus4H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="70fddb59-64a2-4152-b418-6dc4373c1524">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1650</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d319b85d-e6e3-47fc-bbff-12e547449aa1">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus5H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="08fdb804-d915-44dc-a7c3-56ae9c3230e7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1651</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="aa0c1579-56a6-4ab9-8c9b-81e69adc8328">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus6H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c1a97300-907a-49a0-916d-a4f9a65b6f4e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1652</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0f210f9e-2a16-4524-b1a2-e80603157ea3">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus7H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5821c961-0887-4d1e-b8c6-d1b0ca17d383">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1653</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4eb6704d-6246-43bd-bade-77f37a7435cf">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus8H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1954bf02-a3b6-4961-93b2-1a2cfda3d093">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1654</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="133c2dd0-bdc6-42c9-8c95-ac308c131da3">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus9H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1addca09-24f7-4022-aee7-2da5d5ab6306">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1655</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="fe7ced89-ff7f-4a3b-973a-9ac6cd5d7256">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsFifoH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4240890f-7321-4fd3-b1fc-4d93e474c3d3">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1656</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="dfa73a7e-f775-4869-93d9-4f184cc70878">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsFifoTarH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d8b81f3b-7979-49e5-93c9-3cf6b38d8af1">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1657</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d1e455ad-e561-466d-80c1-caa9aad0fdae">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO CPU target</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsFastSerH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a7311e30-ad94-4063-ac34-1155a50512af">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1658</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="940e672d-6d5f-4426-a45a-2416f03ff1d0">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is Fast serial</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsFT1248H</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="261c6dd4-d425-4395-b442-2e9160a39869">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1659</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c3a60805-e237-4b35-b13a-9fa4ef8193a5">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is FT1248</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>FT1248CpolH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d5ca83f3-7102-4b84-bb01-eae31fa667ff">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1660</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6bea1d50-90af-4e9a-9fab-74edd856962e">
          <Access>Public</Access>
          <Comments>/// FT1248 clock polarity - clock idle high (1) or clock idle low (0)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>FT1248LsbH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e85929ee-9e11-44a5-a537-8143fd391c11">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1661</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="359ac64f-f4e6-48b1-895e-98b394b84016">
          <Access>Public</Access>
          <Comments>/// FT1248 data is LSB (1) or MSB (0)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>FT1248FlowControlH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="07e25bd4-34b9-4651-ac5f-8865c6eab974">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1662</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a1a3a297-c0e1-4415-ad7f-ca75142e6085">
          <Access>Public</Access>
          <Comments>/// FT1248 flow control enable</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsVCPH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d8f2177f-9b44-4e2b-b8e3-9c8739de6a6e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1663</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6c6e6203-e730-403c-bcef-b7de98df9b5e">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PowerSaveEnableH</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f98b8695-dd21-4453-9eb1-b1f17227a552">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1664</Line>
          </DefPos>
        </Members>
        <Name>ft_program_data</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="eff5784f-51c5-4dec-a922-e2316b067c3d">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="f3c47485-eda9-499c-a4c7-b87d4fe67193">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="8efb22bb-b1ea-4e73-a435-d9f0912f65d8">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="442807b3-f2f6-4eb7-bb65-72d3f020d790">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d63a08a9-99d0-4505-b779-7556d6a94ea7"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a0282b36-cd37-4332-9f3e-f596881d35a1">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1520</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b">
        <Type type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="7a67f212-97f3-42df-9f78-234f2223bc34">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4ea9f10d-7433-45b0-978f-d83a6822e2c4">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="78090392-b141-4d56-a6f4-87f83f89f0c8"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="78090392-b141-4d56-a6f4-87f83f89f0c8">
        <Type type="cxxfe.ast.types.StructType" uuid="06cf63f8-aba6-405e-b915-a65fe666a435"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="12811e2e-9afd-46d2-a994-2b324592c1d1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="a66075f1-b7cf-4b9d-b764-2c8a18084307"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="a66075f1-b7cf-4b9d-b764-2c8a18084307">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="ae97927f-44aa-4a4f-a894-87843c80c0b1"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="ae97927f-44aa-4a4f-a894-87843c80c0b1">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="06cf63f8-aba6-405e-b915-a65fe666a435"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d3f0aab8-fd9b-418a-bac3-471c4ed056f9">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e4425444-6369-445a-bdf4-e80ba16d034e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="a66075f1-b7cf-4b9d-b764-2c8a18084307"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="cb52fc00-bbcd-4b04-8def-a4cad3f20678"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="cb52fc00-bbcd-4b04-8def-a4cad3f20678">
        <Type type="cxxfe.ast.types.StructType" uuid="06cf63f8-aba6-405e-b915-a65fe666a435"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4360a84d-26e2-44ad-8677-da28d7432357">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="78090392-b141-4d56-a6f4-87f83f89f0c8"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="cb52fc00-bbcd-4b04-8def-a4cad3f20678"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="499493d7-e096-46b5-b1ff-c9801c06bbf3">
        <Type type="cxxfe.ast.types.StructType" uuid="06cf63f8-aba6-405e-b915-a65fe666a435"/>
        <Name>FT_PROGRAM_DATA</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="115b3eb5-1ef6-47d7-8bc7-311dff4a03b1">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1666</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="1f957802-25ac-4d22-8560-48218e9b2f8d">
        <Type type="cxxfe.ast.types.PointerType" uuid="b87b74c2-e68a-4d8f-8cd1-49a386ecfdb9"/>
        <Name>PFT_PROGRAM_DATA</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="828b35f3-a00f-49e6-873b-cc2ccfb312f4">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1666</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="b87b74c2-e68a-4d8f-8cd1-49a386ecfdb9">
        <Type type="cxxfe.ast.types.StructType" uuid="06cf63f8-aba6-405e-b915-a65fe666a435"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="96c9df89-50a5-479b-a54f-d7db03a4337e">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="8a447123-f9cd-4ba2-9acf-956ec79537ea">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="027b129f-1047-4733-9c68-0fbced156d1f"/>
          <Name>~ft_eeprom_header</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="f625f394-6535-4725-8ce5-ec6e19e33697">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="2d3404a1-fa96-491a-aeda-54dab42e925c">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="43d24bbe-7ab7-4077-b523-a89115bd4448"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="2fa7a716-c4be-4dde-b0e6-3c38a53d9637"/>
          <Name>ft_eeprom_header</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="252a6ced-f794-45bd-ab07-cecf4227311a">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="7128df28-3606-41e8-8765-971f00b939f1">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="8b5eb1bf-4aa4-4bc5-a863-260467b5ba63"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="bbededa1-e362-4b06-8464-53ae5a6597ba"/>
          <Name>ft_eeprom_header</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="119d6d60-386a-4e6f-b73b-0df2474d63a4">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="d71d4844-52cc-4ef5-8576-d2806d5d3061"/>
          <Name>ft_eeprom_header</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="0ba6a1df-7e45-4481-befb-7341b22a4627">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="7a6952b5-1610-4492-b835-18d12c65aa52">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="8b5eb1bf-4aa4-4bc5-a863-260467b5ba63"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="b5eda294-20de-4928-a2ad-22b114346ae7"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="6b45625c-aa18-48f9-b02a-b67c70ffc9a7">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="70fdda75-cb9d-4d7f-ad75-2776040d4084">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="43d24bbe-7ab7-4077-b523-a89115bd4448"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="6f66f4b6-8663-4158-987c-aee5ca7fedfe"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="afddc62e-c91b-44af-82f1-9cd85db5b38c">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="9f3badb4-faef-4899-815f-7772052ec350"/>
          <Name>deviceType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="09a760b6-81fa-465c-9c1b-57800e63b0df">
            <Col>13</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1910</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4fa36959-983c-4c29-be03-19702b11a73e">
          <Access>Public</Access>
          <Comments>/// FTxxxx device type to be programmed
/// Device descriptor options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>VendorId</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5124cbcf-6990-409c-b6a8-f6f0df3815ca">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1912</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b625ca68-b232-4e3a-a137-c72b05defd85">
          <Access>Public</Access>
          <Comments>/// 0x0403</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>ProductId</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9c263dfc-31ce-4d83-9d79-3d1c44c91599">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1913</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9ef021f2-a55b-453a-9840-bbac1aac10ac">
          <Access>Public</Access>
          <Comments>/// 0x6001</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SerNumEnable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="abe48c48-6817-4b76-b3ae-cd4e4a8ecfdf">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1914</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="066dcb8e-11d9-46f4-9c6f-17f60cfb18b3">
          <Access>Public</Access>
          <Comments>/// non-zero if serial number to be used
/// Config descriptor options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>MaxPower</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f65bb28b-1beb-4d9e-9b8e-fe2a8a762b51">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1916</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="fa2442ca-32ec-45af-927e-89c557602783">
          <Access>Public</Access>
          <Comments>/// 0 &lt; MaxPower &lt;= 500</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SelfPowered</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="dbe92e4d-1252-43a4-8bf6-587eda0b596c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1917</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b755682d-ec34-4c74-9d2b-3a7921ab942b">
          <Access>Public</Access>
          <Comments>/// 0 = bus powered, 1 = self powered</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>RemoteWakeup</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f4c2c6bf-0360-4269-82ae-ae96e5ac8254">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1918</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e97aed3a-0ccc-48ce-8726-1766948f16ad">
          <Access>Public</Access>
          <Comments>/// 0 = not capable, 1 = capable
/// Hardware options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PullDownEnable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="57233aca-b246-4d0a-9e89-1e390e48c06c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1920</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_header</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="6839399e-8b7f-4da6-9847-040798316876">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="f60d376c-ae63-4d0f-b9f7-7720eac768d3">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="71a30652-f411-4e1b-8299-aa5dbb597cdd">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="b13b7888-37bc-40f9-8463-922896531cbe">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="fdddabda-e8e7-45fe-8ef6-5949b6957633"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="94cbeb2c-3658-4f93-8f37-39055adab24f">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1909</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="027b129f-1047-4733-9c68-0fbced156d1f">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2fa7a716-c4be-4dde-b0e6-3c38a53d9637">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="43d24bbe-7ab7-4077-b523-a89115bd4448"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="43d24bbe-7ab7-4077-b523-a89115bd4448">
        <Type type="cxxfe.ast.types.StructType" uuid="96c9df89-50a5-479b-a54f-d7db03a4337e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="bbededa1-e362-4b06-8464-53ae5a6597ba">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="8b5eb1bf-4aa4-4bc5-a863-260467b5ba63"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="8b5eb1bf-4aa4-4bc5-a863-260467b5ba63">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="b406bd1a-8b97-43ee-8fe5-53a24ee6c278"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="b406bd1a-8b97-43ee-8fe5-53a24ee6c278">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="96c9df89-50a5-479b-a54f-d7db03a4337e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d71d4844-52cc-4ef5-8576-d2806d5d3061">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="b5eda294-20de-4928-a2ad-22b114346ae7">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="8b5eb1bf-4aa4-4bc5-a863-260467b5ba63"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="c9b1ffc3-dddb-40fe-9825-afd7faf26499"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="c9b1ffc3-dddb-40fe-9825-afd7faf26499">
        <Type type="cxxfe.ast.types.StructType" uuid="96c9df89-50a5-479b-a54f-d7db03a4337e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6f66f4b6-8663-4158-987c-aee5ca7fedfe">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="43d24bbe-7ab7-4077-b523-a89115bd4448"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="c9b1ffc3-dddb-40fe-9825-afd7faf26499"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="667e88d6-f6d7-4973-9bd5-ac06dd69ae7e">
        <Type type="cxxfe.ast.types.StructType" uuid="96c9df89-50a5-479b-a54f-d7db03a4337e"/>
        <Name>FT_EEPROM_HEADER</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a7cf1c3d-1970-4254-9732-6b40b347fe23">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1921</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="5c10cf52-48ea-4dfc-83b1-8a8f6e253e8e">
        <Type type="cxxfe.ast.types.PointerType" uuid="25718518-856a-4f71-a3d0-46a0aaa71224"/>
        <Name>PFT_EEPROM_HEADER</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bca28283-57f9-4559-a96e-6365e3ea3f53">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1921</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="25718518-856a-4f71-a3d0-46a0aaa71224">
        <Type type="cxxfe.ast.types.StructType" uuid="96c9df89-50a5-479b-a54f-d7db03a4337e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="25fa89e4-2ce7-4363-9468-47bb34b88407">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="2c4c935f-3343-48cb-9521-f855d336180c">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="e536d58e-6678-431c-afbc-06ea8d3ba1d2"/>
          <Name>~ft_eeprom_232b</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="3f5dddce-2e10-43a5-a191-5594c5ab1c2d">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="c3f9f1f4-ddb0-4ef9-9ebc-6b3c2cf42332">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="205aaaf4-0dd6-4e21-a2d5-4d0aee007654"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="31bd4e32-78cd-4f16-b36b-88bcd8b32d41"/>
          <Name>ft_eeprom_232b</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="8202f776-2cdc-40c4-8eef-cfd80c74958b">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="5af29c29-414d-4e2e-8db2-2b35a8b003f0">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="099e7f64-c941-49b0-8b5f-0788abce9e47"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="e849ba57-0a1e-4d36-9244-38833fe017d5"/>
          <Name>ft_eeprom_232b</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="711b3274-5561-4391-bc62-5f3d0111a45a">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="665a0d88-f0eb-4aa5-8265-157140525d4a"/>
          <Name>ft_eeprom_232b</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="baea6d28-aba4-4e76-9def-83429770c4f0">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="eed93c56-0ac5-4136-83c3-cc5e7d68b768">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="099e7f64-c941-49b0-8b5f-0788abce9e47"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="200b0dd7-0a1a-45ce-920f-4724de5873a5"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="870e8555-0a55-46fc-9e99-e594e0b75449">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="d0286313-290d-4224-84ca-441f744e8d71">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="205aaaf4-0dd6-4e21-a2d5-4d0aee007654"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="0a6d798d-9d73-45be-a925-bae0758da376"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="5ca998c8-62d8-4a50-94a6-3ae1ac7d65b0">
          <Access>Public</Access>
          <Comments>/// Common header</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="667e88d6-f6d7-4973-9bd5-ac06dd69ae7e"/>
          <Name>common</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bed723a3-3624-41e7-af08-0bc5a884dccd">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1931</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_232b</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="363259a0-d45c-448b-9a95-9e8077d1f152">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c3ab98db-1c3a-47ca-b286-1e7ebc38e376">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="342610b0-e490-4253-8fe4-ef2bbe0d1094">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="db5000de-8377-47d7-a4cf-91be93fa71e8">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="829c7779-00fe-4c19-9113-b322d52d3863"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="244d3fa0-eafc-45a6-a30b-e4973673b922">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1929</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e536d58e-6678-431c-afbc-06ea8d3ba1d2">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="31bd4e32-78cd-4f16-b36b-88bcd8b32d41">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="205aaaf4-0dd6-4e21-a2d5-4d0aee007654"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="205aaaf4-0dd6-4e21-a2d5-4d0aee007654">
        <Type type="cxxfe.ast.types.StructType" uuid="25fa89e4-2ce7-4363-9468-47bb34b88407"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e849ba57-0a1e-4d36-9244-38833fe017d5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="099e7f64-c941-49b0-8b5f-0788abce9e47"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="099e7f64-c941-49b0-8b5f-0788abce9e47">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="b38a76b3-45c5-4c34-91ec-8a98e597c29b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="b38a76b3-45c5-4c34-91ec-8a98e597c29b">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="25fa89e4-2ce7-4363-9468-47bb34b88407"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="665a0d88-f0eb-4aa5-8265-157140525d4a">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="200b0dd7-0a1a-45ce-920f-4724de5873a5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="099e7f64-c941-49b0-8b5f-0788abce9e47"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="789899f8-c860-4fc9-852d-f95c51f5abe5"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="789899f8-c860-4fc9-852d-f95c51f5abe5">
        <Type type="cxxfe.ast.types.StructType" uuid="25fa89e4-2ce7-4363-9468-47bb34b88407"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0a6d798d-9d73-45be-a925-bae0758da376">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="205aaaf4-0dd6-4e21-a2d5-4d0aee007654"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="789899f8-c860-4fc9-852d-f95c51f5abe5"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="a2e6abbd-4534-4f78-bf9b-0dc92feab2e8">
        <Type type="cxxfe.ast.types.StructType" uuid="25fa89e4-2ce7-4363-9468-47bb34b88407"/>
        <Name>FT_EEPROM_232B</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a43dd799-68fa-4180-af23-5dc679ba14e5">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1932</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="bb57d0d9-d8a9-45ff-8b92-8bf42e000576">
        <Type type="cxxfe.ast.types.PointerType" uuid="4f824cff-07a3-4150-af4f-d1f8755da6be"/>
        <Name>PFT_EEPROM_232B</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fc265071-2058-40d0-8b03-30a286069814">
          <Col>21</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1932</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="4f824cff-07a3-4150-af4f-d1f8755da6be">
        <Type type="cxxfe.ast.types.StructType" uuid="25fa89e4-2ce7-4363-9468-47bb34b88407"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="1f9908e6-0486-45b3-92d9-774425a2fea4">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="758544bb-e8a5-497e-82a4-716744de0f9b">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="0b79784e-f96d-4ebe-bc18-6509c5869172"/>
          <Name>~ft_eeprom_2232</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="82f3ea62-0539-4654-aca8-231e6faf13c9">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="28c61cdd-0ccd-4cd5-8929-ddd6dc869727">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="e246edaf-cb51-4f20-97cc-dcc78a7281bf"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="b0404d3f-f99d-43c5-aaad-b923627a7853"/>
          <Name>ft_eeprom_2232</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="659b5881-c2e4-43d7-bc65-b4eba635d8f4">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="bee74fee-2dcf-4250-b879-1550194636cc">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="4e43e440-70bb-4f77-aa71-39e902a8950e"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="ee316fe4-fe8a-4e32-a546-29165e050e04"/>
          <Name>ft_eeprom_2232</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="99968496-ee35-425a-b909-a4643c01b880">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="15701464-d7dc-4950-8a1c-bbe4efed3c15"/>
          <Name>ft_eeprom_2232</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="de1ed09b-cba7-4c35-be59-ccb3753c84cb">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="5572ab06-6c5e-4ea0-8b95-f081b6482a8d">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="4e43e440-70bb-4f77-aa71-39e902a8950e"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="62d0213e-38c6-4e84-b77a-2bf8f8299b0c"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="f23c53ee-ecde-41d7-965c-5e89b2983dae">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="8d7c3361-d49c-4049-9e7a-d81d437cb69f">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="e246edaf-cb51-4f20-97cc-dcc78a7281bf"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="06a86e94-3a1b-46d9-8c88-31dadbe9a208"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="f048c221-e1e8-4ef2-ad33-2e6adfad90ab">
          <Access>Public</Access>
          <Comments>/// Common header</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="667e88d6-f6d7-4973-9bd5-ac06dd69ae7e"/>
          <Name>common</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0d24398e-4e3a-4a8d-8e8b-59dbf9cc4e2a">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1943</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="92303fa5-b26e-45a9-a3b2-53d3ab742a0c">
          <Access>Public</Access>
          <Comments>/// common elements for all device EEPROMs
/// Drive options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsHighCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3cdb42d5-8cac-4120-bae1-4f9a8aa135e0">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1945</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="586c8546-a043-4aa5-97f2-d47d2e5bbf4d">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is high current</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsHighCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ef5ba56b-f7c4-4a86-98be-f11f81a6aa87">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1946</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="96764073-9972-46b8-b424-63c168b2f299">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is high current
/// Hardware options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsFifo</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="03847af2-ea45-421b-836b-a21d4e5672f6">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1948</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="fdaad6a3-5494-48b6-b8b8-1af5221cc9ef">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsFifoTar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5a1ebc3f-d46d-48f2-a8c8-ab2e9f3f11e2">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1949</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="de71bad5-c662-4058-9f90-101d435b689c">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO CPU target</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsFastSer</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d4ad5db2-88ac-4e00-b6ce-fa82c5e4332f">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1950</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5585dd22-3cb8-41d8-a134-f852f8e42835">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is Fast serial</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsFifo</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b1cf0968-a090-4c27-9efa-9fa84b3cb1b3">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1951</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="96abfd29-24a7-4913-867b-0076d836f904">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsFifoTar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f53e0cf9-6d74-4b88-9097-66b17d45ac5b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1952</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="165c8e5e-d38e-4d16-86d2-f84922f37862">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO CPU target</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsFastSer</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="742239b7-2197-4bf6-9d0e-d5d865effb03">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1953</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="709efb57-e784-4323-a99f-960596d76ca8">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is Fast serial
/// Driver option</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5b4702d8-e0ee-4907-bac5-8792f3a3e8ad">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1955</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="64454d0d-d94f-4eb6-83d9-1527e03912e0">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BDriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9c212c9a-a171-4fdb-98c1-cd49dc1af026">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1956</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_2232</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="2b83dad9-775a-439b-b1ec-0f5c90b0ab54">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="fe1dbc82-99b6-4577-9a77-54012caee48a">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="cbd33f84-18e9-4b08-a23e-756d9f23f777">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="bd267484-f875-48f9-bbf3-0fd7da8a1836">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="604162d4-2317-461e-be0a-a26790db9ef4"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="616cbd76-b666-4c01-854d-336e7e94e865">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1941</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0b79784e-f96d-4ebe-bc18-6509c5869172">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="b0404d3f-f99d-43c5-aaad-b923627a7853">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="e246edaf-cb51-4f20-97cc-dcc78a7281bf"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="e246edaf-cb51-4f20-97cc-dcc78a7281bf">
        <Type type="cxxfe.ast.types.StructType" uuid="1f9908e6-0486-45b3-92d9-774425a2fea4"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ee316fe4-fe8a-4e32-a546-29165e050e04">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="4e43e440-70bb-4f77-aa71-39e902a8950e"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="4e43e440-70bb-4f77-aa71-39e902a8950e">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="d7a70635-99db-4b39-8fc5-a0a841ec7f77"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="d7a70635-99db-4b39-8fc5-a0a841ec7f77">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="1f9908e6-0486-45b3-92d9-774425a2fea4"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="15701464-d7dc-4950-8a1c-bbe4efed3c15">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="62d0213e-38c6-4e84-b77a-2bf8f8299b0c">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="4e43e440-70bb-4f77-aa71-39e902a8950e"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="a4d0b99c-9b56-4bbb-b40f-2e2e277a02c0"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="a4d0b99c-9b56-4bbb-b40f-2e2e277a02c0">
        <Type type="cxxfe.ast.types.StructType" uuid="1f9908e6-0486-45b3-92d9-774425a2fea4"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="06a86e94-3a1b-46d9-8c88-31dadbe9a208">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="e246edaf-cb51-4f20-97cc-dcc78a7281bf"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="a4d0b99c-9b56-4bbb-b40f-2e2e277a02c0"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="b7595b33-4a4a-4f5f-ad7b-fc14a49915f7">
        <Type type="cxxfe.ast.types.StructType" uuid="1f9908e6-0486-45b3-92d9-774425a2fea4"/>
        <Name>FT_EEPROM_2232</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8dfdddaf-c56a-461a-bfeb-63e99fa2ca4e">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1957</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="3862964f-b879-4807-89a7-e88a9e88cab3">
        <Type type="cxxfe.ast.types.PointerType" uuid="82e7ca15-5aca-45df-ad02-dec45b26f036"/>
        <Name>PFT_EEPROM_2232</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0552f934-6439-4952-b91e-a7053eb5e9b5">
          <Col>21</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1957</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="82e7ca15-5aca-45df-ad02-dec45b26f036">
        <Type type="cxxfe.ast.types.StructType" uuid="1f9908e6-0486-45b3-92d9-774425a2fea4"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="1e6fd2cf-4954-4dbe-bd05-4fe41a394293">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="1056bd89-4542-426b-b768-639bfed6d817">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="78f32aab-fb3d-4591-b5a6-53a11a61c875"/>
          <Name>~ft_eeprom_232r</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="ae29cb4c-628a-45b1-bc80-85843c90f78f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="065007fc-272a-4663-a064-0755786492a3">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="ac97f7a4-97e4-42b6-8057-99d347b4888c"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="bac2c6e3-a982-4210-8d01-67e039242efa"/>
          <Name>ft_eeprom_232r</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="7d88ff4a-ac4f-4984-af50-d8b6fc10903a">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="5e00ed93-740c-4e20-afd4-f113b533432f">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="40e98e86-dcee-4106-a03a-1b756f40dd94"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="0caa9b36-941b-4b43-bfe3-c0f742b54b43"/>
          <Name>ft_eeprom_232r</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="29039ff2-47c1-4a2f-a73d-41093a3a90e7">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="51d9012c-4669-4f6f-a299-2a7329bdbe53"/>
          <Name>ft_eeprom_232r</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="0b1cac23-a335-42df-988a-bd52707667dd">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="70093bb7-704b-4719-b32d-5c2288bed742">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="40e98e86-dcee-4106-a03a-1b756f40dd94"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="f66571b0-6ec0-4d97-a4f9-9fbb10182d61"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="50f5502f-c734-4312-9626-87561c30cb5f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="561ae606-4cba-41fb-a826-4965bf99dd84">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="ac97f7a4-97e4-42b6-8057-99d347b4888c"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="c215f2dd-a15b-43f5-b995-ba9df8201fc2"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="9cce83cc-f23c-4710-b31a-369ca4ba8be5">
          <Access>Public</Access>
          <Comments>/// Common header</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="667e88d6-f6d7-4973-9bd5-ac06dd69ae7e"/>
          <Name>common</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="67b6fa7f-f3e0-47e4-bf5a-6221f0fdbcb4">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1967</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4619ddb4-755b-4994-9b47-a38e7465b4b5">
          <Access>Public</Access>
          <Comments>/// common elements for all device EEPROMs
/// Drive options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsHighCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8e77432a-d415-472e-ab5f-06e5eae202b4">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1969</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ba7f4535-b592-4174-8ebc-ee4af1fc0c8b">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is high current
/// Hardware options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>UseExtOsc</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8715b16a-3bd0-4eed-b024-16714ad37559">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1971</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="810510c0-94f1-4022-9a12-fd46251c2b58">
          <Access>Public</Access>
          <Comments>/// Use External Oscillator</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertTXD</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e5350ecb-1109-49f0-baf4-e2c32442589b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1972</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d4e69122-d092-4283-b9c5-62e3d8fa6c6f">
          <Access>Public</Access>
          <Comments>/// non-zero if invert TXD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertRXD</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="72495bc7-9c76-41bd-96f6-e8f8e20646b2">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1973</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="39c086eb-7282-47e8-b960-319f539f4f1e">
          <Access>Public</Access>
          <Comments>/// non-zero if invert RXD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertRTS</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e9a9aedf-9d62-4a08-9a39-c8e93186c1ed">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1974</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d5cfd241-79ab-490c-9957-ecb2de7a83ac">
          <Access>Public</Access>
          <Comments>/// non-zero if invert RTS</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertCTS</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="aee95594-f7ed-409c-94bb-8c8b6f7c1b99">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1975</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="af6c91b7-73e8-4dfd-8c92-b6d9e688f723">
          <Access>Public</Access>
          <Comments>/// non-zero if invert CTS</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertDTR</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bfb1dcde-c221-4b46-aab9-6d2321dd31cd">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1976</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e8f7d839-2efa-4304-bd21-9727417f4341">
          <Access>Public</Access>
          <Comments>/// non-zero if invert DTR</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertDSR</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c17575af-9422-4d16-91f6-7914aa9f7f8b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1977</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="721c2142-6af1-4fdb-840c-2f78ad9e2dc3">
          <Access>Public</Access>
          <Comments>/// non-zero if invert DSR</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertDCD</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5a89625c-116a-4400-ae5b-dd8481a462c2">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1978</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1675d8c4-d30d-4a64-9ba0-228e33c42950">
          <Access>Public</Access>
          <Comments>/// non-zero if invert DCD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertRI</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="32c6bdb2-226d-4046-bc6f-1fc91357ae42">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1979</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7f654995-2b52-4a8b-ab6a-26dd370241dc">
          <Access>Public</Access>
          <Comments>/// non-zero if invert RI</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus0</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7a8f497d-bb69-406d-8916-14c66424d032">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1980</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="85dbecc1-6891-40b4-99e7-7662b1560769">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus1</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a67034d0-4856-4c1b-baaf-b3deac280f83">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1981</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e20a5e29-40cc-4048-ba6f-2a483c4d008f">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="48ce03cc-635d-4623-bd21-d51195272105">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1982</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="35e63d93-e30b-4a7e-9911-dba0b64659f3">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus3</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="eaaec541-5a16-421b-9ab3-0ab8ab7c8e58">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1983</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b8b4b37e-e80a-414c-9024-02330ee7c3c4">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus4</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="24db008e-f153-4655-9ef0-f3b9bd427016">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1984</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="db9e1152-f4ac-4698-9cda-95c34670dc0b">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control
/// Driver option</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="734c3095-fa24-4fa8-960f-9746258274f9">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1986</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_232r</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="c2db8ab4-148d-423b-b302-e20627f49b98">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="13e1357a-40df-498c-b55d-3ac7b61d3e8a">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="480c8e55-5f7b-44a4-9646-cbd7c60513e7">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="2a680eee-d0b0-4003-8149-59573009b1c1">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="bc555086-25ac-4d19-a088-d4ece0c7433f"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="156172c2-e9bc-4f39-873b-c2d359678065">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1965</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="78f32aab-fb3d-4591-b5a6-53a11a61c875">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="bac2c6e3-a982-4210-8d01-67e039242efa">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="ac97f7a4-97e4-42b6-8057-99d347b4888c"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="ac97f7a4-97e4-42b6-8057-99d347b4888c">
        <Type type="cxxfe.ast.types.StructType" uuid="1e6fd2cf-4954-4dbe-bd05-4fe41a394293"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0caa9b36-941b-4b43-bfe3-c0f742b54b43">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="40e98e86-dcee-4106-a03a-1b756f40dd94"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="40e98e86-dcee-4106-a03a-1b756f40dd94">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="5d17b7a3-c142-41cc-b04f-fac37b1be8db"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="5d17b7a3-c142-41cc-b04f-fac37b1be8db">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="1e6fd2cf-4954-4dbe-bd05-4fe41a394293"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="51d9012c-4669-4f6f-a299-2a7329bdbe53">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f66571b0-6ec0-4d97-a4f9-9fbb10182d61">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="40e98e86-dcee-4106-a03a-1b756f40dd94"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="6b636be8-fd99-42bc-9914-790494a8a5a6"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="6b636be8-fd99-42bc-9914-790494a8a5a6">
        <Type type="cxxfe.ast.types.StructType" uuid="1e6fd2cf-4954-4dbe-bd05-4fe41a394293"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c215f2dd-a15b-43f5-b995-ba9df8201fc2">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="ac97f7a4-97e4-42b6-8057-99d347b4888c"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="6b636be8-fd99-42bc-9914-790494a8a5a6"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="e3c9abc6-089f-48f6-a227-67e7ef83f44c">
        <Type type="cxxfe.ast.types.StructType" uuid="1e6fd2cf-4954-4dbe-bd05-4fe41a394293"/>
        <Name>FT_EEPROM_232R</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9b6a5b39-49db-4215-a029-a0aaa29fc413">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1987</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="d6ffb2ad-a053-4d04-8181-b5f2dbd79ea3">
        <Type type="cxxfe.ast.types.PointerType" uuid="836a1cb6-5146-4998-9fe9-a81948e2982e"/>
        <Name>PFT_EEPROM_232R</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f3bffa39-04b0-4a02-aa16-3ce289eb48f1">
          <Col>21</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1987</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="836a1cb6-5146-4998-9fe9-a81948e2982e">
        <Type type="cxxfe.ast.types.StructType" uuid="1e6fd2cf-4954-4dbe-bd05-4fe41a394293"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="b821093e-9c5a-4af4-b833-319de5566c8f">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="caac450f-e194-495e-b884-0c9ecf4fb1d5">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="045ae0ff-b89b-45d3-9769-82e10f77101f"/>
          <Name>~ft_eeprom_2232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="593060da-0bf7-4667-9170-d7b41ed3aea1">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="48acd710-415a-4a23-a725-2dee51edfaa0">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="397df8ca-3b1d-4fcf-9ff7-7810d174de9b"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="4c90fddd-8ac6-4e44-900a-db28099051e3"/>
          <Name>ft_eeprom_2232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="36e40a59-7588-4d59-918a-0e7497fd2184">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="557ef713-4031-4ce4-9107-91db1549a452">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="f9ae086c-f6ec-4fbe-bd32-9cb51ea7639c"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="9adb52a1-e4ec-45b6-953b-ad296aeee987"/>
          <Name>ft_eeprom_2232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="998cc02c-0a05-47f0-b2e1-64565264ccfe">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="5a4f8e4e-7c8e-41c8-a3d4-9f193a850e41"/>
          <Name>ft_eeprom_2232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="c6b4336d-a019-4dd0-8d67-7d3ae46786c8">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="980b42a2-476f-4a24-9e9e-0891011f7bd1">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="f9ae086c-f6ec-4fbe-bd32-9cb51ea7639c"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="17840454-1ecd-405c-84b4-802ff736f791"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="50c63ab0-c1aa-47d2-8372-0f0c8dd60632">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="014e9fe6-0560-4675-97e2-3c482fc964ee">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="397df8ca-3b1d-4fcf-9ff7-7810d174de9b"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="6e219d91-a02d-4642-a72d-84d97243e070"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="35186e9b-de9c-452c-9ae2-ec60df7d7fd7">
          <Access>Public</Access>
          <Comments>/// Common header</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="667e88d6-f6d7-4973-9bd5-ac06dd69ae7e"/>
          <Name>common</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="190a51c3-efcb-4ee5-9148-d3c155ce1083">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1997</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4da9e1be-d214-49ed-90c5-1b0e9a75a9ed">
          <Access>Public</Access>
          <Comments>/// common elements for all device EEPROMs
/// Drive options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ALSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1d34e61c-801e-428d-9e20-42ec9e5dd175">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>1999</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9ebee11a-b717-45ff-9b3c-c585b5f643ae">
          <Access>Public</Access>
          <Comments>/// non-zero if AL pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ALSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="75e9d551-a507-412a-9c19-ea73ea692a93">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2000</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="31d5c4ae-129e-4387-9fa2-6a0562bf8555">
          <Access>Public</Access>
          <Comments>/// non-zero if AL pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ALDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="29a8671a-46b4-456b-b484-11de8d35fc74">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2001</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="77299028-efee-4db4-abd6-68ca16388aa8">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AHSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c63ceab0-cd77-4943-8398-8e2471a79388">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2002</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e5977dc6-ef15-4cfe-98eb-0022c7f1d75a">
          <Access>Public</Access>
          <Comments>/// non-zero if AH pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AHSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d28344c8-cbb8-4ef0-b7eb-fb04ff766af7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2003</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="91bd03e9-f562-4760-810c-3427b1f41d6e">
          <Access>Public</Access>
          <Comments>/// non-zero if AH pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AHDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8b7a0897-83f2-4e52-a020-aba42a97342d">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2004</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5f787626-9a3e-4cca-81eb-1ca36caaac3f">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BLSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="041782b2-5d09-4287-a5af-29e9110b4ab2">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2005</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3bfd2aa9-d34f-41c4-b32b-7c888e932163">
          <Access>Public</Access>
          <Comments>/// non-zero if BL pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BLSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f9535c41-5646-4848-85a6-6ff2c9e8d831">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2006</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6d13e0bc-61a5-4f56-a8a9-49e63e1f8e5a">
          <Access>Public</Access>
          <Comments>/// non-zero if BL pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BLDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="dacfc844-3987-43da-8662-f512fce69088">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2007</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c97e39a8-a584-40e2-8cdc-e64d31a3fed1">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BHSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5fbe1397-6da7-4855-91bd-0c6732448827">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2008</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="79517d85-c690-4ac0-9c5c-b3c3ac14767c">
          <Access>Public</Access>
          <Comments>/// non-zero if BH pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BHSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="dc7fe42d-1220-411c-84a9-bfbe59b4765a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2009</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="868237b9-3d88-408e-a086-e7bd30332ec6">
          <Access>Public</Access>
          <Comments>/// non-zero if BH pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BHDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ae28d516-50c7-4f82-904f-ff66c7e48f1f">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2010</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4388741a-840a-4b7f-a3cb-f92e89492bfa">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA
/// Hardware options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsFifo</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="aa7dc64e-cccc-4d68-b4f5-0ff6aca7ce1b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2012</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="47ef0543-e043-4643-b118-483d9c99b059">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsFifoTar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8bc67c33-48e3-43f1-8251-27efe8d1fd70">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2013</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="49fde6f1-93c0-4bbb-be1a-91345246b3fa">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO CPU target</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>AIsFastSer</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="492ceede-6e6b-40a6-a393-86d4841417f5">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2014</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7c15a519-861a-48e1-919f-c3db52df91fe">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is Fast serial</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsFifo</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7f026d4d-0646-4f48-ac3b-94288c538da7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2015</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d1567ef9-f5a2-4955-8e4b-16aa7e1b5188">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsFifoTar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9f97c262-d180-4299-84b2-28cfcacff8df">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2016</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9b41dd29-1fdd-4950-8ec7-f7504f37451f">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO CPU target</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BIsFastSer</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f95ee940-6c87-463b-8968-1eae8ffbb400">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2017</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6108390e-8f3a-498d-b9c9-b3b9a11dddb9">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is Fast serial</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PowerSaveEnable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4ed36142-3f12-429e-8207-93767e8c0052">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2018</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6ba819dc-b752-4a92-b7c0-d6515dd290e2">
          <Access>Public</Access>
          <Comments>/// non-zero if using BCBUS7 to save power for self-powered designs
/// Driver option</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9030f686-2b25-4307-be23-41831b518895">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2020</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="311a4a55-af78-4e21-b3d7-797a4b29d923">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BDriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e37944b1-9d2e-4964-b084-bc458b0913a5">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2021</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_2232h</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="0a1a6fd8-84f5-4e83-96fc-17b9113e5ed9">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="bd516bae-69ef-40e1-87c6-5fc4eeb83e0e">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="e5d983f9-4c0a-447c-ae40-19a43b3081f3">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="384e764b-dadb-4f5b-bdfe-e34f64b3254c">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="3880ec68-bf4b-44ee-8148-d3d71e0f18fb"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="738cc346-6a51-4395-97ee-b792f82d99c3">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1995</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="045ae0ff-b89b-45d3-9769-82e10f77101f">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4c90fddd-8ac6-4e44-900a-db28099051e3">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="397df8ca-3b1d-4fcf-9ff7-7810d174de9b"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="397df8ca-3b1d-4fcf-9ff7-7810d174de9b">
        <Type type="cxxfe.ast.types.StructType" uuid="b821093e-9c5a-4af4-b833-319de5566c8f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="9adb52a1-e4ec-45b6-953b-ad296aeee987">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="f9ae086c-f6ec-4fbe-bd32-9cb51ea7639c"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="f9ae086c-f6ec-4fbe-bd32-9cb51ea7639c">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="673ad8a7-eb37-40f0-9bb2-f1f0efdae8e5"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="673ad8a7-eb37-40f0-9bb2-f1f0efdae8e5">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="b821093e-9c5a-4af4-b833-319de5566c8f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="5a4f8e4e-7c8e-41c8-a3d4-9f193a850e41">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="17840454-1ecd-405c-84b4-802ff736f791">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="f9ae086c-f6ec-4fbe-bd32-9cb51ea7639c"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="940ab55f-fcc3-4e0b-85b5-340f7e699d19"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="940ab55f-fcc3-4e0b-85b5-340f7e699d19">
        <Type type="cxxfe.ast.types.StructType" uuid="b821093e-9c5a-4af4-b833-319de5566c8f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6e219d91-a02d-4642-a72d-84d97243e070">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="397df8ca-3b1d-4fcf-9ff7-7810d174de9b"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="940ab55f-fcc3-4e0b-85b5-340f7e699d19"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="911dc0e0-22bb-477f-8499-5d8c6e752684">
        <Type type="cxxfe.ast.types.StructType" uuid="b821093e-9c5a-4af4-b833-319de5566c8f"/>
        <Name>FT_EEPROM_2232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e5a64e2b-477e-4ad0-b551-ff19cdcf41ed">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2022</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="711acada-fb33-4a52-80a7-ed5394805ef2">
        <Type type="cxxfe.ast.types.PointerType" uuid="4792c67a-2404-4dab-958f-7566e639f50e"/>
        <Name>PFT_EEPROM_2232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cadc4321-1792-45fd-a523-e8ba7e374021">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2022</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="4792c67a-2404-4dab-958f-7566e639f50e">
        <Type type="cxxfe.ast.types.StructType" uuid="b821093e-9c5a-4af4-b833-319de5566c8f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="aab8f594-753d-4ab4-a525-2e999dd39123">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="eafc738d-29b0-474c-a3ba-1f8e5d83ec88">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="75372ad1-be4e-4e6d-a23a-64bb09f91086"/>
          <Name>~ft_eeprom_4232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="1c325b7d-284a-4d3d-96ca-9db7e2836af1">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="9c232a96-1d4e-4164-96b8-4e314a3fc7a2">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="0f3c06f3-0b60-4417-bcdf-b57d322a692c"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="4f440d73-25e7-4d76-bac1-8bb0e1b02736"/>
          <Name>ft_eeprom_4232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="e0090831-1510-4f32-be51-78a0f9eabd7f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="7e39c6dc-29d3-4ee6-a58b-cdfba4864246">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="a7b7c947-dc8d-408d-aa6f-19bed7adc521"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="cbf69376-a33d-4c8f-a5ab-05e1c1563fdb"/>
          <Name>ft_eeprom_4232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="5fc3ee5b-a4ff-48b4-8546-663868802ba7">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="77c449bb-6f9b-482f-8ca6-4d23f0066bab"/>
          <Name>ft_eeprom_4232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="2327d0b1-99fa-43e6-8f17-7bfddf34e88d">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="17c23785-2269-417f-9737-bfe1f293420e">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="a7b7c947-dc8d-408d-aa6f-19bed7adc521"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="0fe9e434-e104-447d-ac79-845e267853b6"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="b41120ee-a654-43d7-b7cc-be98bd55329e">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="ad032af0-d5e1-4e11-8c11-7ba0c79e5519">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="0f3c06f3-0b60-4417-bcdf-b57d322a692c"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="24d8918a-eb4d-4bc9-b91c-876e54ca37e9"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="1ac35ac4-3ae4-4e41-b849-8f2c93f6be6d">
          <Access>Public</Access>
          <Comments>/// Common header</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="667e88d6-f6d7-4973-9bd5-ac06dd69ae7e"/>
          <Name>common</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="56bf957a-ab2f-46ad-b5b4-3c50bb93e2aa">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2032</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="63ed8e30-2ca8-4184-9817-b9f92b781e88">
          <Access>Public</Access>
          <Comments>/// common elements for all device EEPROMs
/// Drive options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ASlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2abcc612-3573-42c6-82cb-dcdb25289ae7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2034</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="61387b79-2691-4094-8517-8c0b0b9356ba">
          <Access>Public</Access>
          <Comments>/// non-zero if A pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ASchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b3f13ec7-a2fc-410e-9238-0d82bfc7d569">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2035</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f330eedf-3e9e-47b6-8739-1b7d814518f9">
          <Access>Public</Access>
          <Comments>/// non-zero if A pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="248f32a6-7452-49d3-84db-09bcdb8c9031">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2036</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="471734fd-1732-4861-bce1-212f490c13f7">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a8d1bea7-009a-48a7-a756-19b7cd68d974">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2037</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="81efe0aa-c2a0-4e5a-a195-9bbd675c8baa">
          <Access>Public</Access>
          <Comments>/// non-zero if B pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bf241080-220b-4161-9702-11f06aeb1e5f">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2038</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4eb70a04-1cbc-46c5-aae4-69ce9a7575b0">
          <Access>Public</Access>
          <Comments>/// non-zero if B pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f875ee12-f83a-4550-bdba-d71b03a4fe26">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2039</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="465e064f-2a4a-4a55-8c86-ddf0757b7791">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>CSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="64c3d31c-7a57-4e72-9dfa-cfa77be43ad6">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2040</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8ce6a89a-bacf-4ff9-b59f-d14e7e3aa67a">
          <Access>Public</Access>
          <Comments>/// non-zero if C pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>CSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="12144a64-5da1-4cf8-8af1-65946590dac4">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2041</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="58a96254-882e-405e-a3ad-bd98a1d829f0">
          <Access>Public</Access>
          <Comments>/// non-zero if C pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>CDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bad06a4e-4e3d-4d0b-b4b8-754a92bf22c5">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2042</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d9b84fb0-8568-4d2a-b2fc-4b06f85376d4">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5266ee84-048c-4289-b9a3-a5aac10cec4d">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2043</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d106d7f2-a0a9-4f03-b18c-a0793a0d2380">
          <Access>Public</Access>
          <Comments>/// non-zero if D pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8bfa8aa9-70e2-4995-92cd-f2765fe19bd0">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2044</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f948b2c2-d32d-4007-8318-7b9a809644e0">
          <Access>Public</Access>
          <Comments>/// non-zero if D pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6b97f36a-a7d7-4d9c-b833-cf5cbe4ae1a8">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2045</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2629bb18-62c2-4aac-a25c-10045157eb73">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA
/// Hardware options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ARIIsTXDEN</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d2575926-29e7-4916-ac36-7874c3985edf">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2047</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="69c5aa6d-893b-4e2b-af87-1ddb22556c10">
          <Access>Public</Access>
          <Comments>/// non-zero if port A uses RI as RS485 TXDEN</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BRIIsTXDEN</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1d0754ae-c0ff-49be-a368-96d741203f45">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2048</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4063f2aa-70ea-4afe-b146-3217967069c0">
          <Access>Public</Access>
          <Comments>/// non-zero if port B uses RI as RS485 TXDEN</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>CRIIsTXDEN</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="144b0352-004e-4a34-94d7-ddccc6075d2b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2049</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9ad243fd-af12-4a89-9e99-48328f5b8b43">
          <Access>Public</Access>
          <Comments>/// non-zero if port C uses RI as RS485 TXDEN</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DRIIsTXDEN</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cf07ffa0-ff90-4ef6-ac5e-7f9757151f89">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2050</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="11d9f0da-a97e-4121-b75d-92a77ae66d9c">
          <Access>Public</Access>
          <Comments>/// non-zero if port D uses RI as RS485 TXDEN
/// Driver option</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d45d0ca1-157a-494d-acb2-0dae8562d9fc">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2052</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c380f46a-a9e1-4312-a06f-52273520f309">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BDriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d8ea55e6-603b-4596-91df-06717189090b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2053</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d271ea4a-d540-496d-9c8f-ce2ddf34ce35">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>CDriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="49ece71b-f52c-4630-b2e0-b32ab2249476">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2054</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f1e62995-2ce4-485d-b5b3-3a8a636e4457">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is to use VCP drivers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DDriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="280e92ec-5be2-4a5e-99fd-74d181db72fb">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2055</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_4232h</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="127ce075-681c-4cf4-b335-f1039bc830f2">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="b2974440-3b6a-409b-b2e9-0560ee9bed1d">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="38203020-54cc-4ad7-8678-a207f2526a24">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="c88b719f-8ce8-404b-a2d7-f976bee8ee33">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="51ad475f-726a-41e1-af6f-e9d9d5fa5685"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1b97dc08-6325-4cc3-abd8-3eb1d9fa8437">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2030</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="75372ad1-be4e-4e6d-a23a-64bb09f91086">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4f440d73-25e7-4d76-bac1-8bb0e1b02736">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="0f3c06f3-0b60-4417-bcdf-b57d322a692c"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="0f3c06f3-0b60-4417-bcdf-b57d322a692c">
        <Type type="cxxfe.ast.types.StructType" uuid="aab8f594-753d-4ab4-a525-2e999dd39123"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="cbf69376-a33d-4c8f-a5ab-05e1c1563fdb">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="a7b7c947-dc8d-408d-aa6f-19bed7adc521"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="a7b7c947-dc8d-408d-aa6f-19bed7adc521">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="eef0bd89-22c7-4f4c-92b1-297709c676c6"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="eef0bd89-22c7-4f4c-92b1-297709c676c6">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="aab8f594-753d-4ab4-a525-2e999dd39123"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="77c449bb-6f9b-482f-8ca6-4d23f0066bab">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0fe9e434-e104-447d-ac79-845e267853b6">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="a7b7c947-dc8d-408d-aa6f-19bed7adc521"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="6f6e91ca-679d-4fca-809e-59beabc2b696"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="6f6e91ca-679d-4fca-809e-59beabc2b696">
        <Type type="cxxfe.ast.types.StructType" uuid="aab8f594-753d-4ab4-a525-2e999dd39123"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="24d8918a-eb4d-4bc9-b91c-876e54ca37e9">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="0f3c06f3-0b60-4417-bcdf-b57d322a692c"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="6f6e91ca-679d-4fca-809e-59beabc2b696"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="4efd80f4-83b6-45dd-bfac-b798db778e50">
        <Type type="cxxfe.ast.types.StructType" uuid="aab8f594-753d-4ab4-a525-2e999dd39123"/>
        <Name>FT_EEPROM_4232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="337e8185-e956-4fb4-910b-8e29d7ec9db3">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2056</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="b4d8d459-21b7-4359-af00-efd6344dddd9">
        <Type type="cxxfe.ast.types.PointerType" uuid="49c86a83-279c-4e58-952a-b7f0b5029c4e"/>
        <Name>PFT_EEPROM_4232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1ee42663-2add-4744-9b52-4466dd4d815d">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2056</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="49c86a83-279c-4e58-952a-b7f0b5029c4e">
        <Type type="cxxfe.ast.types.StructType" uuid="aab8f594-753d-4ab4-a525-2e999dd39123"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="80263b7f-a2a2-4513-88c3-115a29103089">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="abeb2881-4bbe-4fcf-ab97-39c2872a9b2e">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="62fc6dbd-1dec-41b0-bc49-7b56e3c95631"/>
          <Name>~ft_eeprom_232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="f9e56ddb-9e52-4249-bc1f-2b5d352b71c1">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="8869c202-80b0-44ad-afe2-64c3f8c33308">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="21802a7f-0e2b-49ba-afbb-d841005a00ce"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="598ad8c6-d216-4139-9296-9b061c7718d3"/>
          <Name>ft_eeprom_232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="e6d7846c-86c8-46b0-851f-4575b7a148d1">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="ba8580e3-1a5c-4060-8fdb-e006538f49b6">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="9b13e806-92ba-445c-8c19-b63b14b293fb"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="731ffc8d-5fe8-4595-9eea-cf521cdc92fb"/>
          <Name>ft_eeprom_232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="7f698775-7334-48a7-b46f-98491b2f5acd">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="9c20519f-17ba-47ff-9636-55d19142ef71"/>
          <Name>ft_eeprom_232h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="843c1bd8-f3f7-4f96-8f75-c93678d339d8">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="b6c0d3ad-aed7-436c-b175-e4627add00c1">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="9b13e806-92ba-445c-8c19-b63b14b293fb"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="16f63de2-1da9-4d27-b3c4-acaa11e410cb"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="52dc68c2-e47e-4712-b53c-54002ce8aaac">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="6f126eb7-fefe-408d-af23-b95fdf37e61c">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="21802a7f-0e2b-49ba-afbb-d841005a00ce"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="8b67d98f-514c-4d90-b671-bf45d4827011"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="0f00feb0-af60-4221-bd44-34093bf5b3c8">
          <Access>Public</Access>
          <Comments>/// Common header</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="667e88d6-f6d7-4973-9bd5-ac06dd69ae7e"/>
          <Name>common</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ea006659-3af6-49ec-a2c0-6c1b582d5d7f">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2066</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="656f2b99-3e3e-41d0-aa3a-80994ed722a8">
          <Access>Public</Access>
          <Comments>/// common elements for all device EEPROMs
/// Drive options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ACSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9e57b371-367b-463f-8bc3-b0b1bba98c1a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2068</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="412ff066-55bd-4e3c-b6a2-e5b91a14026c">
          <Access>Public</Access>
          <Comments>/// non-zero if AC bus pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ACSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9f4c1f56-b152-416e-9305-13e5fd14eeae">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2069</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0f228ed0-0f06-4853-bb77-0b3d1060ccb8">
          <Access>Public</Access>
          <Comments>/// non-zero if AC bus pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ACDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="82e21c73-fba5-4d1d-8452-c069dc6ab9aa">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2070</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0e1e10b7-8316-40b6-b525-aec1d08017a4">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7f399b87-f256-47a3-b97b-243f66450e48">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2071</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="662b500c-eb0e-4a9f-ba0d-3e7f79f53ea5">
          <Access>Public</Access>
          <Comments>/// non-zero if AD bus pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f38391a9-2e32-459a-95eb-f821bd1409e1">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2072</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1528649f-5400-43c1-b0ab-0614d233b29f">
          <Access>Public</Access>
          <Comments>/// non-zero if AD bus pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2ce2a248-00bb-46b1-89dd-96af9ea519fc">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2073</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="02e26aac-ad19-4fac-91e4-dafd7dac44f3">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA
/// CBUS options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus0</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="28acf089-0114-47c0-af8e-6be25c6c060e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2075</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="825b5bd2-0fc2-4542-82e9-29f4bb8e455c">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus1</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5d8562b7-aa37-4ad8-a6a4-abba020a57ea">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2076</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="157a469d-9315-45be-972d-c4742b72d766">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d5149605-2d25-4581-9b9a-348e080a6ff8">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2077</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2ec74c14-6efa-44ed-8851-aec200f72d8e">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus3</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3adcfdac-f101-442d-9353-adb2b35748ca">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2078</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8e97d5da-e423-42b8-809e-aec41ff01817">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus4</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9a9dd924-ff2c-414b-b0f1-22da628cc99a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2079</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="45802400-1397-42cb-bd7a-eaff16236ac9">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus5</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1020ba7a-da4d-45f7-9d92-a84e0ed05d86">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2080</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="51ce63f2-b835-4dec-a3af-5db9cbc130a2">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus6</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a82d2f5f-feab-4b73-b8c9-bafe92142e50">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2081</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="737443df-43e8-4802-b1ad-3a6328d4db9f">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="508646e4-c00a-4722-885a-719a2fa57cdb">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2082</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6cad6421-8ab5-4d9c-a6a8-6807b473fa41">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus8</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="950254cb-9bc5-4309-86ae-59200df34403">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2083</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="700cf585-0604-4eaa-959e-4ae029810959">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus9</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f4985aea-41f7-436a-a051-1f8c32659905">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2084</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5dc8927c-6422-4429-8264-1f4c0c48eb1e">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control
/// FT1248 options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>FT1248Cpol</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7290ad68-59c0-4819-a6b8-e6a3cc1e68f9">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2086</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="88f9b560-2742-4907-8e6c-083b85a3e484">
          <Access>Public</Access>
          <Comments>/// FT1248 clock polarity - clock idle high (1) or clock idle low (0)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>FT1248Lsb</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9bbfe107-8ce3-4a22-91f2-587c21579958">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2087</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e5aafff1-5c0e-4f26-b67b-d92d5cf6cedc">
          <Access>Public</Access>
          <Comments>/// FT1248 data is LSB (1) or MSB (0)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>FT1248FlowControl</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ed612fec-a6c3-4c27-8296-d0b993c0aadb">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2088</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1bddcc09-e7f1-4e9e-ac2e-5aabb6f6c235">
          <Access>Public</Access>
          <Comments>/// FT1248 flow control enable
/// Hardware options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsFifo</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e37c8ccd-8285-404c-9200-a77bdabf2b8c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2090</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0ef74be5-11c2-4903-a26d-14180c4d719b">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsFifoTar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4a0a2fe9-9855-4676-9364-1ec0b63dee7e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2091</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="76442b2d-0786-4a6a-a417-9002af09783f">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is 245 FIFO CPU target</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsFastSer</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8dc2db1e-35a1-410d-a724-d14ececd234a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2092</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="dc505275-45c5-4de5-bce6-172466a22694">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is Fast serial</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IsFT1248</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1a28c8ad-8ffc-43d7-aeed-5ce49ac2af5b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2093</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="aae32796-f9dc-48c1-8eb1-50b2882b9cb7">
          <Access>Public</Access>
          <Comments>/// non-zero if interface is FT1248</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PowerSaveEnable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ad3deeee-9803-4480-8c1d-0b35b56f9161">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2094</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5c158126-772b-4153-904e-426e40782f46">
          <Access>Public</Access>
          <Comments>/// 
/// Driver option</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f5e88113-06cc-4aca-932c-e9cb9ddad937">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2096</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_232h</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="f92b6931-a010-4860-98eb-17bfba850519">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="daf4462a-681d-4ff9-a0c5-e53701a61351">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="5e4a1536-4fa3-4860-a913-6dcfb9eb41fc">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="89f1e10f-4673-412f-a5ed-ba359565fc15">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c62617bb-b7dc-4def-81f7-ce88b4fcd3ae"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ef90b924-0098-42cf-95d9-84cf9e4b0236">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2064</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="62fc6dbd-1dec-41b0-bc49-7b56e3c95631">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="598ad8c6-d216-4139-9296-9b061c7718d3">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="21802a7f-0e2b-49ba-afbb-d841005a00ce"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="21802a7f-0e2b-49ba-afbb-d841005a00ce">
        <Type type="cxxfe.ast.types.StructType" uuid="80263b7f-a2a2-4513-88c3-115a29103089"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="731ffc8d-5fe8-4595-9eea-cf521cdc92fb">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="9b13e806-92ba-445c-8c19-b63b14b293fb"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="9b13e806-92ba-445c-8c19-b63b14b293fb">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="e1d63f6e-41eb-4776-93a2-ac2455688ce9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="e1d63f6e-41eb-4776-93a2-ac2455688ce9">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="80263b7f-a2a2-4513-88c3-115a29103089"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="9c20519f-17ba-47ff-9636-55d19142ef71">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="16f63de2-1da9-4d27-b3c4-acaa11e410cb">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="9b13e806-92ba-445c-8c19-b63b14b293fb"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="4352a517-19c6-4560-a156-a43a4348afb0"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="4352a517-19c6-4560-a156-a43a4348afb0">
        <Type type="cxxfe.ast.types.StructType" uuid="80263b7f-a2a2-4513-88c3-115a29103089"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="8b67d98f-514c-4d90-b671-bf45d4827011">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="21802a7f-0e2b-49ba-afbb-d841005a00ce"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="4352a517-19c6-4560-a156-a43a4348afb0"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="a7f01dc5-bb28-4b25-95b7-4c67a45b6b14">
        <Type type="cxxfe.ast.types.StructType" uuid="80263b7f-a2a2-4513-88c3-115a29103089"/>
        <Name>FT_EEPROM_232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="eb0baa3c-d44d-4029-ae42-e03d9fb8cb7f">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2097</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="a1fface8-5abd-4c40-82e5-d664f6404cba">
        <Type type="cxxfe.ast.types.PointerType" uuid="cd32df1c-d929-4723-9a75-7547b221c04f"/>
        <Name>PFT_EEPROM_232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e7353653-cb9e-458d-970b-480f5363dcbf">
          <Col>21</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2097</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="cd32df1c-d929-4723-9a75-7547b221c04f">
        <Type type="cxxfe.ast.types.StructType" uuid="80263b7f-a2a2-4513-88c3-115a29103089"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="b2da8d2c-270e-4884-9b5c-cdbd061395a8">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="ecd5bf64-8639-4bff-a607-9df668793d65">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="25cca2f2-9c0f-4e74-8d79-37241c2f4098"/>
          <Name>~ft_eeprom_x_series</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="3fc8258c-69a3-424b-9e77-3cfba4794cd4">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="eb2bfb80-a528-4dd6-9f35-f77b41d81e39">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="55cf08cf-37d9-4f5d-a10d-10535ae0f39f"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="ccf23ae1-90c4-4485-8881-a6521506a17d"/>
          <Name>ft_eeprom_x_series</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="80637109-7094-4033-9d14-b337f0e63064">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="fe43dd54-1850-44d7-9dd8-38d302a5e91b">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="66def947-408e-4f77-a416-c2af1b66438e"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="d3701d0a-9af1-454a-b667-457f5fa88dfd"/>
          <Name>ft_eeprom_x_series</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="63a9cbee-5f60-4110-b683-aa2cc8e05113">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="108d2283-1c9f-409d-8422-4bfdc1f6bf52"/>
          <Name>ft_eeprom_x_series</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="4154ac13-df74-45c9-834a-5e43268570cf">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="b7794d2d-822b-434a-b4bf-21bb588b2193">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="66def947-408e-4f77-a416-c2af1b66438e"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="53ccf045-54c1-4cb9-b394-95ac3687636c"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="839644cb-164f-4885-9ba3-34c62d7d656d">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="291026ad-18c9-4b6f-97ef-d12ac993b72f">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="55cf08cf-37d9-4f5d-a10d-10535ae0f39f"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="d07207ba-a2e0-4597-8a77-fa26039f5199"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="c7f62587-00f1-4ef5-ab00-910469734aa9">
          <Access>Public</Access>
          <Comments>/// Common header</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="667e88d6-f6d7-4973-9bd5-ac06dd69ae7e"/>
          <Name>common</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bd12df76-f0b3-4168-a018-2a9ecc0403ed">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2107</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="654bedd7-0d10-477f-87f8-c02b58c001d9">
          <Access>Public</Access>
          <Comments>/// common elements for all device EEPROMs
/// Drive options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ACSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="62ff14c1-d0dd-4ff1-a4de-d9a0d0bd3e3c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2109</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f4909825-5647-467e-9efc-408d78f1a28a">
          <Access>Public</Access>
          <Comments>/// non-zero if AC bus pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ACSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ce2d697f-1943-47cd-90c7-c4ab700194aa">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2110</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="656d3437-cfab-47c2-8d0a-fd658dddd2e4">
          <Access>Public</Access>
          <Comments>/// non-zero if AC bus pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ACDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="73641efc-8247-404e-98e1-334f92ac45d8">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2111</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0885e101-ae89-4e0d-a0b4-685614ac8219">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADSlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f24a99b5-6a85-41a0-8284-f58e15a8057d">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2112</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0863d2b5-ed65-4a64-a779-2b41682254b3">
          <Access>Public</Access>
          <Comments>/// non-zero if AD bus pins have slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADSchmittInput</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="47a16a2b-2ef4-400c-b74c-5d34739f60df">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2113</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="73bb05cd-5c5e-4609-8e9b-9e5751a95fc7">
          <Access>Public</Access>
          <Comments>/// non-zero if AD bus pins are Schmitt input</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ADDriveCurrent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2e58831e-eeec-4a5b-8f20-41822450203f">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2114</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a60d781c-9f8c-48e2-8f10-43145e79d874">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA
/// CBUS options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus0</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="eb0a30aa-d924-4434-b61c-e7522ea6f57a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2116</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e37669dd-a0b1-4887-a14f-468b98313014">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus1</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b5e79fc8-5d6c-4504-8287-984c22abdc2b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2117</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="cf376a36-c51a-46f5-a674-53c387050db2">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7e465b8d-6ee5-4223-a7de-08fead869843">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2118</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2555746d-d80d-43f3-8c34-fa48f9c38b31">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus3</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b3ff6f50-42d7-4aab-a79e-05e122c8e5b6">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2119</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8793dd80-7613-49c5-8281-9ed9db11e3fc">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus4</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="74835107-e451-4210-9a5d-2ca0ee18c7bc">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2120</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="55e2dd61-224a-456f-bed7-144d93c5807e">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus5</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e4f1b0c8-745e-4b0a-80fb-a57c921de241">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2121</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a89986ae-d60e-4a8a-9849-277ad4abee68">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Cbus6</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b6ac3788-e692-41e8-bf31-edd1adeec920">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2122</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d8394734-923b-4dbd-a68d-4894938e3201">
          <Access>Public</Access>
          <Comments>/// Cbus Mux control
/// UART signal options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertTXD</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="660de42c-3766-49eb-b295-3fd432c6ae40">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2124</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9e68117d-28a3-4c1f-88e5-58ad4619ef96">
          <Access>Public</Access>
          <Comments>/// non-zero if invert TXD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertRXD</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e0daac78-df01-49f6-94e2-3da9643ca4f9">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2125</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="61ba0160-0209-4188-8f68-fcb7b4ac355a">
          <Access>Public</Access>
          <Comments>/// non-zero if invert RXD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertRTS</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="528b588b-f4a1-4e8e-a067-f77012e0e6d9">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2126</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="fdf01dca-eeb6-4302-942c-4e18293eb922">
          <Access>Public</Access>
          <Comments>/// non-zero if invert RTS</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertCTS</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cfd19931-4e65-4c95-99bc-db2bf8f3ef49">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2127</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9526dbbb-b8a9-4164-b48e-b71a311d6b0b">
          <Access>Public</Access>
          <Comments>/// non-zero if invert CTS</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertDTR</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b41ad443-1f59-4909-837e-4bc53f6c7681">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2128</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e34f204a-bb49-4e23-b772-7032332009f0">
          <Access>Public</Access>
          <Comments>/// non-zero if invert DTR</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertDSR</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0994acbd-606c-4350-9a34-1d4f8ec06366">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2129</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c76c37d4-face-4a30-932a-0e828458f37e">
          <Access>Public</Access>
          <Comments>/// non-zero if invert DSR</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertDCD</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d1aa6d0b-d2ce-420b-abc8-27e5423ffa62">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2130</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d351a6fd-414b-46e2-bd22-2a0bfae222f9">
          <Access>Public</Access>
          <Comments>/// non-zero if invert DCD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>InvertRI</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="68868652-4106-4474-a878-a1ed681c6df9">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2131</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="516f81d9-b15b-475a-9ce0-a490d639594e">
          <Access>Public</Access>
          <Comments>/// non-zero if invert RI
/// Battery Charge Detect options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BCDEnable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="aeb8dc4f-e64c-4f1f-a120-5b35c3a09e30">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2133</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="68b7f928-e46a-43f4-9f62-95ce69481e53">
          <Access>Public</Access>
          <Comments>/// Enable Battery Charger Detection</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BCDForceCbusPWREN</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a6c3e99e-aab7-41dd-bdf0-60bb83b4474b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2134</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="38b8386e-732c-4dcb-a364-d7fd685cd3ea">
          <Access>Public</Access>
          <Comments>/// asserts the power enable signal on CBUS when charging port detected</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BCDDisableSleep</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="86ddb1c8-8d45-4208-a5a1-b92bb7f025ce">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2135</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="44206b6a-3719-403b-b4e6-cec9146c70a7">
          <Access>Public</Access>
          <Comments>/// forces the device never to go into sleep mode
/// I2C options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>I2CSlaveAddress</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="88e1461f-e668-4a12-9754-280f7ed37bb1">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2137</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b4e54462-a033-4eea-96ec-66d5864edf86">
          <Access>Public</Access>
          <Comments>/// I2C slave device address</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>I2CDeviceId</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f4e11eb5-b8aa-43a5-9f80-7ad1a64a7171">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2138</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2790ea6d-4712-437a-9adb-ad8a28458b2d">
          <Access>Public</Access>
          <Comments>/// I2C device ID</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>I2CDisableSchmitt</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="206d2157-73c8-4c92-acab-0c7f163c0397">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2139</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b3d7ffce-bb0a-415a-8efd-d378c55d2872">
          <Access>Public</Access>
          <Comments>/// Disable I2C Schmitt trigger
/// FT1248 options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>FT1248Cpol</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8517b881-e79a-4740-8c9b-48b922b28e5c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2141</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="91d2bc11-4bad-428f-9812-96ed19e874ca">
          <Access>Public</Access>
          <Comments>/// FT1248 clock polarity - clock idle high (1) or clock idle low (0)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>FT1248Lsb</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9e7951c0-8e7f-4dcd-922f-ffd5c38e1c22">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2142</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="245e2cd0-742b-4479-afc1-2fd4701149b7">
          <Access>Public</Access>
          <Comments>/// FT1248 data is LSB (1) or MSB (0)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>FT1248FlowControl</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="37335624-affd-416f-8cef-3a145e3591fa">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2143</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7d780251-de1f-4bcb-bed6-97187992f294">
          <Access>Public</Access>
          <Comments>/// FT1248 flow control enable
/// Hardware options</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>RS485EchoSuppress</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="731eb8f1-f709-4227-9267-410ce774e0ad">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2145</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="021ab1df-497f-4319-ae3a-a8f2174db5f3">
          <Access>Public</Access>
          <Comments>/// </Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>PowerSaveEnable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="78feef7a-1e45-425a-af77-c5668fb500ee">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2146</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a7cb8a4d-e12d-4b34-84b9-4ac84a91487a">
          <Access>Public</Access>
          <Comments>/// 
/// Driver option</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>DriverType</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="19d2696b-da78-4ee1-8d6b-663e5c2c7cb7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2148</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_x_series</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="3795e3b1-ab44-44cb-9258-7f8caba34f1e">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="6db8b60a-5a3d-4d97-abfe-2aff9a589f3e">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="27ea51f2-8f38-49f1-805b-04238e3a7251">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="8547bfcb-ef30-4b50-a490-d8c7b99d8f7a">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="199bd5c0-2d28-4f4b-a9c2-c487e2a9ac49"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="26ec9cd1-7113-48b0-a3a1-3a8c4ffc804b">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2105</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="25cca2f2-9c0f-4e74-8d79-37241c2f4098">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ccf23ae1-90c4-4485-8881-a6521506a17d">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="55cf08cf-37d9-4f5d-a10d-10535ae0f39f"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="55cf08cf-37d9-4f5d-a10d-10535ae0f39f">
        <Type type="cxxfe.ast.types.StructType" uuid="b2da8d2c-270e-4884-9b5c-cdbd061395a8"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d3701d0a-9af1-454a-b667-457f5fa88dfd">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="66def947-408e-4f77-a416-c2af1b66438e"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="66def947-408e-4f77-a416-c2af1b66438e">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="ef10a9ac-1f94-4892-860b-d5bbb714605e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="ef10a9ac-1f94-4892-860b-d5bbb714605e">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="b2da8d2c-270e-4884-9b5c-cdbd061395a8"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="108d2283-1c9f-409d-8422-4bfdc1f6bf52">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="53ccf045-54c1-4cb9-b394-95ac3687636c">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="66def947-408e-4f77-a416-c2af1b66438e"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="eeb3f0f7-ab9d-411b-8a52-fcb6df4905e2"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="eeb3f0f7-ab9d-411b-8a52-fcb6df4905e2">
        <Type type="cxxfe.ast.types.StructType" uuid="b2da8d2c-270e-4884-9b5c-cdbd061395a8"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d07207ba-a2e0-4597-8a77-fa26039f5199">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="55cf08cf-37d9-4f5d-a10d-10535ae0f39f"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="eeb3f0f7-ab9d-411b-8a52-fcb6df4905e2"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="f6382fd4-fa3b-4a67-924f-945e3ad9ff70">
        <Type type="cxxfe.ast.types.StructType" uuid="b2da8d2c-270e-4884-9b5c-cdbd061395a8"/>
        <Name>FT_EEPROM_X_SERIES</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="92d11bb1-2b2b-4628-b759-bc9a257a2751">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2149</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="3b333745-7183-45e4-afab-26ad5468e9ef">
        <Type type="cxxfe.ast.types.PointerType" uuid="76d51637-e3df-4d73-baf3-ba16f8a17aa3"/>
        <Name>PFT_EEPROM_X_SERIES</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="086173cc-a736-4ca7-92b5-2915278ae031">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2149</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="76d51637-e3df-4d73-baf3-ba16f8a17aa3">
        <Type type="cxxfe.ast.types.StructType" uuid="b2da8d2c-270e-4884-9b5c-cdbd061395a8"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="9e7aae59-de8b-4015-be7f-eb41fa03fb70">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="ed403413-c7dc-4243-8393-fa87c563d93d">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="19544ba0-d23c-45d3-ae6e-ab2a06fa39a9"/>
          <Name>~ft_eeprom_4222h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="efa2d379-416e-41a4-a179-2870584d5622">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="aec97aad-1a05-420e-8bd7-2e0fde6c2bf5">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="d00e6982-6d06-4b92-b4fc-07a752c9b94f"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="c255b8c0-060b-4fba-bcf7-9db596d1f665"/>
          <Name>ft_eeprom_4222h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="dd57f747-5cc6-48e5-a79b-315da61c8b7c">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="aa7ddb45-55ff-4242-bc84-47a6c2b07734">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="e14d768a-237f-42fe-b13d-840c8fc2eb2e"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="16770b57-52e0-43a2-b51e-c888e783aa26"/>
          <Name>ft_eeprom_4222h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="d17c51f0-0c99-4795-ab31-639022aa4505">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="72501ff0-370e-4ea6-b0e5-7b205f8bf226"/>
          <Name>ft_eeprom_4222h</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="2bdf3ce1-9c8f-458f-9e14-2afea613987c">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="e52b5e9e-1642-439f-b89d-703357949a15">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="e14d768a-237f-42fe-b13d-840c8fc2eb2e"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="68060498-f418-46f6-b6da-8e311fd8b456"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="0940e50b-04d2-4cd8-be93-c3d69ea745ad">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="c0edc2b9-3446-4d45-a507-8862d824064e">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="d00e6982-6d06-4b92-b4fc-07a752c9b94f"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="3e2a6b16-7151-4f1a-b9f7-168039b220af"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="5f2678df-d4c4-477a-ad49-893e56b315e5">
          <Access>Public</Access>
          <Comments>/// Common header</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="667e88d6-f6d7-4973-9bd5-ac06dd69ae7e"/>
          <Name>common</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="04c2af54-1aeb-4e58-8f89-83ab8a3aa645">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2159</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="abb34836-7d79-4931-b821-dcaee47429f2">
          <Access>Public</Access>
          <Comments>/// common elements for all device EEPROMs</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="0ec3bd98-49cc-49f3-b815-f4fd7bae2e5c"/>
          <Name>Revision</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6f1fa5a9-09e0-42b9-8338-00d64a823edf">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2160</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0f4e9911-fbd4-4d21-94a1-03a6a7b4e96f">
          <Access>Public</Access>
          <Comments>/// &apos;A&apos;, &apos;B&apos;, &apos;C&apos;, or &apos;D&apos;.</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>I2C_Slave_Address</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fd1c65f8-7b3d-430a-9e9a-04ab9537e14f">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2161</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="bdcc3985-7178-4c4d-97c4-d68d71a48bfa">
          <Access>Public</Access>
          <Comments>/// Suspend</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SPISuspend</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="954f77de-21ae-4742-9faa-4822bbeaf01e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2163</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ee6fee01-c655-4a0d-b44b-9c83f5dd9fd6">
          <Access>Public</Access>
          <Comments>/// 0 for &quot;Disable SPI, tristate pins&quot;, 2 for &quot;Keep SPI pin status&quot;, 3 for &quot;Enable SPI pin control&quot;</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SuspendOutPol</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ea382bf2-fd0f-444f-86c7-665bfbc8a95b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2164</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e06d3dce-ab23-4e8c-9765-cc243655d13b">
          <Access>Public</Access>
          <Comments>/// 0 for negative, 1 for positive (not implemented on Rev A)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>EnableSuspendOut</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="554fcef9-3ce5-4e0b-92c4-3bd2a0620ec7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2165</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d671a47f-17f8-47a2-9f8f-1f0efa46ef4b">
          <Access>Public</Access>
          <Comments>/// non-zero to enable (not implemented on Rev A)
/// QSPI</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Clock_SlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="24b4063b-31b1-4157-b6dc-567efce02b72">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2167</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6976ad88-7566-4326-b2ab-ad91729855d6">
          <Access>Public</Access>
          <Comments>/// non-zero if clock pin has slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Clock_Drive</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f9eb87f6-e779-4118-b4de-569fa55993a0">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2168</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9ef17b8e-6292-44cb-ad43-536e54ff4514">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IO0_SlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ed5634f0-afce-4069-b3fb-68d329e69415">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2169</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="cf58fa04-277a-489d-b4c6-11967b6cad3e">
          <Access>Public</Access>
          <Comments>/// non-zero if IO0 pin has slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IO1_SlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="741ea47c-9159-4e28-a3ec-f25d6c51bb96">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2170</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9e1e5149-c7f3-4638-aed3-458211e6c83a">
          <Access>Public</Access>
          <Comments>/// non-zero if IO1 pin has slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IO2_SlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="75c5bead-bf47-4b56-afe1-d49b1c59fb48">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2171</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="457fa414-e61d-43ce-87b6-e8af5909f19f">
          <Access>Public</Access>
          <Comments>/// non-zero if IO2 pin has slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IO3_SlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f67632c3-41bd-4293-bdd1-60cee2ff25bc">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2172</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d36d49f7-f183-4d54-9370-596af6fdd79d">
          <Access>Public</Access>
          <Comments>/// non-zero if IO3 pin has slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IO_Drive</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b2e63127-856f-4e3e-a4d7-1a7e7936cbaf">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2173</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="39462c31-23b3-4f91-8629-a00ed7e2f947">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SlaveSelect_PullUp</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="61f1cfe5-825d-412e-9e8d-0d372545c976">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2174</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="54d05b16-1e8a-4163-8ac1-3de6fb7ea3c8">
          <Access>Public</Access>
          <Comments>/// non-zero to enable pull up</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SlaveSelect_PullDown</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="29d7b302-73f4-42ea-a04f-83df822bea33">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2175</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9d398fe2-07b7-42ee-b0e1-42d0749aa170">
          <Access>Public</Access>
          <Comments>/// non-zero to enable pull down</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SlaveSelect_Drive</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9ee658f4-9ece-47c8-bf0a-388dd096e48b">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2176</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f25817e6-888a-4de0-b16c-e07489ea1cce">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SlaveSelect_SlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d346ce37-453d-4803-97d1-504b10ae879c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2177</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d885460e-a1b1-46d3-9918-8da276ff2cf3">
          <Access>Public</Access>
          <Comments>/// non-zero if slave select pin has slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>MISO_Suspend</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0a92f653-29bd-4e83-95c1-594e4c14bba3">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2178</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d7eb3925-338e-4407-b91a-4f7bb4b9d577">
          <Access>Public</Access>
          <Comments>/// 2 for push-low, 3 for push high, 0 and 1 reserved</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SIMO_Suspend</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c08d4206-df39-4fd2-8622-1e23fc01dea6">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2179</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c608d832-4ae2-46b0-99db-6f74f26b2cd0">
          <Access>Public</Access>
          <Comments>/// 2 for push-low, 3 for push high, 0 and 1 reserved</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>IO2_IO3_Suspend</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e36e5d34-7df7-4a5d-823a-cd0587e15b77">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2180</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="64dbd3bb-23ec-4211-b2a0-5b7c4ac86ac1">
          <Access>Public</Access>
          <Comments>/// 2 for push-low, 3 for push high, 0 and 1 reserved</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>SlaveSelect_Suspend</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d32dd37e-ad6c-4d56-8da0-484b4545a15d">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2181</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f3b09070-a09e-4a94-8260-0c004b722a5a">
          <Access>Public</Access>
          <Comments>/// 0 for no-change (not implemented on Rev A), 2 for push-low, 3 for push high, 1 reserved
/// GPIO</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO0_Drive</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="97330dc4-d201-4112-a2dd-55ba2d0a30f1">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2183</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="480d7719-007e-44b1-8f4f-abb9885240a2">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO1_Drive</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="05776780-96f8-4678-847f-46087f073b3e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2184</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="94ccc1b0-8c31-481b-aab4-62752b2c124c">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO2_Drive</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a571de3d-ce39-4fea-9865-e9bb8cae235f">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2185</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b8bd74ea-b2f6-4f48-bba1-450aa60512b5">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO3_Drive</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="78b26637-b1db-4e49-999e-430173006535">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2186</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="910dbef7-d631-4256-b0b2-d445d416e287">
          <Access>Public</Access>
          <Comments>/// valid values are 4mA, 8mA, 12mA, 16mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO0_SlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7e1afdde-cc42-4d15-b4b7-a2c5671581a5">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2187</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e54d6010-0046-4e2b-91f3-80ca59952933">
          <Access>Public</Access>
          <Comments>/// non-zero if IO0 pin has slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO1_SlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1e7a4d82-0479-4d1f-adaa-1d6d1063b844">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2188</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="448c1443-a05c-4361-a862-9d0d14ebe07e">
          <Access>Public</Access>
          <Comments>/// non-zero if IO0 pin has slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO2_SlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="909b3981-1c88-40ae-83d9-af1b234b4362">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2189</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d515e04f-e52a-4a16-a002-4cda6589d482">
          <Access>Public</Access>
          <Comments>/// non-zero if IO0 pin has slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO3_SlowSlew</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8e35d070-001c-49c5-9e7e-34021f4057be">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2190</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2bf7f3e4-68cf-4d33-9b77-360d853f4925">
          <Access>Public</Access>
          <Comments>/// non-zero if IO0 pin has slow slew</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO0_PullDown</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="77029c7e-ab58-474a-8312-54dd7e3896b5">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2191</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="005f662d-e662-43bc-888d-f49fa4c7e55b">
          <Access>Public</Access>
          <Comments>/// non-zero to enable pull down</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO1_PullDown</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6b76e566-2ab2-4607-88cb-6a70fb789508">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2192</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7f83a49f-a689-4f33-a690-b052931ed5cf">
          <Access>Public</Access>
          <Comments>/// non-zero to enable pull down</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO2_PullDown</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="34a67cb1-57ab-43f0-9d5a-86c29c5554aa">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2193</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="900aeae5-dca8-40f3-be2b-81b6f7b6b70b">
          <Access>Public</Access>
          <Comments>/// non-zero to enable pull down</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO3_PullDown</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="62bde1d1-9a38-4db7-aeab-2fa82608db88">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2194</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f91ef196-207c-4ae5-990b-81762ae1eb23">
          <Access>Public</Access>
          <Comments>/// non-zero to enable pull down</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO0_PullUp</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="298190c3-7554-4b5d-bfaf-67c0b7a6f6e5">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2195</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3cd5d5e2-ae10-497c-b05b-d3711f0aeb75">
          <Access>Public</Access>
          <Comments>/// non-zero to enable pull up</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO1_PullUp</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6bacaff2-7a65-423c-b4fe-45652ee9140d">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2196</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1b950755-886f-4b63-9604-e9b876360a4f">
          <Access>Public</Access>
          <Comments>/// non-zero to enable pull up</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO2_PullUp</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a35ca6ae-e39e-4fcc-bdf7-0f1850b19497">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2197</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1e66b69a-60a7-4214-8ac4-de1abe96b269">
          <Access>Public</Access>
          <Comments>/// non-zero to enable pull up</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO3_PullUp</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="de3e8d39-7894-493a-beac-884a5dc04e70">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2198</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7bb0611e-306d-4b28-a1dc-706f56433d7d">
          <Access>Public</Access>
          <Comments>/// non-zero to enable pull up</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO0_OpenDrain</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6469b490-5124-4ae1-9c03-6573571a54c3">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2199</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b504a3d7-b90c-46ee-b985-bcd10e64b1ba">
          <Access>Public</Access>
          <Comments>/// non-zero to enable open drain</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO1_OpenDrain</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="880223ab-8072-40e9-b3a8-50acd02e10e7">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2200</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b4f32312-f401-40d6-98b9-0719db6fc831">
          <Access>Public</Access>
          <Comments>/// non-zero to enable open drain</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO2_OpenDrain</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7a1e14df-e9b4-476a-8552-d629d1a89148">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2201</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="611e4e53-7333-4383-a64d-9b6c42593bf3">
          <Access>Public</Access>
          <Comments>/// non-zero to enable open drain</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO3_OpenDrain</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ff09c6f6-c88f-4632-ac32-07c64455a627">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2202</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="953edf6b-d3c3-4855-8885-526d15f7f812">
          <Access>Public</Access>
          <Comments>/// non-zero to enable open drain</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO0_Suspend</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ccbacf8c-3a16-4eae-8d90-4baa94626519">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2203</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="277d9fe8-954f-4472-bf29-ce29d39560b3">
          <Access>Public</Access>
          <Comments>/// 0 for no-change, 1 for input (not implemented on Rev A), 2 for push-low, 3 for push high</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO1_Suspend</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6f8c7737-edfb-4819-a702-a8f050e9fad0">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2204</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a22badb8-f179-4223-a4b9-17789085dc5f">
          <Access>Public</Access>
          <Comments>/// 0 for no-change, 1 for input (not implemented on Rev A), 2 for push-low, 3 for push high</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO2_Suspend</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6802329a-f489-4bfb-a9a5-f3bbff4a721a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2205</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d91b05af-fab0-45d4-9435-f15fd0a04277">
          <Access>Public</Access>
          <Comments>/// 0 for no-change, 1 for input (not implemented on Rev A), 2 for push-low, 3 for push high</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>GPIO3_Suspend</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f60d11b7-b2c2-4958-8446-1d2608194c9a">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2206</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d074bfc5-d399-4eb4-aa74-8798c276e0eb">
          <Access>Public</Access>
          <Comments>/// 0 for no-change, 1 for input (not implemented on Rev A), 2 for push-low, 3 for push high</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>FallingEdge</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9c87ff23-067e-431e-bd9a-7a8cd70b1821">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2207</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5ccc1764-10d4-4bc5-aac7-c9d4e852aaf2">
          <Access>Public</Access>
          <Comments>/// non-zero to change GPIO on falling edge
/// BCD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BCD_Disable</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c5f43b9b-8b38-46d0-9c11-acbf2ec0835e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2209</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1091d78b-bfda-42ee-97df-939188460e02">
          <Access>Public</Access>
          <Comments>/// non-zero to disable BCD</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BCD_OutputActiveLow</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="12549836-6ad8-44f3-a7e9-e6d2c7c6fd7e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2210</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a0028f4e-5863-40f5-8143-f19df19de940">
          <Access>Public</Access>
          <Comments>/// non-zero to set BCD output active low</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>BCD_Drive</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5a39963e-0f8c-466e-8480-c04f71769059">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2211</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_4222h</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="5fba6954-8876-4471-aecc-e0c8210f9560">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="a81d05d9-fe93-42b1-95a7-d3337cd91a89">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="7d811c24-ac95-4144-adf0-455175436e22">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="567954d0-9cda-41ee-abd0-6695f9b0ee75">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="28dfa434-01ae-41a3-8ca3-ff66e54e9b32"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c6d3b543-bbcc-4911-bbf3-635fe08669a0">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2157</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="19544ba0-d23c-45d3-ae6e-ab2a06fa39a9">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c255b8c0-060b-4fba-bcf7-9db596d1f665">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="d00e6982-6d06-4b92-b4fc-07a752c9b94f"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="d00e6982-6d06-4b92-b4fc-07a752c9b94f">
        <Type type="cxxfe.ast.types.StructType" uuid="9e7aae59-de8b-4015-be7f-eb41fa03fb70"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="16770b57-52e0-43a2-b51e-c888e783aa26">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="e14d768a-237f-42fe-b13d-840c8fc2eb2e"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="e14d768a-237f-42fe-b13d-840c8fc2eb2e">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="36b5ddaf-524b-480c-8f63-201f10e395df"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="36b5ddaf-524b-480c-8f63-201f10e395df">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="9e7aae59-de8b-4015-be7f-eb41fa03fb70"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="72501ff0-370e-4ea6-b0e5-7b205f8bf226">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="68060498-f418-46f6-b6da-8e311fd8b456">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="e14d768a-237f-42fe-b13d-840c8fc2eb2e"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="090d0574-48a7-40ab-8a60-2e460c8a4341"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="090d0574-48a7-40ab-8a60-2e460c8a4341">
        <Type type="cxxfe.ast.types.StructType" uuid="9e7aae59-de8b-4015-be7f-eb41fa03fb70"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="3e2a6b16-7151-4f1a-b9f7-168039b220af">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="d00e6982-6d06-4b92-b4fc-07a752c9b94f"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="090d0574-48a7-40ab-8a60-2e460c8a4341"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="7d2f6595-75ce-459c-baa4-a3cdb688219d">
        <Type type="cxxfe.ast.types.StructType" uuid="9e7aae59-de8b-4015-be7f-eb41fa03fb70"/>
        <Name>FT_EEPROM_4222H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="17a69e77-c2b5-46f6-a7de-b108bcdbf406">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2212</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="3dd51ba5-1412-49ed-8e26-6de756aabde2">
        <Type type="cxxfe.ast.types.PointerType" uuid="7045a351-1e7d-4616-bfb5-e39764f1cc8c"/>
        <Name>PFT_EEPROM_4222H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="80aa5a13-d0c8-4027-834b-a6d0bdd5665d">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2212</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="7045a351-1e7d-4616-bfb5-e39764f1cc8c">
        <Type type="cxxfe.ast.types.StructType" uuid="9e7aae59-de8b-4015-be7f-eb41fa03fb70"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="8e5aec8f-07ed-4dce-937a-f9bdaf3770a0">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="e14bb825-f10f-4061-ae47-02a50660c2fb">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="a6123031-1a53-45dd-822d-ed4be0b7b370"/>
          <Name>~ft_eeprom_PD_PDO_mv_ma</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="26327614-ae89-43d4-adf9-353b3ef3ca3b">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="23fe3d1f-f252-4f6c-a16f-dd01e8fe3365">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="0e265abd-82ca-4579-87a4-d55262fd3189"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="ab2a3586-0974-41bf-8253-4260ceb5e783"/>
          <Name>ft_eeprom_PD_PDO_mv_ma</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="802fc6e1-654a-446f-ad16-51ce1f777856">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="685fe899-f365-4f9f-94e7-2acf9753f5f4">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="57d89338-a3b2-4808-994b-affd7dca82f9"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="66d8bf79-6561-4d9c-867a-2c9ed4b1a77f"/>
          <Name>ft_eeprom_PD_PDO_mv_ma</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="29425076-1758-430a-a18c-f0968ca95dd6">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="d01ebfde-a767-4781-bf9e-bff258654098"/>
          <Name>ft_eeprom_PD_PDO_mv_ma</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="3c915409-0e0d-4c02-9ff8-61a4996f708e">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="7bb52a96-799e-4770-a973-07f1e60157a1">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="57d89338-a3b2-4808-994b-affd7dca82f9"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="f3ad6848-9ba0-4cea-8dae-3aece36b18d9"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="6b985ba3-d68a-445f-a5ae-23c64576e980">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="33009c8f-30a5-4573-a227-7402c82eb3ad">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="0e265abd-82ca-4579-87a4-d55262fd3189"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="f2553495-8f80-44ae-af74-4670de525bae"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="be113d9b-9afb-4cea-a693-c68557a3fe7d">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO1ma</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="18519e6e-30cd-48ee-b27c-3a523bce06be">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2221</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0a15ed67-9913-4dd5-94c8-e0d3c5cac302">
          <Access>Public</Access>
          <Comments>/// PDO1 mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO1mv</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e6847d66-6683-49a2-8b71-b530a9185bda">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2222</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3f3827c2-3596-4752-9e7a-01b22b123352">
          <Access>Public</Access>
          <Comments>/// PDO1 mV</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO2ma</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b9443fea-b1bb-4169-9626-ae9bf604c343">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2223</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6c96dba8-4f0b-4f9f-a568-a71daae7f08a">
          <Access>Public</Access>
          <Comments>/// PDO2 mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO2mv</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="819419f1-e980-4902-8193-d86ec7a3138f">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2224</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0af2558f-9d06-4a72-b4c0-38632d3a3399">
          <Access>Public</Access>
          <Comments>/// PDO2 mV</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO3ma</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6ec99a79-bde4-4b3d-a620-e5cffd79de83">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2225</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d0068fcb-0246-4984-a719-95926d111de1">
          <Access>Public</Access>
          <Comments>/// PDO3 mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO3mv</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a497cc0c-3a3e-4d6f-81c0-9ad75bd5d108">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2226</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="dec14a51-ea89-44d9-a8f3-2c274b8b4b4d">
          <Access>Public</Access>
          <Comments>/// PDO3 mV</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO4ma</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cc373831-2160-4bdc-9bd3-21b4f210f092">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2227</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="22324fcb-fab3-40c6-9de3-0171eaf06291">
          <Access>Public</Access>
          <Comments>/// PDO4 mA</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO4mv</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ede4a775-122a-4354-8592-4e6e3acb3759">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2228</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d9c650ed-c0b5-4aeb-847d-ed4e8a720710">
          <Access>Public</Access>
          <Comments>/// PDO4 mV</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO5ma</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="965d2b2f-6942-48be-b0be-f3e2fcc36e1a">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2229</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2cc7553c-ae81-41f3-9723-01edb398a405">
          <Access>Public</Access>
          <Comments>/// PDO5 mA (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO5mv</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="610a0ddf-cc50-45bd-918c-b9e9c71c8380">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2230</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0bf4a163-ee0a-4dd6-8d1f-58c14de86804">
          <Access>Public</Access>
          <Comments>/// PDO5 mV (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO6ma</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="656974fd-86a0-4324-92e9-1cde6b0383d8">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2231</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="54c0d830-ee99-4031-9739-6e131b4984a7">
          <Access>Public</Access>
          <Comments>/// PDO6 mA (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO6mv</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a9839738-f398-4785-b960-52eedd9c1c5a">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2232</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3d7c4f19-4fb3-4aea-aeb2-e9e1a5e10bf7">
          <Access>Public</Access>
          <Comments>/// PDO6 mV (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO7ma</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="efe0a188-435b-4f46-8156-f3c6b7107e62">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2233</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="46b73ef0-fbfe-495c-a965-68546222faa1">
          <Access>Public</Access>
          <Comments>/// PDO7 mA (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>PDO7mv</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7e5af6c0-27e0-4ed7-b90c-d1c1d6446471">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2234</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_PD_PDO_mv_ma</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="a4207926-87d0-4628-bfea-5078754bc13c">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="266cc908-08c9-40fd-b086-71f6acc708d8">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="ca4b35ac-c707-4e8c-914a-ade2f412a412">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="2018eed2-51c5-4188-89b7-f70466ca8557">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="b659fb60-6355-49ef-a02c-550d27eaee4b"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b692ba6d-e9d6-4d65-848f-6ae53b7866cf">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2220</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="a6123031-1a53-45dd-822d-ed4be0b7b370">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ab2a3586-0974-41bf-8253-4260ceb5e783">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="0e265abd-82ca-4579-87a4-d55262fd3189"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="0e265abd-82ca-4579-87a4-d55262fd3189">
        <Type type="cxxfe.ast.types.StructType" uuid="8e5aec8f-07ed-4dce-937a-f9bdaf3770a0"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="66d8bf79-6561-4d9c-867a-2c9ed4b1a77f">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="57d89338-a3b2-4808-994b-affd7dca82f9"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="57d89338-a3b2-4808-994b-affd7dca82f9">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="bd014cad-6c27-4c91-8a98-aa0e27a4912b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="bd014cad-6c27-4c91-8a98-aa0e27a4912b">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="8e5aec8f-07ed-4dce-937a-f9bdaf3770a0"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d01ebfde-a767-4781-bf9e-bff258654098">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f3ad6848-9ba0-4cea-8dae-3aece36b18d9">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="57d89338-a3b2-4808-994b-affd7dca82f9"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="5cd9b2e7-d004-4e88-bf4e-93df9de6014e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="5cd9b2e7-d004-4e88-bf4e-93df9de6014e">
        <Type type="cxxfe.ast.types.StructType" uuid="8e5aec8f-07ed-4dce-937a-f9bdaf3770a0"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f2553495-8f80-44ae-af74-4670de525bae">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="0e265abd-82ca-4579-87a4-d55262fd3189"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="5cd9b2e7-d004-4e88-bf4e-93df9de6014e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="99e79171-211a-4213-be88-fc079fb411c0">
        <Type type="cxxfe.ast.types.StructType" uuid="8e5aec8f-07ed-4dce-937a-f9bdaf3770a0"/>
        <Name>FT_EEPROM_PD_PDO_mv_ma</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e9997457-1814-40b3-9732-62e4d0cac9f1">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2235</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="515d1c95-cb41-4697-91b5-f24b6a9f6469">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="3a8a400c-9bd3-4996-a1cf-66d92e91f94a">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="2cc1dffe-7fca-44d3-8104-2a8610165062"/>
          <Name>~ft_eeprom_pd</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="f7dad9e2-af71-4973-b767-6c6e75b1dc77">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="66bce663-41bb-4e2c-a09b-9f1fe075bb50">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="0f2f0c5b-978e-4f7f-94a0-98ffe9dbc18b"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="767d2802-6d91-400c-9e72-32632728f249"/>
          <Name>ft_eeprom_pd</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="5447f2aa-b230-4633-be5c-cea166c82037">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="5f640e27-1cbd-4782-9c98-f91055a23d41">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="a2220f04-f1e0-4d48-9259-d984b3e05592"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="732a1d8e-2e4f-431e-8de2-f69c8334e7e5"/>
          <Name>ft_eeprom_pd</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="b44a4ae7-8b4a-4a0d-abb3-b2a217d90a89">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="51931440-4e9b-4d8d-819a-5d80b5b65ff1"/>
          <Name>ft_eeprom_pd</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="761fd845-2f03-48d8-b340-23063ac79d05">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="b99aab21-d790-4bf3-aed8-c889836538b4">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="a2220f04-f1e0-4d48-9259-d984b3e05592"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="fcad176c-3159-48cf-8549-b5299eb09e6f"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="adf3ecc9-c900-4ff7-8263-e19aa9348177">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="f0cbcb8f-c462-4847-9b6e-2dbe0ef7acfc">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="0f2f0c5b-978e-4f7f-94a0-98ffe9dbc18b"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="480cb634-d7bd-4216-ab01-1cba933cb2a1"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="7aeac447-c33a-4f51-9713-922e414e4800">
          <Access>Public</Access>
          <Comments>/// Configuration</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>srprs</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cdeb39e9-54e8-4061-b8f8-23da7f8137d3">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2257</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="bfed7582-8b57-40e8-9c94-6b0fa4e5dcc3">
          <Access>Public</Access>
          <Comments>/// non-zero to enable Sink Request Power Role Swap</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>sraprs</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a800b9ad-0424-4fe9-964f-b32d599a5755">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2258</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="119fa393-c237-40d2-a3c5-ece67aa6f444">
          <Access>Public</Access>
          <Comments>/// non-zero to enable Sink Accept PR Swap</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>srrprs</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5914476b-985a-4b63-85a0-785b3b2ee181">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2259</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="bec1c349-c87d-4ed1-ae1c-3f6fc1ffc93d">
          <Access>Public</Access>
          <Comments>/// non-zero to enable Source Request PR SWAP</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>saprs</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="24ea2c0e-41d5-45eb-84e9-3662312d750c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2260</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="92d83a86-1af6-4c4d-bfab-9fdb63ee8c51">
          <Access>Public</Access>
          <Comments>/// non-zero to enable Source Accept PR SWAP</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>vconns</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="66d99f45-9157-41e2-9a50-85ca816ab786">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2261</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="59148324-a691-488a-8bb3-84a02e78925d">
          <Access>Public</Access>
          <Comments>/// non-zero to enable vConn Swap</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>passthru</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="314dc471-6f71-46ea-98e6-7776990774b8">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2262</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e9fe0afb-fcfb-4578-a61d-522958cdec01">
          <Access>Public</Access>
          <Comments>/// non-zero to enable Pass Through (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>extmcu</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f26f6f61-fa9d-4f92-af9b-5e31359155cc">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2263</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6ecdfc3a-a031-46fe-8a87-09df83a9fd84">
          <Access>Public</Access>
          <Comments>/// non-zero to enable External MCU</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>pd2en</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="47d6c328-41e3-48c0-b30c-93378cf3076e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2264</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c9db1b0f-5969-4eff-a986-4a4cb2fbe31f">
          <Access>Public</Access>
          <Comments>/// non-zero to enable PD2 (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>pd1autoclk</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ec0dc73b-f788-4a49-a034-68a5d2ec231f">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2265</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b330d84e-a9df-4111-8d87-58fa56492e92">
          <Access>Public</Access>
          <Comments>/// non-zero to enable PD1 Auto Clock</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>pd2autoclk</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="274ad13e-0968-47d9-b3d4-6ada73dce7d3">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2266</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c84bd6f2-75a6-4736-bc71-bfda44d289ff">
          <Access>Public</Access>
          <Comments>/// non-zero to enable PD2 Auto Clock (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>useefuse</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="29440521-f1fd-49bc-ab46-74420d772879">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2267</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f2844398-f0d8-4a1e-976a-bd3ac394c818">
          <Access>Public</Access>
          <Comments>/// non-zero to Use EFUSE</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>extvconn</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a6f8d222-9375-47ee-a90e-6ed4653bbc95">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2268</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1aff2c45-d142-4768-84f5-0cbe85da7158">
          <Access>Public</Access>
          <Comments>/// GPIO Configuration</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>count</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5a4ecf42-4a32-40d3-a4ae-bbbff555df6e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2271</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b0812c82-7c21-4ba2-92c0-049ac76efd4c">
          <Access>Public</Access>
          <Comments>/// GPIO Count, supported values are 0 to 7 </Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>gpio1</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="01ad3e1a-dde5-4aea-b5ed-3267196bd693">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2272</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d82d0f9d-c7b6-4546-baf9-2cff051c4096">
          <Access>Public</Access>
          <Comments>/// GPIO Number 1, supports device GPIO values</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>gpio2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4df9e8d1-0020-400d-afef-b49ead88e2bf">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2273</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="58563144-7925-4ecd-bd21-efae92990458">
          <Access>Public</Access>
          <Comments>/// GPIO Number 2, supports device GPIO values</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>gpio3</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="61522076-4033-4817-96cf-0bbe97e7feb5">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2274</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="96a23c93-fd15-4da2-b2ee-825c24c66189">
          <Access>Public</Access>
          <Comments>/// GPIO Number 3, supports device GPIO values</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>gpio4</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4cde6743-34a0-45f7-a388-6deaebe1d4ff">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2275</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="969bad5f-531e-4f10-8628-87c3ebedd2a6">
          <Access>Public</Access>
          <Comments>/// GPIO Number 4, supports device GPIO values</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>gpio5</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="430fe470-b624-4807-9eb8-4c687ad414c4">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2276</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="fe0e304b-ddaa-44dd-9681-5f1ce1a535a9">
          <Access>Public</Access>
          <Comments>/// GPIO Number 5, supports device GPIO values (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>gpio6</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="04062952-740d-47f7-a670-992c8d51eaa1">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2277</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="55753305-a64f-4b38-8390-57dc6138b547">
          <Access>Public</Access>
          <Comments>/// GPIO Number 6, supports device GPIO values (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>gpio7</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0d4e582c-d43b-48d3-963c-e9140358a605">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2278</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="cae3bd5f-5d20-4b53-9e50-3ce9f2e12ce7">
          <Access>Public</Access>
          <Comments>/// GPIO Number 7, supports device GPIO values (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>pd1lden</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0d4d29c3-f71b-4794-a532-d1c1bd8d8398">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2279</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9a389a48-fe3a-4cbc-b3a9-e5504f644459">
          <Access>Public</Access>
          <Comments>/// PD1 Load Enable, supports device GPIO values</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>pd2lden</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="92ab7d2a-051c-4239-9ce7-c017524a7834">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2280</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4123d1cb-143d-4bbb-ba4f-4e7dc98f6503">
          <Access>Public</Access>
          <Comments>/// PD2 Load Enable, supports device GPIO values (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>dispin</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3b158cb0-fcae-4d13-8f0c-bd4dfabd9432">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2281</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9e8c9375-e075-4f95-b3e3-faefef36644c">
          <Access>Public</Access>
          <Comments>/// Discharge Pin, supports device GPIO values</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>disenbm</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3c75d552-31dc-4ac9-b94b-6e97f235d7de">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2282</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4deb2163-8868-486e-b59c-cfacab628459">
          <Access>Public</Access>
          <Comments>/// Discharge Enable BM, 0 for &quot;Drive Hi&quot;, 1 for &quot;Drive Low&quot;, 2 for &quot;Input Mode&quot;, 3 for &quot;Don&apos;t Care&quot;</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>disdisbm</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e2c6fa5a-5d32-49d2-8a48-ea9d90b677b0">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2283</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a653862d-d743-4195-974d-e8e3fdb2d22e">
          <Access>Public</Access>
          <Comments>/// Discharge Disable BM, 0 for &quot;Drive Hi&quot;, 1 for &quot;Drive Low&quot;, 2 for &quot;Input Mode&quot;, 3 for &quot;Don&apos;t Care&quot;</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ccselect</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="57a84a46-e759-4050-ae46-09b61782694d">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2284</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7dc3389f-d513-4ecb-bda5-831ab3f375bd">
          <Access>Public</Access>
          <Comments>/// ISET Configuration</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>iset1</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0e767c5d-107c-4f65-83e4-41d6274b7186">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2287</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9c1501b9-0996-4851-87cf-db4462abb906">
          <Access>Public</Access>
          <Comments>/// ISET1, supports device GPIO values</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>iset2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="832fe886-17b7-44d0-ae0a-ed4c9e2ec8a8">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2288</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8ed501dc-6a77-42de-9b73-3e3e2d19278c">
          <Access>Public</Access>
          <Comments>/// ISET2, supports device GPIO values</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>iset3</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="725eac3c-916c-43f6-89e7-060a71aea123">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2289</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a076416a-17ab-42ab-b6a0-aa2d6c5a6f06">
          <Access>Public</Access>
          <Comments>/// ISET3, supports device GPIO values</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>extiset</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8dcc0658-eda3-4e5c-8472-cdfdeb87d8db">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2290</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9ba3e349-0af3-49cd-b76a-b6445b48a83a">
          <Access>Public</Access>
          <Comments>/// non-zero to enable EXTEND_ISET</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>isetpd2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f7fd9ea1-c63f-4bce-bc71-610177584951">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2291</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8e21b981-86a3-4ce8-b839-a356b1f579ad">
          <Access>Public</Access>
          <Comments>/// non-zero to enable ISET_PD2</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>iseten</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c18dc7b5-b09b-45ed-9af8-6bae6723f247">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2292</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="79b4c65e-9373-4e28-84ae-61443668f1dd">
          <Access>Public</Access>
          <Comments>/// BM Configuration, 0 for &quot;Drive Hi&quot;, 1 for &quot;Drive Low&quot;, 2 for &quot;Input Mode&quot;, 3 for &quot;Don&apos;t Care&quot;</Comments>
          <Type type="cxxfe.ast.types.ArrayType" uuid="bda4e640-ee2a-450d-8884-c8c06d6766e9"/>
          <Name>PDO1_GPIO</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="eefb5470-6779-4ab3-a9d2-422923435f26">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2295</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ec54888e-24d6-48c0-b903-74f61652c5aa">
          <Access>Public</Access>
          <Comments>/// PDO1 GPIO1 to GPIO7</Comments>
          <Type type="cxxfe.ast.types.ArrayType" uuid="679a8c92-6e51-48e9-aa11-f9f2e78eee3c"/>
          <Name>PDO2_GPIO</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="49a9e5d8-70e3-4951-8b1b-f9748a88416c">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2296</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3fcf43bb-a3bf-4dcc-b0d9-72452df5ce90">
          <Access>Public</Access>
          <Comments>/// PDO2 GPIO1 to GPIO7</Comments>
          <Type type="cxxfe.ast.types.ArrayType" uuid="8263a116-8e67-445e-8686-a116bee0e93f"/>
          <Name>PDO3_GPIO</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c7eef7d3-ffc6-4b65-b24b-3cef06d4fef4">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2297</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ee2d057c-5a96-4591-9452-825b86de52d8">
          <Access>Public</Access>
          <Comments>/// PDO3 GPIO1 to GPIO7</Comments>
          <Type type="cxxfe.ast.types.ArrayType" uuid="6eb0f6e4-e39e-451d-a56b-c207957f7c5b"/>
          <Name>PDO4_GPIO</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="66d1a8f0-ff65-44d8-be77-ee00835fe569">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2298</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="cad5096e-ace2-4c33-a2e1-48db3e2da5ac">
          <Access>Public</Access>
          <Comments>/// PDO4 GPIO1 to GPIO7</Comments>
          <Type type="cxxfe.ast.types.ArrayType" uuid="3beae675-6bda-47d3-bd98-590efdef73dd"/>
          <Name>PDO5_GPIO</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cc0c3f7a-a883-4a7a-a985-3514d227657f">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2299</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f19fcf39-1619-4811-bd5c-5833f3afa4ea">
          <Access>Public</Access>
          <Comments>/// PDO5 GPIO1 to GPIO7 (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.ArrayType" uuid="d3fdd2c2-21a3-4b2b-9169-bc5a1b48029a"/>
          <Name>PDO6_GPIO</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="64e18548-e849-478a-ad3d-f435820a7904">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2300</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2a480593-a26b-422a-98e2-552c6c8f4f9d">
          <Access>Public</Access>
          <Comments>/// PDO6 GPIO1 to GPIO7 (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.ArrayType" uuid="35877f39-b674-480e-84a4-adb20d13fb9f"/>
          <Name>PDO7_GPIO</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="24c03f44-4259-4f62-8951-1441c5bd0954">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2301</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="908a6c64-f017-4f9e-ae93-8642d4c940b9">
          <Access>Public</Access>
          <Comments>/// PDO7 GPIO1 to GPIO7 (FTx233HP only)</Comments>
          <Type type="cxxfe.ast.types.ArrayType" uuid="20a5984d-b6c3-4360-b7c8-8eaa12b84edc"/>
          <Name>VSET0V_GPIO</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c6b56329-535e-4844-a7fd-eb198b73c2d0">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2302</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="496a34ba-9949-4ea3-9dc9-070a6037356b">
          <Access>Public</Access>
          <Comments>/// PDO7 GPIO1 to GPIO7</Comments>
          <Type type="cxxfe.ast.types.ArrayType" uuid="a6a1c62f-6132-41d6-885a-d64f597d59c1"/>
          <Name>VSAFE5V_GPIO</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="78899742-48e9-4011-9512-37991909eb73">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2303</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9a86a395-d646-487e-bf58-f027dcc615d9">
          <Access>Public</Access>
          <Comments>/// PDO7 GPIO1 to GPIO7</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="99e79171-211a-4213-be88-fc079fb411c0"/>
          <Name>BM_PDO_Sink</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4b29ba95-a286-4061-a58d-ba8de3c70443">
            <Col>26</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2305</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3801c855-27e9-482a-9e3f-fb238d5e88d9">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="99e79171-211a-4213-be88-fc079fb411c0"/>
          <Name>BM_PDO_Source</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a063682f-1018-4821-b89f-d301468bb1be">
            <Col>26</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2306</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4b8ea236-cc8e-4505-be7a-5eeccca75dd4">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="99e79171-211a-4213-be88-fc079fb411c0"/>
          <Name>BM_PDO_Sink_2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="23743cfd-22e5-43bf-a431-4495c0e4da75">
            <Col>26</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2307</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d137cbee-1dc8-4ed8-92be-07fbddbc3d88">
          <Access>Public</Access>
          <Comments>/// PD Timers</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>srt</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d5382d49-38dd-4a40-a460-cd0be786eea4">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2310</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="46ea43cc-e3f4-4412-9068-b8eec2cde959">
          <Access>Public</Access>
          <Comments>/// Sender Response Timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>hrt</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="130363d4-06df-40bb-be2a-a54540f2fd0e">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2311</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8257ea34-5418-4145-8d95-0469e4a61efa">
          <Access>Public</Access>
          <Comments>/// Hard Reset Timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>sct</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f446ac6b-903a-49f6-bc96-bced7c51c4fc">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2312</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e75b936a-8aaa-4238-9ca4-5b3b4b08860e">
          <Access>Public</Access>
          <Comments>/// Source Capability Timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>dit</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a71f9c98-d63b-4e28-8042-7a3b7b48d1c0">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2313</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="cfb3b98d-46cd-46d3-a62c-099d329bd9a7">
          <Access>Public</Access>
          <Comments>/// Discover Identity Timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>srcrt</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1c60b98c-47a6-4687-84c5-841585ec8be5">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2314</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a853f71a-b474-4f14-ad04-74eda23f48e9">
          <Access>Public</Access>
          <Comments>/// Source Recover Timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>trt</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="068ff1a2-8579-4077-b1ef-f63e564fe35d">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2315</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e14a4a7f-ee93-40b5-83a9-8aab50981221">
          <Access>Public</Access>
          <Comments>/// Transition Timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>sofft</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="351bee8a-4ccd-4ca0-86d6-a235a8550340">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2316</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f1544442-afc3-4ea6-8728-7e42d232eb79">
          <Access>Public</Access>
          <Comments>/// Source off timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>nrt</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9c3c980c-627a-4be1-ab6b-9086818ee57d">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2317</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8eae582a-2bc0-4f75-a0d5-bdf7557aff1c">
          <Access>Public</Access>
          <Comments>/// No Response Timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>swct</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="38b26fe3-58ae-4958-af9c-db8bada3bf59">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2318</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4412a509-2716-44d5-a10d-7cb6eeb1b325">
          <Access>Public</Access>
          <Comments>/// Sink Wait Capability Timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>snkrt</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="72e31c0c-bc6d-4416-99c7-afe5907c3a62">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2319</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="14265b4c-149a-490c-a059-1e3d145ee6b2">
          <Access>Public</Access>
          <Comments>/// Sink Request Timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>dt</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3e9604d7-05ef-4460-8571-a6121bbb4fd9">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2320</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="51e7e9a8-b18d-4682-9f9d-bcb2f76716ba">
          <Access>Public</Access>
          <Comments>/// Discharge Timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>cnst</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a87990da-71b3-4da5-803d-f260b5290951">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2321</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="46691109-2493-455f-9a4d-ded880647618">
          <Access>Public</Access>
          <Comments>/// Chunk not supported timer</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>it</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="97724f98-f175-44bd-a138-f397d61e516b">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2322</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ae6f8bfb-0e05-4b8d-9e7f-7ab9182ebc33">
          <Access>Public</Access>
          <Comments>/// PD Control</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>i2caddr</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="44a12449-1782-42c1-8d51-a7845ed2b80d">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2325</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="974f90f6-0cb5-4ba0-aaaa-0b17145c9efe">
          <Access>Public</Access>
          <Comments>/// I2C Address (hex)</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="5270920c-8357-458f-83bc-5adbe6bdebd5"/>
          <Name>prou</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b5198308-514b-40ad-9305-3dedadc1e42e">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2326</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2aaf9545-dd83-4b19-b9cf-efea12c12372">
          <Access>Public</Access>
          <Comments>/// Power Reserved for OWN use</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="5270920c-8357-458f-83bc-5adbe6bdebd5"/>
          <Name>trim1</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="19063f8e-ff50-432d-9398-c9fc77262663">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2327</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ce649265-ff6b-419a-b34c-52681c2c72f3">
          <Access>Public</Access>
          <Comments>/// TRIM1</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="5270920c-8357-458f-83bc-5adbe6bdebd5"/>
          <Name>trim2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6cd0571c-131c-4eb1-8865-5ed9ec2447a9">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2328</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f8e2444b-36af-4829-aa8e-b67ccfa7a50f">
          <Access>Public</Access>
          <Comments>/// TRIM2</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>extdc</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d1cbd4f7-1cbb-4f1a-afbc-dc6873125e28">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2329</Line>
          </DefPos>
        </Members>
        <Name>ft_eeprom_pd</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="68fe509c-bfcd-4d32-8200-ccb6f31a28fa">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="0ea85a92-f32a-4b69-829d-ef3520f96b00">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="5a1a9b36-ee42-4c12-9613-c2e607ec7d8e">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="70e8c984-4ed6-46da-b3c2-e7bd01dc9bef">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="302ff561-876c-42b9-a6f9-65d921145e29"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="efd49df1-c5ee-4d7f-9e6e-d134bee403bb">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2255</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="bda4e640-ee2a-450d-8884-c8c06d6766e9">
        <Dimensions>7</Dimensions>
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="79c921e9-72f1-4fce-9811-f492b4e42c23">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2295</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="679a8c92-6e51-48e9-aa11-f9f2e78eee3c">
        <Dimensions>7</Dimensions>
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="46a76055-9b95-452c-8fd2-f68eca62cc1d">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2296</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="8263a116-8e67-445e-8686-a116bee0e93f">
        <Dimensions>7</Dimensions>
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="89753597-800b-4af8-90f1-2991b0456866">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2297</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="6eb0f6e4-e39e-451d-a56b-c207957f7c5b">
        <Dimensions>7</Dimensions>
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="38fa2c7f-ef4d-441c-8f1e-3e74732f20f1">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2298</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="3beae675-6bda-47d3-bd98-590efdef73dd">
        <Dimensions>7</Dimensions>
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e9b6fe64-eb0f-43c2-aa44-0a6b27398d1c">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2299</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="d3fdd2c2-21a3-4b2b-9169-bc5a1b48029a">
        <Dimensions>7</Dimensions>
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b7fc4d91-b92e-456f-a669-432b62e9ecfd">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2300</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="35877f39-b674-480e-84a4-adb20d13fb9f">
        <Dimensions>7</Dimensions>
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0b51307e-f22a-42ec-bd88-cfab904146f3">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2301</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="20a5984d-b6c3-4360-b7c8-8eaa12b84edc">
        <Dimensions>7</Dimensions>
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="99b2f2e0-047f-4f60-a156-8821e1725da3">
          <Col>20</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2302</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.ArrayType" uuid="a6a1c62f-6132-41d6-885a-d64f597d59c1">
        <Dimensions>7</Dimensions>
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0c16b008-1d33-4eec-87ba-669363247cee">
          <Col>21</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2303</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2cc1dffe-7fca-44d3-8104-2a8610165062">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="767d2802-6d91-400c-9e72-32632728f249">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="0f2f0c5b-978e-4f7f-94a0-98ffe9dbc18b"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="0f2f0c5b-978e-4f7f-94a0-98ffe9dbc18b">
        <Type type="cxxfe.ast.types.StructType" uuid="515d1c95-cb41-4697-91b5-f24b6a9f6469"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="732a1d8e-2e4f-431e-8de2-f69c8334e7e5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="a2220f04-f1e0-4d48-9259-d984b3e05592"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="a2220f04-f1e0-4d48-9259-d984b3e05592">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="4e088143-ab77-4fbf-907e-e8eb2cbd68a2"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="4e088143-ab77-4fbf-907e-e8eb2cbd68a2">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="515d1c95-cb41-4697-91b5-f24b6a9f6469"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="51931440-4e9b-4d8d-819a-5d80b5b65ff1">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fcad176c-3159-48cf-8549-b5299eb09e6f">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="a2220f04-f1e0-4d48-9259-d984b3e05592"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="088dfdb6-8f6d-4cb9-ac68-5ebb3d057d54"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="088dfdb6-8f6d-4cb9-ac68-5ebb3d057d54">
        <Type type="cxxfe.ast.types.StructType" uuid="515d1c95-cb41-4697-91b5-f24b6a9f6469"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="480cb634-d7bd-4216-ab01-1cba933cb2a1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="0f2f0c5b-978e-4f7f-94a0-98ffe9dbc18b"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="088dfdb6-8f6d-4cb9-ac68-5ebb3d057d54"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="1feb8bd4-3139-4d97-b408-cddce09b670d">
        <Type type="cxxfe.ast.types.StructType" uuid="515d1c95-cb41-4697-91b5-f24b6a9f6469"/>
        <Name>FT_EEPROM_PD</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bb02fdcc-222b-4d5d-b9f2-3b7db8974c03">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2330</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="8b380dda-68b4-491c-8a81-036daf772a56">
        <Type type="cxxfe.ast.types.PointerType" uuid="409f00e7-b5f5-456f-b47d-8428bd0be76e"/>
        <Name>PFT_EEPROM_PD</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a1f3aed1-e434-488a-bf32-ff59c9a29437">
          <Col>19</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2330</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="409f00e7-b5f5-456f-b47d-8428bd0be76e">
        <Type type="cxxfe.ast.types.StructType" uuid="515d1c95-cb41-4697-91b5-f24b6a9f6469"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="e1241cde-4629-4f07-9da7-a87e7c0b7c99">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="c4ad0964-6079-4ff8-91cf-53e5a2ef86d6">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="cce59606-185b-44db-8264-c95bdbf7deb9"/>
          <Name>~_ft_eeprom_2233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="c77b07a9-bfe8-42d1-81f7-8081e860ced9">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="7430d21f-0a48-4464-bddb-bd9ee7868442">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="d89c0147-45d7-4106-a1ca-5b977961e19d"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="5997527c-c72c-4811-9227-b9ec372b46ce"/>
          <Name>_ft_eeprom_2233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="e1fd1e6a-fb12-454a-a4bc-705a3889b301">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="4e0e8350-6ab1-42f1-940d-98a26aa2b4d5">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="2940937d-2dd4-4801-a95f-4e3ca759ae34"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="dd5c4f99-03f6-48e4-b634-ad89af68411a"/>
          <Name>_ft_eeprom_2233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="d432fe77-f8ad-4273-83e3-cf5509efdc92">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="2028004c-d572-4bb0-9a86-d1c44bfe5704"/>
          <Name>_ft_eeprom_2233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="a97cff7c-44f0-4ba8-866d-fb7a2ed1f774">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="6bb03f74-a4a2-411c-b7fc-c234564aa296">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="2940937d-2dd4-4801-a95f-4e3ca759ae34"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="0d062e18-af48-493c-99e7-97ce5a623b55"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="24b15aa5-873c-4839-8309-ef06179d38cb">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="db6159d9-5444-4eb3-810b-f7deb51b1621">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="d89c0147-45d7-4106-a1ca-5b977961e19d"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="43839de5-339d-44de-9c4f-f2412e68f3b7"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="3b5952f0-5e7c-45f1-88e6-dcaf8e3f7ee7">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="911dc0e0-22bb-477f-8499-5d8c6e752684"/>
          <Name>ft2232h</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e7781c24-0793-4a65-96de-02f2b85d1026">
            <Col>19</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2336</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8737f535-2869-4f81-8669-f84b00bbb398">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1feb8bd4-3139-4d97-b408-cddce09b670d"/>
          <Name>pd</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="550178d9-c952-4e22-ad70-35f40423648c">
            <Col>16</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2337</Line>
          </DefPos>
        </Members>
        <Name>_ft_eeprom_2233hp</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="2b63a5e1-7c82-4141-b2d4-cc3868fcf9f0">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="16daf186-a17a-47d3-bcb4-642272a2d2c0">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="970c1084-26b6-4e6f-b64c-9a469d13849b">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="4a06a578-6451-4dd0-a611-c201473c729b">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d01e0df8-250c-4cb2-8344-9c8dbde375fe"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cee66c38-93ae-42d2-ac05-1d25a7de0d1c">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2334</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="cce59606-185b-44db-8264-c95bdbf7deb9">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="5997527c-c72c-4811-9227-b9ec372b46ce">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="d89c0147-45d7-4106-a1ca-5b977961e19d"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="d89c0147-45d7-4106-a1ca-5b977961e19d">
        <Type type="cxxfe.ast.types.StructType" uuid="e1241cde-4629-4f07-9da7-a87e7c0b7c99"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="dd5c4f99-03f6-48e4-b634-ad89af68411a">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="2940937d-2dd4-4801-a95f-4e3ca759ae34"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="2940937d-2dd4-4801-a95f-4e3ca759ae34">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="0e45cb71-560c-4d46-82e0-dfd8e4f7dd29"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="0e45cb71-560c-4d46-82e0-dfd8e4f7dd29">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="e1241cde-4629-4f07-9da7-a87e7c0b7c99"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2028004c-d572-4bb0-9a86-d1c44bfe5704">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0d062e18-af48-493c-99e7-97ce5a623b55">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="2940937d-2dd4-4801-a95f-4e3ca759ae34"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="fcf1297d-d552-414a-b819-c942d4f077ea"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="fcf1297d-d552-414a-b819-c942d4f077ea">
        <Type type="cxxfe.ast.types.StructType" uuid="e1241cde-4629-4f07-9da7-a87e7c0b7c99"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="43839de5-339d-44de-9c4f-f2412e68f3b7">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="d89c0147-45d7-4106-a1ca-5b977961e19d"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="fcf1297d-d552-414a-b819-c942d4f077ea"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="20c83f7b-69b4-4632-ad49-8572cf98612a">
        <Type type="cxxfe.ast.types.StructType" uuid="e1241cde-4629-4f07-9da7-a87e7c0b7c99"/>
        <Name>FT_EEPROM_2233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bbe76d30-a7fa-4f19-8ec9-4eaf4386a507">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2338</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="2757baee-644d-4fe1-924d-351c60f5e6d0">
        <Type type="cxxfe.ast.types.PointerType" uuid="0a2c68a5-a527-4a85-b42f-522d2d0297b5"/>
        <Name>PFT_EEPROM_2233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0da0068c-d745-4451-9a89-219213fe70a4">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2338</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="0a2c68a5-a527-4a85-b42f-522d2d0297b5">
        <Type type="cxxfe.ast.types.StructType" uuid="e1241cde-4629-4f07-9da7-a87e7c0b7c99"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="c5d744e0-9139-4bfe-9972-99a80753ab1a">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="4e85b436-d0a6-4f69-8902-a565dbe90afe">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="06a49c06-961b-4237-b467-9884ea7ef5bd"/>
          <Name>~_ft_eeprom_4233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="a9338de2-9633-49ab-ada8-7e3e8adb8c3c">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="359b72da-4542-411a-a441-5be604e34638">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="b6cc43c3-fd56-495b-8add-9c706c5eb547"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="b1dfe6c6-b4d0-4822-b53d-0fcf736161b9"/>
          <Name>_ft_eeprom_4233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="4ba2a458-e7c7-4e22-83ff-3363271e845b">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="7a16b3ea-ec18-4293-88f9-652461b0306f">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="9cba1a4f-2e6b-4025-8475-8dc7050458d5"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="2218db8e-4a14-4d8e-8dca-4a1c73138bff"/>
          <Name>_ft_eeprom_4233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="35e2f7c5-1ffe-448b-8304-c60c55f0ff8a">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="b4f1f28c-73b6-43db-b12c-36fa0fbd67af"/>
          <Name>_ft_eeprom_4233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="b9109ed6-caca-465c-842d-b48e3d704dd7">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="eb2d67df-d89d-4395-a1e1-a28a44920701">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="9cba1a4f-2e6b-4025-8475-8dc7050458d5"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="d79210d9-f5d3-466d-8b3a-c233cf49d39f"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="444d38e8-0b69-46c2-8501-457aba2a934f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="6a9b3772-32d9-4cea-bf81-f893bdf418c2">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="b6cc43c3-fd56-495b-8add-9c706c5eb547"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="2955c46c-7fe2-4073-8a6d-d76054e31b58"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="2ecddbdb-b6e6-4931-acd0-06d9c7168047">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="4efd80f4-83b6-45dd-bfac-b798db778e50"/>
          <Name>ft4232h</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8a6ce72c-0f67-4817-9a60-2866d58b3f6f">
            <Col>19</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2344</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="727d7e40-cc2e-4a25-9765-54f89d4979f0">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1feb8bd4-3139-4d97-b408-cddce09b670d"/>
          <Name>pd</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cfac397a-5533-4070-9652-14f1c7ce30d4">
            <Col>16</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2345</Line>
          </DefPos>
        </Members>
        <Name>_ft_eeprom_4233hp</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="2b4773b0-8402-4f73-a204-26395540aa17">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="7bafad14-0c30-461a-85aa-f0a284786faf">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="cd7043ef-ff84-4937-b52b-7ff445dd6e78">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="3bea8291-3d19-472e-b4d2-1accda5b6d7d">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="4c8994b2-b4e7-4299-8f98-2f702dce2268"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7032e126-179f-4a06-b51c-914c449f7fdc">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2342</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="06a49c06-961b-4237-b467-9884ea7ef5bd">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="b1dfe6c6-b4d0-4822-b53d-0fcf736161b9">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="b6cc43c3-fd56-495b-8add-9c706c5eb547"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="b6cc43c3-fd56-495b-8add-9c706c5eb547">
        <Type type="cxxfe.ast.types.StructType" uuid="c5d744e0-9139-4bfe-9972-99a80753ab1a"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2218db8e-4a14-4d8e-8dca-4a1c73138bff">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="9cba1a4f-2e6b-4025-8475-8dc7050458d5"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="9cba1a4f-2e6b-4025-8475-8dc7050458d5">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="c4c1790e-2eaa-4db8-9b14-3fac4c3bc989"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="c4c1790e-2eaa-4db8-9b14-3fac4c3bc989">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="c5d744e0-9139-4bfe-9972-99a80753ab1a"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="b4f1f28c-73b6-43db-b12c-36fa0fbd67af">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d79210d9-f5d3-466d-8b3a-c233cf49d39f">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="9cba1a4f-2e6b-4025-8475-8dc7050458d5"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="a4840fe4-931f-48ad-880f-36939a922800"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="a4840fe4-931f-48ad-880f-36939a922800">
        <Type type="cxxfe.ast.types.StructType" uuid="c5d744e0-9139-4bfe-9972-99a80753ab1a"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2955c46c-7fe2-4073-8a6d-d76054e31b58">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="b6cc43c3-fd56-495b-8add-9c706c5eb547"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="a4840fe4-931f-48ad-880f-36939a922800"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="5a5f423a-58d2-4003-8358-fc2e977f008e">
        <Type type="cxxfe.ast.types.StructType" uuid="c5d744e0-9139-4bfe-9972-99a80753ab1a"/>
        <Name>FT_EEPROM_4233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="821dd4d8-1309-439e-9d38-d8bb247654f2">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2346</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="6e32f389-c4da-4f16-ba41-cc49420a74c9">
        <Type type="cxxfe.ast.types.PointerType" uuid="40944335-471c-4b55-ba2d-37edd82e7bd2"/>
        <Name>PFT_EEPROM_4233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d2135c8d-c48e-4b55-85ea-6d74d0839a2d">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2346</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="40944335-471c-4b55-ba2d-37edd82e7bd2">
        <Type type="cxxfe.ast.types.StructType" uuid="c5d744e0-9139-4bfe-9972-99a80753ab1a"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="81ac384e-3962-481c-bf3b-9a7f12904f41">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="6421c021-2707-40f3-bdc5-c9ee8674a2da">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="22ed2e95-7b9d-44df-a68a-98eb308143e5"/>
          <Name>~_ft_eeprom_2232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="aab24226-f803-427a-811f-51900aad146c">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="30c3a311-88ac-44ab-91d1-fb3c57911e25">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="a6ad6726-b49d-4471-ae59-b27fee22e125"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="225d135c-b9c1-43bb-bef4-0e7d7254964d"/>
          <Name>_ft_eeprom_2232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="94d8dd5f-9ade-461b-bf8f-d56e50a2a8de">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="8f9c7798-2386-47e4-8153-e95ce3e9ddeb">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="e2b3516d-0674-4b8f-8bde-23f69be89501"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="e42d339f-5394-413b-bb09-40ad282427c5"/>
          <Name>_ft_eeprom_2232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="0ff9f2c8-229c-4dc3-aeb0-9c7f237a690c">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="7032c9ec-3697-4fda-b2bf-e1ababd40e28"/>
          <Name>_ft_eeprom_2232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="daa63ad1-c78e-4cbc-983e-25ffefeb07ca">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="68a6551d-e578-458a-9213-ecd7e2e3721a">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="e2b3516d-0674-4b8f-8bde-23f69be89501"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="658f5498-7944-4b74-83a5-daba263e041d"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="121dd2fa-cb82-426c-807e-a0433da54b6e">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="dc585a3c-8a3a-4d7e-a6f8-2708dd3529f5">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="a6ad6726-b49d-4471-ae59-b27fee22e125"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="1cff535e-e4ff-4fd6-8ab7-4fe3ec4e1fc1"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="6ca24094-ef89-40b8-8300-96f7a0dd629d">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="911dc0e0-22bb-477f-8499-5d8c6e752684"/>
          <Name>ft2232h</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e830c4fe-576e-4e08-b947-2ade596f1066">
            <Col>19</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2352</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0e20a92b-84da-4f2e-8457-9d7a7f056a9f">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1feb8bd4-3139-4d97-b408-cddce09b670d"/>
          <Name>pd</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2dfa6b70-dfed-4d6f-9f84-c4753ea69abd">
            <Col>16</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2353</Line>
          </DefPos>
        </Members>
        <Name>_ft_eeprom_2232hp</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="c3aafbee-476f-4a72-96c9-16359af3057b">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="5ea0d87a-f9ef-4e29-897b-5a163356bccc">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="180e89fd-3f8b-43a0-9bbb-59812b81fad4">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="bd4cca09-8c89-46df-9ff4-fec7ae252f30">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="1ab1594d-3223-4f86-a9e2-87afebd87e7c"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e4a0fb10-32a4-4fdf-9c03-b8c86ee2b509">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2350</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="22ed2e95-7b9d-44df-a68a-98eb308143e5">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="225d135c-b9c1-43bb-bef4-0e7d7254964d">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="a6ad6726-b49d-4471-ae59-b27fee22e125"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="a6ad6726-b49d-4471-ae59-b27fee22e125">
        <Type type="cxxfe.ast.types.StructType" uuid="81ac384e-3962-481c-bf3b-9a7f12904f41"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e42d339f-5394-413b-bb09-40ad282427c5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="e2b3516d-0674-4b8f-8bde-23f69be89501"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="e2b3516d-0674-4b8f-8bde-23f69be89501">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="dbb42f19-9e20-4e45-9617-8eb10e1090bb"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="dbb42f19-9e20-4e45-9617-8eb10e1090bb">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="81ac384e-3962-481c-bf3b-9a7f12904f41"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="7032c9ec-3697-4fda-b2bf-e1ababd40e28">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="658f5498-7944-4b74-83a5-daba263e041d">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="e2b3516d-0674-4b8f-8bde-23f69be89501"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="e82f8b6b-acfe-477f-910c-4be462f9e440"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="e82f8b6b-acfe-477f-910c-4be462f9e440">
        <Type type="cxxfe.ast.types.StructType" uuid="81ac384e-3962-481c-bf3b-9a7f12904f41"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="1cff535e-e4ff-4fd6-8ab7-4fe3ec4e1fc1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="a6ad6726-b49d-4471-ae59-b27fee22e125"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="e82f8b6b-acfe-477f-910c-4be462f9e440"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="ee91ecb9-4c69-4f0a-bb2d-5040e3ef7c21">
        <Type type="cxxfe.ast.types.StructType" uuid="81ac384e-3962-481c-bf3b-9a7f12904f41"/>
        <Name>FT_EEPROM_2232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="21266ba1-75dd-475e-8b76-198780829e3b">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2354</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="db58039b-8654-4e06-a62d-3e14f04fb227">
        <Type type="cxxfe.ast.types.PointerType" uuid="51882c6f-be70-4629-8069-dffd04a755f2"/>
        <Name>PFT_EEPROM_2232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="31b9edf3-fc8e-4947-b2fa-38bd5e2d0f3d">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2354</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="51882c6f-be70-4629-8069-dffd04a755f2">
        <Type type="cxxfe.ast.types.StructType" uuid="81ac384e-3962-481c-bf3b-9a7f12904f41"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="d2495ccd-6d49-478d-b980-b9f1b2779133">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="be63c07f-fa06-4f61-8499-4ecc25c73c15">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="04e22a2e-ace0-4d05-a7d2-472981e4ca04"/>
          <Name>~_ft_eeprom_4232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="5a33e57d-93ec-47c2-a288-369e92e640b6">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="cce94e90-ad34-4a49-bcc6-317c22add20f">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="41aa3f89-0a29-4330-aa9a-d4a0702c2aca"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="3a95858b-72f5-4dd1-ae19-59e8967d650d"/>
          <Name>_ft_eeprom_4232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="e9c9813b-cdf5-4b89-ab89-94d8171c8bf0">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="b3a1e442-13d7-49da-bd2f-3a8f39325c12">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="61ff253a-7bfb-40ec-91ab-4ada01f7bdae"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="f49bfdf8-fc9c-4da5-945f-6f7d423be86c"/>
          <Name>_ft_eeprom_4232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="7b32df15-29a3-4ada-8bb5-1a0e7053e91a">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="3eb7306e-6098-4bc1-aa45-51824497ebe2"/>
          <Name>_ft_eeprom_4232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="b559fb39-7a57-40c9-9b4d-60d3009ee5ce">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="b0c9c81d-67ae-48be-b9c0-349a13d68ef7">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="61ff253a-7bfb-40ec-91ab-4ada01f7bdae"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="e20bb41b-9dd0-49eb-9d40-72aa231b5b4f"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="4d3efe2e-719d-4531-8394-879785bc053d">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="b885638a-e51c-434c-8158-021846f19632">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="41aa3f89-0a29-4330-aa9a-d4a0702c2aca"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="cc79e762-f877-4050-889c-bb2a512eb7de"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="d4d905dd-d8ec-4f52-a13c-42de6816b201">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="4efd80f4-83b6-45dd-bfac-b798db778e50"/>
          <Name>ft4232h</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ebe912da-4a53-4c3e-85ff-ae1a82088658">
            <Col>19</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2360</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="951cb1cc-4d60-43c6-972b-d5dad05b0b83">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1feb8bd4-3139-4d97-b408-cddce09b670d"/>
          <Name>pd</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fd91f8ff-384f-4675-9c35-e10a25b2926b">
            <Col>16</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2361</Line>
          </DefPos>
        </Members>
        <Name>_ft_eeprom_4232hp</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="77f8ff11-a9fb-4519-9e3b-4e5d272055de">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="2a7ed3ee-dced-41fd-bdf5-964d922c611d">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="c8e2b514-7788-43ff-92bb-8c99c2fce62c">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="798ee29b-f24f-4c80-86d2-4af6c2bf3888">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="de4f7215-787f-4cc5-9dbf-39707754178b"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cd7d7667-ec63-4fd4-952e-ce29c2fdc92c">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2358</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="04e22a2e-ace0-4d05-a7d2-472981e4ca04">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="3a95858b-72f5-4dd1-ae19-59e8967d650d">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="41aa3f89-0a29-4330-aa9a-d4a0702c2aca"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="41aa3f89-0a29-4330-aa9a-d4a0702c2aca">
        <Type type="cxxfe.ast.types.StructType" uuid="d2495ccd-6d49-478d-b980-b9f1b2779133"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f49bfdf8-fc9c-4da5-945f-6f7d423be86c">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="61ff253a-7bfb-40ec-91ab-4ada01f7bdae"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="61ff253a-7bfb-40ec-91ab-4ada01f7bdae">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="652df673-c10d-4ec1-89d0-8b6c3cf0aded"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="652df673-c10d-4ec1-89d0-8b6c3cf0aded">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="d2495ccd-6d49-478d-b980-b9f1b2779133"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="3eb7306e-6098-4bc1-aa45-51824497ebe2">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e20bb41b-9dd0-49eb-9d40-72aa231b5b4f">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="61ff253a-7bfb-40ec-91ab-4ada01f7bdae"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="7de07699-b0bd-47e1-bc9d-624e1f43faf6"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="7de07699-b0bd-47e1-bc9d-624e1f43faf6">
        <Type type="cxxfe.ast.types.StructType" uuid="d2495ccd-6d49-478d-b980-b9f1b2779133"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="cc79e762-f877-4050-889c-bb2a512eb7de">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="41aa3f89-0a29-4330-aa9a-d4a0702c2aca"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="7de07699-b0bd-47e1-bc9d-624e1f43faf6"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="a2697414-d39f-4ab6-a5b8-c11eaacbd2b9">
        <Type type="cxxfe.ast.types.StructType" uuid="d2495ccd-6d49-478d-b980-b9f1b2779133"/>
        <Name>FT_EEPROM_4232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c03fb5df-be54-4615-8a3a-fb18f62d7571">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2362</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="9d3c6043-4925-4661-9452-e0a18991faf1">
        <Type type="cxxfe.ast.types.PointerType" uuid="ac90c140-c105-49cc-a436-dff6b9817f51"/>
        <Name>PFT_EEPROM_4232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="365590a3-b431-43fd-8c9e-f8b2a96176de">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2362</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="ac90c140-c105-49cc-a436-dff6b9817f51">
        <Type type="cxxfe.ast.types.StructType" uuid="d2495ccd-6d49-478d-b980-b9f1b2779133"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="bdc9b5e4-1c9e-43f2-aad7-6e98384e89be">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="81680bc3-9181-4427-b7ce-89f382f7e4aa">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="7e90ee4c-5ffc-4885-9f63-992144d486e3"/>
          <Name>~_ft_eeprom_233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="58e49029-a2af-4bb9-95ef-9dc49752ed3d">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="ffc2d4d9-2467-43be-8e7e-8518daca62dc">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="a00ac580-32e6-4536-a23a-b7d94ce9730e"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="d975c8f4-41ac-4f71-a914-298a0391a231"/>
          <Name>_ft_eeprom_233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="1f114db3-50b0-4d71-b721-d39c777abf63">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="de2a627c-1e7c-4bba-bc82-4018fa0f4b71">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="f19adfc3-9bac-408c-91e3-cc81c3b462a7"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="5f21cc51-f7ee-4f91-8174-1ab36e2efb55"/>
          <Name>_ft_eeprom_233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="bb8ea917-f316-4e85-8942-4d3e476e95e6">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="6e0c00b6-85f2-4631-b5db-ec2823e9fb8d"/>
          <Name>_ft_eeprom_233hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="8db113e9-facd-4dc5-a4f6-a844a01a983f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="b8453607-5d7f-439e-9ecc-6acad40503fb">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="f19adfc3-9bac-408c-91e3-cc81c3b462a7"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="e6e2a134-7249-4fdd-92ce-3e3165eae3c4"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="8b1db092-8cb2-4031-941a-2d133964dc75">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="30f3848c-a6ae-4c95-ad47-ab49cb06b762">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="a00ac580-32e6-4536-a23a-b7d94ce9730e"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="b5122e3a-e2af-4c42-96f6-4caa741c6862"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="ebb1fc4b-c923-47d5-b2a8-347284f6797e">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="a7f01dc5-bb28-4b25-95b7-4c67a45b6b14"/>
          <Name>ft232h</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="dc001ea7-b6d2-40ed-bfad-c2b7a6753541">
            <Col>18</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2368</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="76ac8e95-0b43-443e-84a0-53cd8d2e988e">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1feb8bd4-3139-4d97-b408-cddce09b670d"/>
          <Name>pd</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8f42d765-e7b9-4285-8b6e-228ee925e010">
            <Col>16</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2369</Line>
          </DefPos>
        </Members>
        <Name>_ft_eeprom_233hp</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="11424d85-5c44-4757-8af9-bb5d198f599f">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="cb4018c2-5e1a-4c40-b16d-fa7d2e446810">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="89bf5d49-8f3d-40db-9f0e-3034525c7e8d">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="403dba98-2332-47d6-87a0-9aba1c596a82">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="8a33a64e-c0ae-429b-a075-43c951af1c94"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bca93ab3-2fc5-472b-bbab-d80f8df758e0">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2366</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="7e90ee4c-5ffc-4885-9f63-992144d486e3">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d975c8f4-41ac-4f71-a914-298a0391a231">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="a00ac580-32e6-4536-a23a-b7d94ce9730e"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="a00ac580-32e6-4536-a23a-b7d94ce9730e">
        <Type type="cxxfe.ast.types.StructType" uuid="bdc9b5e4-1c9e-43f2-aad7-6e98384e89be"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="5f21cc51-f7ee-4f91-8174-1ab36e2efb55">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="f19adfc3-9bac-408c-91e3-cc81c3b462a7"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="f19adfc3-9bac-408c-91e3-cc81c3b462a7">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="131e7206-4519-4eb7-a5b8-8427a81f3902"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="131e7206-4519-4eb7-a5b8-8427a81f3902">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="bdc9b5e4-1c9e-43f2-aad7-6e98384e89be"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6e0c00b6-85f2-4631-b5db-ec2823e9fb8d">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e6e2a134-7249-4fdd-92ce-3e3165eae3c4">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="f19adfc3-9bac-408c-91e3-cc81c3b462a7"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="bf983325-f57a-44d3-a00d-e89516a5280b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="bf983325-f57a-44d3-a00d-e89516a5280b">
        <Type type="cxxfe.ast.types.StructType" uuid="bdc9b5e4-1c9e-43f2-aad7-6e98384e89be"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="b5122e3a-e2af-4c42-96f6-4caa741c6862">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="a00ac580-32e6-4536-a23a-b7d94ce9730e"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="bf983325-f57a-44d3-a00d-e89516a5280b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="2a86e9bd-5f55-439a-8c4e-e9f662ba93c8">
        <Type type="cxxfe.ast.types.StructType" uuid="bdc9b5e4-1c9e-43f2-aad7-6e98384e89be"/>
        <Name>FT_EEPROM_233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="708eb255-4434-4485-a98a-473ec71f6a29">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2370</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="693a89ca-6fa3-4b01-aaf3-23d1602e7e76">
        <Type type="cxxfe.ast.types.PointerType" uuid="d333db4b-43be-4f2e-9689-b975772ea6de"/>
        <Name>PFT_EEPROM_233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="45488ee1-a19b-41d0-8428-2a84f5cf9a5c">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2370</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="d333db4b-43be-4f2e-9689-b975772ea6de">
        <Type type="cxxfe.ast.types.StructType" uuid="bdc9b5e4-1c9e-43f2-aad7-6e98384e89be"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="fc6f2e3e-9581-4fd0-a3ba-591dfb29db4c">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="bcce535d-5b89-434e-b39f-1b52cab031f2">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="8f6e3db5-f467-4f9d-af06-35b5882ea798"/>
          <Name>~_ft_eeprom_232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="c7555db6-3dd7-459b-be96-c160100c293f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="9661c34b-061b-468d-b8d3-57b42a7ea69a">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="7fb3cade-05bb-437a-a602-847128b47156"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="733f6c9f-3c66-4ce8-a619-c04f9e7375d0"/>
          <Name>_ft_eeprom_232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="4541f251-e694-47d2-b1d6-bd7fd11540d4">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="69a6ee02-e568-4242-b814-789a70516500">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="ce22f9ec-08ca-4ad7-836c-ad3e97bd6239"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="fc5d2cb5-d678-42ce-b09e-f47de34edc73"/>
          <Name>_ft_eeprom_232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="25636c24-8635-4cd7-a95f-c52fb37abce1">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="5f99e7e0-8db1-41ce-9c82-480fb07ff689"/>
          <Name>_ft_eeprom_232hp</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="1b8994a1-c4ab-47c6-94c9-5cebb1429181">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="0f1fb80d-4e7d-457f-a279-ef5c2737a770">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="ce22f9ec-08ca-4ad7-836c-ad3e97bd6239"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="ba4a1372-fa49-4ff8-8943-da8afe4a7d17"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="e4a03158-c45b-445e-87fb-49b6d8964b97">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="805ff86b-58e1-4150-a645-234b5c156edd">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="7fb3cade-05bb-437a-a602-847128b47156"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="2a85c329-fef1-4cc6-a134-be1aa89a11c5"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="8ebc15f0-f3b2-40bb-9202-e737023c9aab">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="a7f01dc5-bb28-4b25-95b7-4c67a45b6b14"/>
          <Name>ft232h</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e653024a-5b1c-4e28-a72b-7058ccffabf4">
            <Col>18</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2376</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e5bbc144-bce3-45ce-b5a2-7ce3a288bdf7">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1feb8bd4-3139-4d97-b408-cddce09b670d"/>
          <Name>pd</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3baeb513-9627-4551-9d8c-eb6f3779b162">
            <Col>16</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2377</Line>
          </DefPos>
        </Members>
        <Name>_ft_eeprom_232hp</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="1eb068c1-5504-423f-b3fd-578c23740872">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="6afd6f9b-cf49-4314-83b0-3ff374e2f5c9">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="fcff4a50-a44a-41b0-b1d0-9364a09b1e7d">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="88954787-bf09-42b0-9443-d3b1e1cd622a">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c2e2f787-ac0f-4012-bb3a-81097e19f80a"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b77929cc-3d6a-4be5-a2d7-8bb80facdc1e">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2374</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="8f6e3db5-f467-4f9d-af06-35b5882ea798">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="733f6c9f-3c66-4ce8-a619-c04f9e7375d0">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="7fb3cade-05bb-437a-a602-847128b47156"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="7fb3cade-05bb-437a-a602-847128b47156">
        <Type type="cxxfe.ast.types.StructType" uuid="fc6f2e3e-9581-4fd0-a3ba-591dfb29db4c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fc5d2cb5-d678-42ce-b09e-f47de34edc73">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="ce22f9ec-08ca-4ad7-836c-ad3e97bd6239"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="ce22f9ec-08ca-4ad7-836c-ad3e97bd6239">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="95221d86-b61f-4f16-9e95-57bb3588fbb0"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="95221d86-b61f-4f16-9e95-57bb3588fbb0">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="fc6f2e3e-9581-4fd0-a3ba-591dfb29db4c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="5f99e7e0-8db1-41ce-9c82-480fb07ff689">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ba4a1372-fa49-4ff8-8943-da8afe4a7d17">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="ce22f9ec-08ca-4ad7-836c-ad3e97bd6239"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="8e9a8866-5740-4aad-9591-7f7b374e9460"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="8e9a8866-5740-4aad-9591-7f7b374e9460">
        <Type type="cxxfe.ast.types.StructType" uuid="fc6f2e3e-9581-4fd0-a3ba-591dfb29db4c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2a85c329-fef1-4cc6-a134-be1aa89a11c5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="7fb3cade-05bb-437a-a602-847128b47156"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="8e9a8866-5740-4aad-9591-7f7b374e9460"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="1bdd19f4-134d-4525-a27f-cb7be737192a">
        <Type type="cxxfe.ast.types.StructType" uuid="fc6f2e3e-9581-4fd0-a3ba-591dfb29db4c"/>
        <Name>FT_EEPROM_232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e8114812-ab6b-4a10-a6ec-eeaa5aadbb29">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2378</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="04fa4651-e366-4a40-aedc-bde25a69950e">
        <Type type="cxxfe.ast.types.PointerType" uuid="4884c40b-43c6-43a7-91c0-d0c7abcdaa74"/>
        <Name>PFT_EEPROM_232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="56786744-ae31-45d4-851d-b3346b1d61b5">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2378</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="4884c40b-43c6-43a7-91c0-d0c7abcdaa74">
        <Type type="cxxfe.ast.types.StructType" uuid="fc6f2e3e-9581-4fd0-a3ba-591dfb29db4c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="45b49c39-5bdb-483d-a9ef-d0ed78c6b234">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="df9449c8-6ee8-4338-a3dd-f1d65e274c65">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="19e6c870-ec91-46b6-b672-10d1ce9e8089"/>
          <Name>~_FTCOMSTAT</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="f87a523a-6468-42d1-b9f4-fe87cc09b9dc">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="b321c428-8145-41c9-b529-e49de7228b3f">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="9ef3d4ce-4896-48da-b2ef-2abf01e0c79c"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="2ae60115-b80d-424c-89b3-d67b462ecf57"/>
          <Name>_FTCOMSTAT</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="b4972c21-f410-40a0-8e0b-2970b7da06aa">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="84f89835-6fbd-467e-86a3-425d694feb2b">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="afb0070a-2873-4ed7-8125-4811ec8bee19"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="09191e90-fcc5-4390-aa39-690398e50a09"/>
          <Name>_FTCOMSTAT</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="fea75d30-8ff2-474b-ba4b-ed79c1a81eba">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="e62a56f4-1c17-41ee-bf5e-c79e287f1b21"/>
          <Name>_FTCOMSTAT</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="f033bd23-2e8e-46dc-9baa-f9423b631a2a">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="d026661e-2731-4b62-9902-3327c8571568">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="afb0070a-2873-4ed7-8125-4811ec8bee19"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="c54510ae-1732-421c-ae26-db1933177b61"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="589dc2d0-c7c2-4d90-aa15-ccfd12799966">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="d3255e51-b8d4-48ce-96b8-28a7e357f6df">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="9ef3d4ce-4896-48da-b2ef-2abf01e0c79c"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="09323be7-be79-4db9-965b-5a2289becb49"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="2e0927ff-0cc0-4fd8-bffb-53a0f42afd50">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fCtsHold</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ec36e168-2b64-4999-831d-b1f9ebe62593">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2925</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="49388ff9-8d5e-4af0-9c34-7f37559a14fe">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fDsrHold</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7653909e-5cd9-4628-80cc-dc4a7641d350">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2926</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="cfcc56e6-93d0-4863-bfbe-d8283c87655a">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fRlsdHold</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e33e881c-122d-4288-9e26-752077dcdec9">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2927</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0b2e1fa6-2ffd-41ab-93d4-ba55b8470a79">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fXoffHold</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="51ab695a-6f37-4a2f-95a3-2fdb7dbf119f">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2928</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4c6cc9f9-4689-49ea-84ed-c5d3373898cd">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fXoffSent</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7edec9d9-e22c-473f-81e9-f024c680e639">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2929</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="22fd32dc-d4c7-46a3-8b69-a98eb9e776a8">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fEof</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e348a516-fb8f-4648-a97c-f29534e051a7">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2930</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9882949a-94e3-40de-b509-c206f5c4c0cb">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fTxim</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="651fff34-6de4-41b9-bc0c-961a5a1b8c1a">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2931</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b983fde1-7e53-4cf5-a2c9-fa2b8fe55545">
          <Access>Public</Access>
          <BitSize>25</BitSize>
          <IsBitField>true</IsBitField>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fReserved</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8f326a9b-a990-4447-89a0-ca552fe6cee6">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2932</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2021a05c-955d-43d7-8036-a3a5d5bb0af9">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>cbInQue</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="11bdc0bd-13b1-4b6b-a840-6f455c2d88ac">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2933</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="261dcb42-acb2-47e5-b05e-b08fb35c641b">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>cbOutQue</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="92d96584-dfe9-4c43-8af7-7838071f896b">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2934</Line>
          </DefPos>
        </Members>
        <Name>_FTCOMSTAT</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="1d93e71d-c899-49b2-9f64-15c6eb14d7ed">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="6e87e66f-a1da-4521-811a-5afe7e42ffc7">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="6bac1f88-86fe-4e9c-88a4-485a39ece405">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="b0afd88c-374a-4e87-8603-e296671671d8">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="5e2e900a-50a1-4871-b32c-8da18c0519f8"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f19c6f14-ddc8-44df-ba4e-5d53996047de">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2924</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="19e6c870-ec91-46b6-b672-10d1ce9e8089">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2ae60115-b80d-424c-89b3-d67b462ecf57">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="9ef3d4ce-4896-48da-b2ef-2abf01e0c79c"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="9ef3d4ce-4896-48da-b2ef-2abf01e0c79c">
        <Type type="cxxfe.ast.types.StructType" uuid="45b49c39-5bdb-483d-a9ef-d0ed78c6b234"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="09191e90-fcc5-4390-aa39-690398e50a09">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="afb0070a-2873-4ed7-8125-4811ec8bee19"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="afb0070a-2873-4ed7-8125-4811ec8bee19">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="72f9b641-af33-472a-8194-88742189ed5f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="72f9b641-af33-472a-8194-88742189ed5f">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="45b49c39-5bdb-483d-a9ef-d0ed78c6b234"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e62a56f4-1c17-41ee-bf5e-c79e287f1b21">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c54510ae-1732-421c-ae26-db1933177b61">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="afb0070a-2873-4ed7-8125-4811ec8bee19"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="fa24a693-ca5a-4236-b312-09251deeffc8"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="fa24a693-ca5a-4236-b312-09251deeffc8">
        <Type type="cxxfe.ast.types.StructType" uuid="45b49c39-5bdb-483d-a9ef-d0ed78c6b234"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="09323be7-be79-4db9-965b-5a2289becb49">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="9ef3d4ce-4896-48da-b2ef-2abf01e0c79c"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="fa24a693-ca5a-4236-b312-09251deeffc8"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="19621dd7-b82b-4453-b9f6-ba00f86c2b72">
        <Type type="cxxfe.ast.types.StructType" uuid="45b49c39-5bdb-483d-a9ef-d0ed78c6b234"/>
        <Name>FTCOMSTAT</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="eac73305-e0d6-461d-98c2-aa999459782c">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2935</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="adb8f315-4b78-4fe4-b9a4-df80f74d98a4">
        <Type type="cxxfe.ast.types.PointerType" uuid="5a5a46d3-71bb-4fb3-945e-986eb9ca4fc8"/>
        <Name>LPFTCOMSTAT</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="30920fa8-7eb6-433b-b7ce-d157d9bc71e0">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2935</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="5a5a46d3-71bb-4fb3-945e-986eb9ca4fc8">
        <Type type="cxxfe.ast.types.StructType" uuid="45b49c39-5bdb-483d-a9ef-d0ed78c6b234"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="6aac256b-84f3-43a0-bc2c-6e2755cda378">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="57c96ed8-675b-4088-a1bd-618d64ba8111">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="4190882e-7586-4d89-97f1-3e8d8b8eb3dd"/>
          <Name>~_FTDCB</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="18c8afdd-bc6f-4b26-83e0-554a1157fb8f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="338f7f3d-8450-4d48-8027-2dff87a659a4">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="04e037c9-0808-420a-8a77-b1c65bf0f172"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="f4f80cb3-0103-4b1d-9a64-13c96a241af4"/>
          <Name>_FTDCB</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="c86012c5-3a47-44cb-95f9-68f9c659c4af">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="faa830ea-b8a8-4466-9f4c-3a834c5b2f63">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="917b1d79-efed-4814-991c-9859082cea45"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="8234b9b5-602b-4062-a982-9bef4fcfa8f7"/>
          <Name>_FTDCB</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="fac3a82f-1d18-41c3-a36d-b34fc693ad8f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="12477b1e-c8ab-4033-9b78-b36205a307ae"/>
          <Name>_FTDCB</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="f86bbd76-552c-4e13-928b-baba1579acb2">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="77766dae-dd8f-49d7-8830-049fd86aea17">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="917b1d79-efed-4814-991c-9859082cea45"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="6eec092f-0384-41d5-9f01-48d13f00bd35"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="7b919303-62b4-432f-bafe-c921cfaf8ac3">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="b48d17b5-41b2-4f0d-92b0-08198c76758e">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="04e037c9-0808-420a-8a77-b1c65bf0f172"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="db3350f3-d553-4277-8ffc-e9eea7bfaef2"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="6dc8b7a3-c516-4e8e-9d66-5957bf42f5cc">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>DCBlength</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="11202938-0077-4cee-bfd8-ea296dd353b1">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2942</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="30027ba2-b2ce-4bca-bb91-848d92f32b1c">
          <Access>Public</Access>
          <Comments>/** sizeof(FTDCB)                        */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>BaudRate</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8c2fa75a-d12b-4d70-931a-91bf7de4327a">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2943</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7a58748d-5fb2-4bdb-a5ad-03e7bc2363de">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** Baudrate at which running            */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fBinary</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="42e7ea72-799d-4607-b60b-5c934c03b166">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2944</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0c949e87-096e-458a-9207-d627cf2f36ab">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** Binary Mode (skip EOF check)         */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fParity</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="732c2df2-9f5e-4218-90a7-fd57702ac7a6">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2945</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2dd50a11-8d4c-40e5-87b1-80e2106ef0ec">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** Enable parity checking               */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fOutxCtsFlow</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9fddbd9b-b2a9-4ded-bbea-c06e4af6d648">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2946</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="487941c7-9403-494c-a196-deec9978afdb">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** CTS handshaking on output            */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fOutxDsrFlow</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d48fe55b-392b-4aa7-91c3-6d444adb528a">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2947</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c38f0f43-26bc-4254-815c-be7e79cf18c1">
          <Access>Public</Access>
          <BitSize>2</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** DSR handshaking on output            */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fDtrControl</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="aff8ca47-7029-4ba2-8654-84e3427d3709">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2948</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8d1d3a59-8de0-4c01-9dda-912490c75c68">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** DTR Flow control                     */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fDsrSensitivity</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5c8ecc50-ad93-4662-9ac9-4bbcc2be7ad8">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2949</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="a4f0860e-0d43-4fcd-ae64-69ecadbf347b">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** DSR Sensitivity                      */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fTXContinueOnXoff</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0dcb0142-e784-4f4e-a387-d8e9299b5210">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2950</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e1886776-08ae-44d8-98ff-b1020a205732">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** Continue TX when Xoff sent           */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fOutX</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ddf35d1d-2367-4026-98d9-6dcb3c7eab27">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2951</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9dee3995-abb9-403d-90df-2875be40af74">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** Enable output X-ON/X-OFF             */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fInX</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="706db3c5-e3a2-4281-834b-6a6d2e5844ac">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2952</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ae77a247-1f57-484f-91ae-05e0ae91b494">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** Enable input X-ON/X-OFF              */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fErrorChar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a989a5b3-910c-447e-97fd-5a0adb6fe506">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2953</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c468e166-753a-42f7-b4a3-b8f0518e61e0">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** Enable Err Replacement               */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fNull</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4e98d09b-8396-4d3f-a397-af321dda89c0">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2954</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="26ef017a-2ab5-4e1b-af3c-aad97bb95690">
          <Access>Public</Access>
          <BitSize>2</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** Enable Null stripping                */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fRtsControl</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c4041d6d-671d-4f64-9506-40fffe819d32">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2955</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="af48de1b-46d0-4e98-92a1-021d67365fac">
          <Access>Public</Access>
          <BitSize>1</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** Rts Flow control                     */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fAbortOnError</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1c200825-4e4c-4bde-9c33-527071226b55">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2956</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d42162bf-8f92-4650-808d-59396d1b385f">
          <Access>Public</Access>
          <BitSize>17</BitSize>
          <IsBitField>true</IsBitField>
          <Comments>/** Abort all reads and writes on Error  */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>fDummy2</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c85f4445-fa3d-41f9-8a4b-edb7413865de">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2957</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="d37bdd2c-bdac-4dcd-886a-72ba8c1b3f73">
          <Access>Public</Access>
          <Comments>/** Reserved                             */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>wReserved</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="407b1164-12eb-466f-be48-b98c1a858ebf">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2958</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="e9e6c2e7-5178-4c2a-96a5-b7d78df4b812">
          <Access>Public</Access>
          <Comments>/** Not currently used                   */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>XonLim</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="90c4d63e-e7c4-4d50-8380-3b16c9180452">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2959</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c77f6d72-6419-48b3-b04e-0803803b1724">
          <Access>Public</Access>
          <Comments>/** Transmit X-ON threshold              */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>XoffLim</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d4c42c06-b1f9-4132-a4f7-20807cdadf01">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2960</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="61737437-6f28-49dc-b332-5b7483f2fa4b">
          <Access>Public</Access>
          <Comments>/** Transmit X-OFF threshold             */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="a43696d9-a2b0-48b6-ad29-544e7346ac03"/>
          <Name>ByteSize</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7d85f1b3-af3f-41f1-af3d-3978e63c3a84">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2961</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2564250b-ef90-4983-9189-233ab311cfb0">
          <Access>Public</Access>
          <Comments>/** Number of bits/byte, 4-8             */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="a43696d9-a2b0-48b6-ad29-544e7346ac03"/>
          <Name>Parity</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fdba11d7-fe73-4305-9cb6-f004da55e393">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2962</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="6a8f83a0-73c0-411d-8e88-675e5262f65b">
          <Access>Public</Access>
          <Comments>/** 0-4=None,Odd,Even,Mark,Space         */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="a43696d9-a2b0-48b6-ad29-544e7346ac03"/>
          <Name>StopBits</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e1ea4d45-f595-4c96-b7fb-deaa63ddc745">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2963</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5e86fc96-d999-4ce9-90f1-42b46d373c65">
          <Access>Public</Access>
          <Comments>/** FT_STOP_BITS_1 or FT_STOP_BITS_2     */</Comments>
          <Type type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9"/>
          <Name>XonChar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b29ba4ef-5109-442c-aaef-27768c88d2b3">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2964</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="ddd70599-ed57-4a20-b172-700c3c7eb12e">
          <Access>Public</Access>
          <Comments>/** Tx and Rx X-ON character             */</Comments>
          <Type type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9"/>
          <Name>XoffChar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="56786a88-5032-4ea3-baa3-0f778332ce3b">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2965</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="b2cabff7-af84-402a-b47f-c2f2ec047b3d">
          <Access>Public</Access>
          <Comments>/** Tx and Rx X-OFF character            */</Comments>
          <Type type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9"/>
          <Name>ErrorChar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5d8a0351-c385-4db6-8a7e-26af0ef87b69">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2966</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="efd7f70e-b8f1-4629-8b78-58e9a0d223e5">
          <Access>Public</Access>
          <Comments>/** Error replacement char               */</Comments>
          <Type type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9"/>
          <Name>EofChar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a6799815-6422-4d7a-b2c3-604d2c94a6a1">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2967</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="316f64d9-8a3f-477e-8b71-6d98360dd300">
          <Access>Public</Access>
          <Comments>/** End of Input character               */</Comments>
          <Type type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9"/>
          <Name>EvtChar</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="45e57a18-e77c-43c8-8dd4-8caf5375f1bc">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2968</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c4264ee9-d88b-4785-9726-815c2081fea0">
          <Access>Public</Access>
          <Comments>/** Received Event character             */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>wReserved1</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="eab2e5e4-f580-4b00-ba9f-17aabf566600">
            <Col>7</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2969</Line>
          </DefPos>
        </Members>
        <Name>_FTDCB</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="acd2d31a-a06e-483e-bf10-59768420adf9">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="7c2acc3d-578b-428e-ba95-7732ed82b8c2">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="87dbe314-ade1-4fab-a544-e9bc0aa43ac4">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="cab4588f-397d-443a-8022-ff076d9775d3">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c801b9e7-6f1d-4344-891f-3cd14a9e94b5"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="34571fbe-7c5c-4c7d-8b0b-07836957fda9">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2941</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4190882e-7586-4d89-97f1-3e8d8b8eb3dd">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f4f80cb3-0103-4b1d-9a64-13c96a241af4">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="04e037c9-0808-420a-8a77-b1c65bf0f172"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="04e037c9-0808-420a-8a77-b1c65bf0f172">
        <Type type="cxxfe.ast.types.StructType" uuid="6aac256b-84f3-43a0-bc2c-6e2755cda378"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="8234b9b5-602b-4062-a982-9bef4fcfa8f7">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="917b1d79-efed-4814-991c-9859082cea45"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="917b1d79-efed-4814-991c-9859082cea45">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="c7aa285b-8476-4b3a-9a85-ae6c905a9b19"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="c7aa285b-8476-4b3a-9a85-ae6c905a9b19">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="6aac256b-84f3-43a0-bc2c-6e2755cda378"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="12477b1e-c8ab-4033-9b78-b36205a307ae">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6eec092f-0384-41d5-9f01-48d13f00bd35">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="917b1d79-efed-4814-991c-9859082cea45"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="c207de5a-61df-4217-923f-9664dfaccbf5"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="c207de5a-61df-4217-923f-9664dfaccbf5">
        <Type type="cxxfe.ast.types.StructType" uuid="6aac256b-84f3-43a0-bc2c-6e2755cda378"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="db3350f3-d553-4277-8ffc-e9eea7bfaef2">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="04e037c9-0808-420a-8a77-b1c65bf0f172"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="c207de5a-61df-4217-923f-9664dfaccbf5"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="370001b1-3627-4ca6-b74e-d5bf4abf056b">
        <Type type="cxxfe.ast.types.StructType" uuid="6aac256b-84f3-43a0-bc2c-6e2755cda378"/>
        <Name>FTDCB</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="22fda981-b884-420f-a4e1-eecfa7e60dda">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2970</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="ffe65872-172f-46dc-a5d6-2f9ae0a8172d">
        <Type type="cxxfe.ast.types.PointerType" uuid="3fe2398f-b205-4b8d-a27d-02f9c9f61425"/>
        <Name>LPFTDCB</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d80edf58-2663-42c8-ae6a-bf65c194fbe2">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2970</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="3fe2398f-b205-4b8d-a27d-02f9c9f61425">
        <Type type="cxxfe.ast.types.StructType" uuid="6aac256b-84f3-43a0-bc2c-6e2755cda378"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="a324d88e-e879-4659-b5a4-7b22ded5b974">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="5791b899-e516-4fd6-9531-24548301ad29">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="3c7e69b6-851d-412c-b189-e039cafba044"/>
          <Name>~_FTTIMEOUTS</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="0a64aa52-8fd2-4f9e-9810-6c2e8e869247">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="0975547b-2788-4950-9f05-a6a744f339e8">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="28cf1db6-3a40-42d5-94de-57ce3e0a7777"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="fd538963-c55f-4314-bf5a-9ce2cca1d667"/>
          <Name>_FTTIMEOUTS</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="0615e790-0e9c-43a7-86bb-324fc0956dc5">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="9b8e4a38-53f5-4893-931a-3eb946f9894e">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="bf0385a5-f7a4-4d18-a603-7dea485f1836"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="6cd84c34-cd85-4349-b1c6-a109be534376"/>
          <Name>_FTTIMEOUTS</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="1368ff86-7d27-4bfe-bb0d-729c19142f5f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="9dd1079d-ad81-41db-ad94-ff3c577419b7"/>
          <Name>_FTTIMEOUTS</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="572fc0b9-6291-432d-ba8c-f12baf9d9e25">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="6d9510e5-ecee-4935-a73e-33eb2705b02d">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="bf0385a5-f7a4-4d18-a603-7dea485f1836"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="4152f366-af9e-415b-a54b-9c04dd6873d5"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="d097620b-d4b0-47dc-b4c6-67cd649943af">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="e341a6b2-9379-4e03-b8d3-7a3b6b0e6913">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="28cf1db6-3a40-42d5-94de-57ce3e0a7777"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="87bf3851-1b0f-4bda-87ca-18e42f64f9fb"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="07df019f-7e95-4049-b6c6-c3feea1a9647">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>ReadIntervalTimeout</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="dd338f2d-41e8-48ac-bc42-d5e5946e61a8">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2977</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1228818e-7dcc-4180-a950-2f52653fadf9">
          <Access>Public</Access>
          <Comments>/** Maximum time between read chars.  */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>ReadTotalTimeoutMultiplier</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6d006a1f-da7a-46f5-adc2-61c967435820">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2978</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1df0f39e-2689-44ba-8b71-4abbaeafa9cd">
          <Access>Public</Access>
          <Comments>/** Multiplier of characters.         */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>ReadTotalTimeoutConstant</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b2bb07a3-8217-4c9a-be69-ac0a479eeabe">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2979</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0b85adba-3a1b-4258-94f0-24c26cfdeef7">
          <Access>Public</Access>
          <Comments>/** Constant in milliseconds.         */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>WriteTotalTimeoutMultiplier</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3a177044-576d-46c1-82d2-9bb0cfcc994f">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2980</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="2d9fed62-edbd-4229-8f63-0348a17beb84">
          <Access>Public</Access>
          <Comments>/** Multiplier of characters.         */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>WriteTotalTimeoutConstant</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="246dbb1e-d184-4170-9fee-b5c0fb600005">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
            <Line>2981</Line>
          </DefPos>
        </Members>
        <Name>_FTTIMEOUTS</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="7f217d50-9087-4591-a5c5-722a7807c188">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="5cadbced-9ef5-43ff-95c7-3d045ce30eb9">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="0365bbdb-61b8-43af-84cd-e54a4e01c04d">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="c386c93a-94a7-4d10-89d7-c3494db30a99">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d511ace3-590e-4ba7-ae06-a482b26bec5f"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c741b461-98ca-4101-bea2-aab6b13a14fc">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2976</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="3c7e69b6-851d-412c-b189-e039cafba044">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fd538963-c55f-4314-bf5a-9ce2cca1d667">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="28cf1db6-3a40-42d5-94de-57ce3e0a7777"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="28cf1db6-3a40-42d5-94de-57ce3e0a7777">
        <Type type="cxxfe.ast.types.StructType" uuid="a324d88e-e879-4659-b5a4-7b22ded5b974"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6cd84c34-cd85-4349-b1c6-a109be534376">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="bf0385a5-f7a4-4d18-a603-7dea485f1836"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="bf0385a5-f7a4-4d18-a603-7dea485f1836">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="64701110-0080-491b-87ea-fe4e2d74c6f4"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="64701110-0080-491b-87ea-fe4e2d74c6f4">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="a324d88e-e879-4659-b5a4-7b22ded5b974"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="9dd1079d-ad81-41db-ad94-ff3c577419b7">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4152f366-af9e-415b-a54b-9c04dd6873d5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="bf0385a5-f7a4-4d18-a603-7dea485f1836"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="540656b2-31fd-4714-ad43-e8fde10a5897"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="540656b2-31fd-4714-ad43-e8fde10a5897">
        <Type type="cxxfe.ast.types.StructType" uuid="a324d88e-e879-4659-b5a4-7b22ded5b974"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="87bf3851-1b0f-4bda-87ca-18e42f64f9fb">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="28cf1db6-3a40-42d5-94de-57ce3e0a7777"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="540656b2-31fd-4714-ad43-e8fde10a5897"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="c328e11e-6714-4130-997f-639f0885a670">
        <Type type="cxxfe.ast.types.StructType" uuid="a324d88e-e879-4659-b5a4-7b22ded5b974"/>
        <Name>FTTIMEOUTS</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="96f3d0e0-18d3-4b7a-8027-6e10731618ab">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2982</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="43cce73d-b334-4570-aa3e-2d0e5daa533d">
        <Type type="cxxfe.ast.types.PointerType" uuid="a0ccd076-63a0-4808-adce-098568bce196"/>
        <Name>LPFTTIMEOUTS</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cb637375-a29b-472b-bb12-3e5cd0be5c3e">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2982</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="a0ccd076-63a0-4808-adce-098568bce196">
        <Type type="cxxfe.ast.types.StructType" uuid="a324d88e-e879-4659-b5a4-7b22ded5b974"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="6255196a-5aa5-4282-87b8-a25b71e2fa48">
        <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <Name>uint8</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="78392207-6544-45ef-9d8c-5fa2116dd8c0">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>183</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="30d1c628-db5e-46a8-b820-533d70b38483">
        <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
        <Name>uint16</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bd31310d-3344-47c3-9024-e564645793aa">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>184</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="957827bf-6ce1-43c5-9d15-8e856b7703ee">
        <Type type="cxxfe.ast.types.TypedefType" uuid="10d6290b-3eda-40a7-8b29-d0dbb92b9119"/>
        <Name>uint64</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="49b2a8e7-de3f-43de-941d-a5b42a06a057">
          <Col>19</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>185</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="f97774fe-82c9-41f5-b2f6-25b6d943b541">
        <Type type="cxxfe.ast.types.IntegerType" uuid="88ccdfac-3274-4740-a32c-ad9de24232b1"/>
        <Name>int8</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a09afc17-e545-4d57-ae72-57d283982948">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>187</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="88ccdfac-3274-4740-a32c-ad9de24232b1">
        <Kind>SignedChar</Kind>
        <NumBits>8</NumBits>
        <Name>signed char</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="8ea91c16-b75f-481d-97c2-590024dfc98e">
        <Type type="cxxfe.ast.types.IntegerType" uuid="e75619c4-54a9-4ac3-ba1a-b6083f56fa28"/>
        <Name>int16</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cce7d2a8-d709-46d0-937b-595b36389a26">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>188</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="e75619c4-54a9-4ac3-ba1a-b6083f56fa28">
        <Kind>SignedShort</Kind>
        <NumBits>16</NumBits>
        <Name>short</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="289bf1d4-3eec-4ae0-bc0d-7b25c51e6b3d">
        <Type type="cxxfe.ast.types.IntegerType" uuid="5ab69de9-d6af-43dd-b36a-347dbf0037e8"/>
        <Name>int64</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="388e70e1-0037-40c3-8ff2-a853905d9a47">
          <Col>26</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>189</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.IntegerType" uuid="5ab69de9-d6af-43dd-b36a-347dbf0037e8">
        <Kind>SignedLongLong</Kind>
        <NumBits>64</NumBits>
        <Name>long long</Name>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="ddfaa14a-5762-4b58-84f3-902d08dd3b14">
        <Type type="cxxfe.ast.types.IntegerType" uuid="8e75ba64-eb3d-4e82-976d-353491f41022"/>
        <Name>uint32</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1b19ae00-4858-43fe-a4eb-b4a905f4007b">
          <Col>24</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>195</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="ceba0b08-97e0-446a-8fd1-8d917a208ed3">
        <Type type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1"/>
        <Name>int32</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fd5d37ff-ffbf-4d2a-ab51-f2f46f726f0b">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>196</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="c6e98568-4115-4a56-99a7-1c7f1d5cb073">
        <Type type="cxxfe.ast.types.PointerType" uuid="4083d3a8-0c79-410d-ae33-feccbaa8a4fe"/>
        <Name>pfunc_FT_GetLibraryVersion</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7c54adfc-3c22-4dee-87fe-bf88682f97bf">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>198</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="4083d3a8-0c79-410d-ae33-feccbaa8a4fe">
        <Type type="cxxfe.ast.types.FunctionType" uuid="237d5bb7-3b11-4a4b-958d-88f97c63bd59"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="27f9e3ed-6eed-4465-9f52-c728ed43cd15">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>218</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="237d5bb7-3b11-4a4b-958d-88f97c63bd59">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="efbc1c59-19fd-4477-8d0e-bb76e307a332">
        <Type type="cxxfe.ast.types.PointerType" uuid="c8b5b611-4ff8-4e3e-b429-33626bd66256"/>
        <Name>pfunc_FT_GetNumChannel</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fc5bdbab-bfa8-4980-9b73-c366206c692a">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>199</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="c8b5b611-4ff8-4e3e-b429-33626bd66256">
        <Type type="cxxfe.ast.types.FunctionType" uuid="0156eac1-5638-4742-8c21-0e715c8181d4"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="95ac549a-4d31-46a5-8ef9-eab8c85af864">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>219</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0156eac1-5638-4742-8c21-0e715c8181d4">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="ac40b285-4702-481a-9130-cf024ab73b9f">
        <Type type="cxxfe.ast.types.PointerType" uuid="c59e09c1-b66d-4117-8afe-b390922067c1"/>
        <Name>pfunc_FT_GetDeviceInfoList</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5ea8347b-1049-4e0c-9dfb-8fc51dbb96c2">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>200</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="c59e09c1-b66d-4117-8afe-b390922067c1">
        <Type type="cxxfe.ast.types.FunctionType" uuid="68d3d182-baea-448a-9097-2c7d21f5fa9f"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="dcd7e6f9-6efc-421f-b643-ea614cfe2c18">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>220</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="68d3d182-baea-448a-9097-2c7d21f5fa9f">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c5b4bb0a-84ac-4781-b2e3-91df74117ae8"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="c5b4bb0a-84ac-4781-b2e3-91df74117ae8">
        <Type type="cxxfe.ast.types.TypedefType" uuid="fadb57b9-0245-4b0a-9d5d-77d4ba343da9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="c9140483-728b-4831-8aff-f11dd4932f4d">
        <Type type="cxxfe.ast.types.PointerType" uuid="02b4b520-8446-4c77-a235-a4265efeb5db"/>
        <Name>pfunc_FT_Open</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bda1542b-e7cc-4b46-af78-79a5775c7ac8">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>201</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="02b4b520-8446-4c77-a235-a4265efeb5db">
        <Type type="cxxfe.ast.types.FunctionType" uuid="5f398991-6700-4dad-9ba4-210759c3965e"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f6de1d4d-d325-4f81-b6b2-80cf028c11c8">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>221</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="5f398991-6700-4dad-9ba4-210759c3965e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.IntegerType" uuid="3e9d02b1-ecf9-493f-82e0-a0e5b0718518"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa">
        <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="1c439ad7-8a4c-4978-a893-1fc3e860953a">
        <Type type="cxxfe.ast.types.PointerType" uuid="ed23db06-6554-4a32-a883-c907adbc2b5b"/>
        <Name>pfunc_FT_Close</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e07424da-9ad8-4a0b-a641-49f6a6e487c5">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>202</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="ed23db06-6554-4a32-a883-c907adbc2b5b">
        <Type type="cxxfe.ast.types.FunctionType" uuid="0341de75-5b45-4089-9510-a15b2e8b6cff"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e6779979-c732-4e36-8c38-88690649cd0f">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>222</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0341de75-5b45-4089-9510-a15b2e8b6cff">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="736fc0cc-46f8-40a0-bafb-0d537766e6b9">
        <Type type="cxxfe.ast.types.PointerType" uuid="d97d4394-cb7d-4297-983b-8e0998a4fdbb"/>
        <Name>pfunc_FT_ResetDevice</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8871906b-82b5-41d1-af54-98e0dae6254c">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>203</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="d97d4394-cb7d-4297-983b-8e0998a4fdbb">
        <Type type="cxxfe.ast.types.FunctionType" uuid="9e97ea1b-a0c6-479e-b68d-84c8c748b69a"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2ec6fa3d-d63e-48f9-88bf-6990c4a42ec6">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>223</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="9e97ea1b-a0c6-479e-b68d-84c8c748b69a">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="2497423d-111b-4b0f-b374-8adae1b61984">
        <Type type="cxxfe.ast.types.PointerType" uuid="46dad8d0-36aa-41b3-a026-c6060c709f74"/>
        <Name>pfunc_FT_Purge</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1d4adac6-da7c-4fe0-bdc8-8c4022d5af3c">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>204</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="46dad8d0-36aa-41b3-a026-c6060c709f74">
        <Type type="cxxfe.ast.types.FunctionType" uuid="dbe29ab7-6d24-42cb-9972-0d82f9727273"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8b049533-9fbe-4e64-ba65-30c07fb721ce">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>224</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="dbe29ab7-6d24-42cb-9972-0d82f9727273">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="f2d6c7ba-acbf-4a0c-86fb-3298ef2ce9f4">
        <Type type="cxxfe.ast.types.PointerType" uuid="6940ea95-1809-4d7b-9005-8b33fa24c292"/>
        <Name>pfunc_FT_SetUSBParameters</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="212c60b6-b5c2-4e82-8dc7-c457dd2014c6">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>205</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="6940ea95-1809-4d7b-9005-8b33fa24c292">
        <Type type="cxxfe.ast.types.FunctionType" uuid="a84379a3-4c22-44b4-8ae9-dafe2fc665ff"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5279bece-e75b-48bd-9068-a6b0ccceb047">
          <Col>28</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>225</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="a84379a3-4c22-44b4-8ae9-dafe2fc665ff">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="6a82cc8d-c82e-4102-9ba4-5759ff82383c">
        <Type type="cxxfe.ast.types.PointerType" uuid="50f5e1a2-21d3-406f-99a5-f892d4fadb6b"/>
        <Name>pfunc_FT_SetChars</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1ab07a25-c419-4fdd-95e2-56fdff65aaf2">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>206</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="50f5e1a2-21d3-406f-99a5-f892d4fadb6b">
        <Type type="cxxfe.ast.types.FunctionType" uuid="e5cc4741-3582-405a-8a42-cf356017929d"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d8dcc0d1-828c-43ea-b251-6c7e912b3216">
          <Col>20</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>226</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e5cc4741-3582-405a-8a42-cf356017929d">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="5507a165-08a6-47c0-8d64-6b6d48821279">
        <Type type="cxxfe.ast.types.PointerType" uuid="a736b0d3-92b2-457d-a9bc-f259a1b88140"/>
        <Name>pfunc_FT_SetTimeouts</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ef3a9102-8d45-4dd4-86f2-4f342a6ac262">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>207</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="a736b0d3-92b2-457d-a9bc-f259a1b88140">
        <Type type="cxxfe.ast.types.FunctionType" uuid="4c31dc48-3c65-4086-bd1c-f99b29ad36cf"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="04be2566-2a75-4211-b871-15f92a5eacd2">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>227</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4c31dc48-3c65-4086-bd1c-f99b29ad36cf">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="4cfb62ec-f33c-4895-b075-25a45426d96a">
        <Type type="cxxfe.ast.types.PointerType" uuid="5c4d806d-676b-4308-b387-7db86374ea15"/>
        <Name>pfunc_FT_SetLatencyTimer</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e933cf87-6e2b-4b47-b93f-2a89f1b7a25e">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>208</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="5c4d806d-676b-4308-b387-7db86374ea15">
        <Type type="cxxfe.ast.types.FunctionType" uuid="eb60978a-6eb9-43b3-94bb-2271187a43b1"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5bfdbf7d-cf05-4136-90e8-cb0448c0f1ae">
          <Col>27</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>228</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="eb60978a-6eb9-43b3-94bb-2271187a43b1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="c9ef92e0-6e94-4626-94cc-b8afc4f00a75">
        <Type type="cxxfe.ast.types.PointerType" uuid="3678a3bb-58d0-4352-a425-fb27cb71409d"/>
        <Name>pfunc_FT_GetLatencyTimer</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f68a1449-b774-48c9-9889-c64c8836b33a">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>209</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="3678a3bb-58d0-4352-a425-fb27cb71409d">
        <Type type="cxxfe.ast.types.FunctionType" uuid="34a119fc-c6f2-4341-9f1e-4bb31ac484aa"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8640fff2-4975-4966-99a8-0f5c3b18f743">
          <Col>27</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>229</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="34a119fc-c6f2-4341-9f1e-4bb31ac484aa">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="3cc44a72-bbad-435b-bd7f-32e78315f6a6">
        <Type type="cxxfe.ast.types.PointerType" uuid="fe34468f-5d31-42bd-83f1-2651bd9b8737"/>
        <Name>pfunc_FT_SetBitmode</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b5c07776-e127-4885-97ea-a5153e64fd05">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>210</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="fe34468f-5d31-42bd-83f1-2651bd9b8737">
        <Type type="cxxfe.ast.types.FunctionType" uuid="1f302286-196c-40ec-9d19-7f0736047c33"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3b85ef83-2202-4547-9651-689381c661de">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>230</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="1f302286-196c-40ec-9d19-7f0736047c33">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="ff8905f4-86e8-465e-b3bf-cbe35f2a8f5e">
        <Type type="cxxfe.ast.types.PointerType" uuid="3857d8e6-9e56-4cc9-9d86-94a3683061da"/>
        <Name>pfunc_FT_GetQueueStatus</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="12de333c-c03a-4ec4-a130-903275a8ba18">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>211</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="3857d8e6-9e56-4cc9-9d86-94a3683061da">
        <Type type="cxxfe.ast.types.FunctionType" uuid="d1da5bff-2225-4a67-9549-6be800f78d52"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1531ebbe-3bcd-4a65-bc80-9815959c1071">
          <Col>26</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>231</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d1da5bff-2225-4a67-9549-6be800f78d52">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="380923a6-a3e3-4609-be7f-44f26728e16e">
        <Type type="cxxfe.ast.types.PointerType" uuid="4805d4a9-0d87-4256-9946-f89ca876e4ed"/>
        <Name>pfunc_FT_Read</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="704b683d-dee3-464d-8b5c-18a0f3e884ce">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>212</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="4805d4a9-0d87-4256-9946-f89ca876e4ed">
        <Type type="cxxfe.ast.types.FunctionType" uuid="f44df5cb-6931-429a-b858-c1921b24f13b"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d7962f3f-72b9-4781-bda7-ca75deac1ed2">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>232</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f44df5cb-6931-429a-b858-c1921b24f13b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="fb157062-d21c-430c-bafb-0329d2610463">
        <Type type="cxxfe.ast.types.PointerType" uuid="0ae79d4b-3e6a-485e-a01e-9bdecd99835d"/>
        <Name>pfunc_FT_Write</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0a82664d-13e2-4cdb-a412-f3076e9b9590">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>213</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="0ae79d4b-3e6a-485e-a01e-9bdecd99835d">
        <Type type="cxxfe.ast.types.FunctionType" uuid="bb2cd631-2ec0-43cf-a606-b21900c4ad10"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0f55c1ad-6fb4-49af-925a-3477ecd16947">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>233</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="bb2cd631-2ec0-43cf-a606-b21900c4ad10">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="e1a2f485-36e7-44d2-b044-81959becffc0">
        <Type type="cxxfe.ast.types.PointerType" uuid="d5180e4f-8256-4ed6-87ff-e3172856400d"/>
        <Name>pfunc_FT_GetDeviceInfo</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bdc08113-7309-4faf-af51-94c75f1c35c5">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>214</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="d5180e4f-8256-4ed6-87ff-e3172856400d">
        <Type type="cxxfe.ast.types.FunctionType" uuid="c5b2a434-2c67-4664-903e-08498214a8fd"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2f7cce72-150b-4c94-8856-433140e02801">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>234</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c5b2a434-2c67-4664-903e-08498214a8fd">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="cd3052fd-5483-423d-b569-dc4e6533c41d"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="207a0d30-acf0-436b-ae9c-6a32c3c02487"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="207a0d30-acf0-436b-ae9c-6a32c3c02487"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="cd3052fd-5483-423d-b569-dc4e6533c41d">
        <Type type="cxxfe.ast.types.TypedefType" uuid="9f3badb4-faef-4899-815f-7772052ec350"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="e319b9ce-d8a7-4d84-abe3-404699e33afb">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="25314344-af7d-41b8-af10-1b284e689090">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="70ff9137-7ef5-4043-9e68-f12c0c0eab8d"/>
          <Name>~InfraFunctionPtrLst_t</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="930e0add-be5d-4657-b64b-368d8a53bbdb">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="1a432168-4d34-4300-9037-b5f8ba7b5e51">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="9989d1aa-2617-428f-899f-fb7df17b1726"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="6b9ce094-f723-4c5c-8700-3f8ab192a0ad"/>
          <Name>InfraFunctionPtrLst_t</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="64d94f65-7295-4bcc-b9d3-f272cd745fd0">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="040e2fc7-e363-4b5d-ad70-fe00552da7cd">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="db90053f-0103-41ad-b021-a158080a32a4"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="9e57f51b-418b-4de5-a948-72a0c81b4652"/>
          <Name>InfraFunctionPtrLst_t</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="ec0d164f-436e-4a90-acc0-df2516d2b3a3">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="e304d8e4-7c8d-42df-8804-a01ab97e1a93"/>
          <Name>InfraFunctionPtrLst_t</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="8a5d9d4d-ef45-4d6f-8b40-4f35ed8d2e21">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="6c028e65-ac81-42e1-a1f5-442dd0559644">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="db90053f-0103-41ad-b021-a158080a32a4"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="f8f95216-970c-4213-b211-93d205a9c340"/>
          <Name>operator=</Name>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="ff64e3da-3abb-4779-9792-32bc616d6e31">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="b3feb044-41d0-4415-b1a5-5e5b060f7100">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="9989d1aa-2617-428f-899f-fb7df17b1726"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="b13030df-d242-42c4-b30d-98af40bb02b7"/>
          <Name>operator=</Name>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="600682b9-e09a-4ec5-8622-c65413ae744e">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="c6e98568-4115-4a56-99a7-1c7f1d5cb073"/>
          <Name>p_FT_GetLibraryVersion</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="46699a6d-a69d-4771-876a-4ec8f5413bea">
            <Col>29</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>218</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="cf4205d8-c216-4d6a-bf08-b3d289f8c66a">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="efbc1c59-19fd-4477-8d0e-bb76e307a332"/>
          <Name>p_FT_GetNumChannel</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="032e2256-8b7a-4f51-8058-d6d8da8862a1">
            <Col>25</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>219</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="8e4f9e2f-60ca-4d34-8d53-fecf5ebdcdf7">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="ac40b285-4702-481a-9130-cf024ab73b9f"/>
          <Name>p_FT_GetDeviceInfoList</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e73b45f8-b16a-46d2-9ded-85654fd83f8d">
            <Col>29</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>220</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="629ed38d-c62d-478c-bb05-a1787bf771de">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="c9140483-728b-4831-8aff-f11dd4932f4d"/>
          <Name>p_FT_Open</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d8a2116c-6404-4a9c-a7e1-3d7939ad1a05">
            <Col>16</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>221</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="27909126-9c10-42a7-ad9b-0309669abf83">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1c439ad7-8a4c-4978-a893-1fc3e860953a"/>
          <Name>p_FT_Close</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8e10d763-f7f9-47ed-8e50-14c3da17654f">
            <Col>17</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>222</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="3892cfdf-b09f-477c-963c-5a1a71180766">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="736fc0cc-46f8-40a0-bafb-0d537766e6b9"/>
          <Name>p_FT_ResetDevice</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ab9acc68-bc3d-4768-93a4-4ffb723c2a83">
            <Col>23</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>223</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="988db19b-2be6-4f83-8aec-0321f44f9a68">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2497423d-111b-4b0f-b374-8adae1b61984"/>
          <Name>p_FT_Purge</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a6528c63-8fea-4b2b-ba47-31c7b52f0d6e">
            <Col>17</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>224</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0eb50b6c-d52c-420f-a306-7090614db8a3">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="f2d6c7ba-acbf-4a0c-86fb-3298ef2ce9f4"/>
          <Name>p_FT_SetUSBParameters</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1930fa7b-b47b-4e97-b207-864fad8ce6d3">
            <Col>28</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>225</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="9fafd3d3-4f38-4a58-814e-611a94667e0e">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="6a82cc8d-c82e-4102-9ba4-5759ff82383c"/>
          <Name>p_FT_SetChars</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="060d85cc-d854-4960-9dbc-575dfb0e30f3">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>226</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="288e7dbb-712e-4758-b264-ac9c73e1a1b7">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="5507a165-08a6-47c0-8d64-6b6d48821279"/>
          <Name>p_FT_SetTimeouts</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ae68dbd3-e6e8-48a4-91d3-5377c338f04c">
            <Col>23</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>227</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="789a26dc-d42f-4807-bde6-059ea178ceb8">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="4cfb62ec-f33c-4895-b075-25a45426d96a"/>
          <Name>p_FT_SetLatencyTimer</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="630c1ac2-7a7b-4cbf-8b2d-22f88fecddab">
            <Col>27</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>228</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="81ce5571-a22f-4a6b-8b98-e5e56e228f56">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="c9ef92e0-6e94-4626-94cc-b8afc4f00a75"/>
          <Name>p_FT_GetLatencyTimer</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="353f514d-fd51-4bf6-9d83-ed142a228775">
            <Col>27</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>229</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="f1499571-b7f8-4941-acfe-05b23890e736">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3cc44a72-bbad-435b-bd7f-32e78315f6a6"/>
          <Name>p_FT_SetBitmode</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="00464330-56bc-416e-bde6-a31abfef3f37">
            <Col>22</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>230</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="67cd39b9-bda6-429d-b418-77fd449ba3b0">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="ff8905f4-86e8-465e-b3bf-cbe35f2a8f5e"/>
          <Name>p_FT_GetQueueStatus</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e826fca4-69ef-402f-8668-090f3dada39c">
            <Col>26</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>231</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="720be4d9-f17f-41f5-bda1-1f92aab96f7a">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="380923a6-a3e3-4609-be7f-44f26728e16e"/>
          <Name>p_FT_Read</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3e4daa67-b255-4e1b-9142-dfc18c9b9c9f">
            <Col>16</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>232</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="4c9b17be-b835-49d5-b014-a8768e437849">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fb157062-d21c-430c-bafb-0329d2610463"/>
          <Name>p_FT_Write</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="79c384c4-54eb-47df-bb70-f144e2712715">
            <Col>17</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>233</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="0e4327ed-26e8-4fd7-85fb-6900a6beb5b3">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="e1a2f485-36e7-44d2-b044-81959becffc0"/>
          <Name>p_FT_GetDeviceInfo</Name>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="fde84f5c-db65-490e-922f-8e5c031b9cd5">
            <Col>25</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
            <Line>234</Line>
          </DefPos>
        </Members>
        <Name>InfraFunctionPtrLst_t</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="cc313c73-7094-4008-89fb-495b92c0db44">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="ae69b491-9f76-4df2-8ab4-994b47900227">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="8ca8e146-8894-4450-9621-ba2a76fff49c">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="6135cc71-0776-4f24-902b-47635694ae9a">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="269e1cdf-6bd6-4c4d-affa-59ef6d700239"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9eaffe2c-93a0-4763-82c4-1c998ea83ad7">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>216</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="70ff9137-7ef5-4043-9e68-f12c0c0eab8d">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6b9ce094-f723-4c5c-8700-3f8ab192a0ad">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="9989d1aa-2617-428f-899f-fb7df17b1726"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="9989d1aa-2617-428f-899f-fb7df17b1726">
        <Type type="cxxfe.ast.types.StructType" uuid="e319b9ce-d8a7-4d84-abe3-404699e33afb"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="9e57f51b-418b-4de5-a948-72a0c81b4652">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="db90053f-0103-41ad-b021-a158080a32a4"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="db90053f-0103-41ad-b021-a158080a32a4">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="c8e6b88a-4993-49b2-b530-acbc28e7d08f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="c8e6b88a-4993-49b2-b530-acbc28e7d08f">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="e319b9ce-d8a7-4d84-abe3-404699e33afb"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e304d8e4-7c8d-42df-8804-a01ab97e1a93">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f8f95216-970c-4213-b211-93d205a9c340">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="db90053f-0103-41ad-b021-a158080a32a4"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="c64043fb-1f5d-4689-8aa3-516371809d90"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="c64043fb-1f5d-4689-8aa3-516371809d90">
        <Type type="cxxfe.ast.types.StructType" uuid="e319b9ce-d8a7-4d84-abe3-404699e33afb"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="b13030df-d242-42c4-b30d-98af40bb02b7">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="9989d1aa-2617-428f-899f-fb7df17b1726"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="c64043fb-1f5d-4689-8aa3-516371809d90"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="73e1c926-c74f-474e-be77-4bed77bae7d2">
        <Type type="cxxfe.ast.types.StructType" uuid="e319b9ce-d8a7-4d84-abe3-404699e33afb"/>
        <Name>InfraFunctionPtrLst</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8aad477d-31db-4851-9943-7894e2413457">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>235</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.EnumType" uuid="50c5be2f-1dc6-47aa-8199-84df1348ce9d">
        <StorageType type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1"/>
        <Strings>SPI</Strings>
        <Strings>I2C</Strings>
        <Strings>JTAG</Strings>
        <Values>0</Values>
        <Values>1</Values>
        <Values>2</Values>
        <NumBits>32</NumBits>
        <Name>FT_LegacyProtocol_t</Name>
        <Annotations type="mwAnnotation.EnumAnnotation" uuid="51a0babe-3442-44c6-9c9d-0eff2484501b">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="60eb27c2-33f7-42eb-a5ac-2ab0ba869ac3">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="860c758c-bc76-4ee8-a261-8cf10bf489cc">
          <Col>14</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="3dba0d30-15bc-4e46-bd36-84bd0a23f39d"/>
          <Line>138</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805">
        <Type type="cxxfe.ast.types.EnumType" uuid="50c5be2f-1dc6-47aa-8199-84df1348ce9d"/>
        <Name>FT_LegacyProtocol</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9fe30951-cf4e-4539-85a1-2ac16f8089e1">
          <Col>49</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="3dba0d30-15bc-4e46-bd36-84bd0a23f39d"/>
          <Line>138</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.EnumType" uuid="fa86dcca-634c-41ee-b263-ce0e47bd697a">
        <StorageType type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1"/>
        <Strings>I2C_CLOCK_STANDARD_MODE</Strings>
        <Strings>I2C_CLOCK_FAST_MODE</Strings>
        <Strings>I2C_CLOCK_FAST_MODE_PLUS</Strings>
        <Strings>I2C_CLOCK_HIGH_SPEED_MODE</Strings>
        <Values>100000</Values>
        <Values>400000</Values>
        <Values>1000000</Values>
        <Values>3400000</Values>
        <NumBits>32</NumBits>
        <Name>I2C_ClockRate_t</Name>
        <Annotations type="mwAnnotation.EnumAnnotation" uuid="2c8be62d-20ce-4477-b534-f9f037641e79">
          <cppType>[int]</cppType>
          <description>clib.ftLib.I2C_CLOCKRATE    Representation of C++ enumeration I2C_ClockRate_t.</description>
          <mwUnderlyingType>int32</mwUnderlyingType>
          <name>clib.ftLib.I2C_CLOCKRATE</name>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="cf84745c-6358-4326-a80a-06be1d46a8ed"/>
        </Annotations>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="aa9fd9b2-cac7-495b-aa6a-0c457c1796eb">
          <Col>14</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>148</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="b0b48631-ef20-4545-8982-a4f7dc99e48f">
        <Type type="cxxfe.ast.types.EnumType" uuid="fa86dcca-634c-41ee-b263-ce0e47bd697a"/>
        <Name>I2C_CLOCKRATE</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ee0a2e0b-c22e-4529-b975-d82a16fda16b">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>153</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="a0d9a78d-46d9-4a9a-9ab2-ea9160a78293">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="ec11d55f-d13c-4077-b3f1-13ef74f892ea">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="4600c0a0-fbf3-4f20-a2df-b44709dea762"/>
          <Name>~ChannelConfig_i2c</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="4cb3e2c3-dd69-46fa-bba5-1830a600500c">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="79c853c1-46f1-4d8b-8a98-438c92cd6198">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="8fd7f715-0196-4b15-9eac-73299ce681d5">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="7cdda000-aba9-4a27-ace2-43cbcb0e3793">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="6d22f771-1ba1-4d85-b488-896108c31489"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="701b5926-f88d-4fb1-b28c-89ad90e7f1b7"/>
          <Name>ChannelConfig_i2c</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="439b0b47-308e-49c1-a68c-ef4d95ea8a32">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="4b0d907b-1cc0-4d68-9cb8-8f9ee75cf8dc">
              <definitionStatus>Unsupported</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="77f8db6b-bb13-4f16-afa7-719a87de096b">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="c32134c8-0e8f-4b29-b620-74984397d386">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="8ef5667c-26a3-4243-a0f6-0759e8e86ed6"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="01945df4-6651-4036-932b-4964d6637877"/>
          <Name>ChannelConfig_i2c</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="57dc2794-ddc2-4f91-bfa2-25c844b85919">
            <cppPosition>2</cppPosition>
            <cppSignature>ChannelConfig_i2c::ChannelConfig_i2c(ChannelConfig_i2c const &amp; input1)</cppSignature>
            <cppSignatureFcnType>void(*)(ChannelConfig_i2c const &amp;)</cppSignatureFcnType>
            <description>clib.ftLib.I2C_ChannelConfig Constructor of C++ class ChannelConfig_i2c.</description>
            <inputs type="mwAnnotation.Argument" uuid="0778745e-7332-4fec-8132-6f2d26c4aee0">
              <cppPosition>1</cppPosition>
              <cppType>[ChannelConfig_i2c]ConstRef</cppType>
              <isConstData>true</isConstData>
              <mwType>clib.ftLib.I2C_ChannelConfig</mwType>
              <name>input1</name>
              <validTypes>clib.ftLib.I2C_ChannelConfig</validTypes>
            </inputs>
            <name>ChannelConfig_i2c</name>
            <ptKey>A/ChannelConfig_i2c@[ChannelConfig_i2c]ConstRef</ptKey>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="adeea0db-87bc-4f2e-b125-9a7b5a21751c"/>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="0fa40d22-be21-4598-b67e-43106ae4f0d0">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="48008f18-192c-483e-a8ca-30b4ff8510e1"/>
          <Name>ChannelConfig_i2c</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="46af228d-1a95-4000-9f9f-60599039bef7">
            <cppPosition>2</cppPosition>
            <cppSignature>ChannelConfig_i2c::ChannelConfig_i2c()</cppSignature>
            <cppSignatureFcnType>void(*)()</cppSignatureFcnType>
            <description>clib.ftLib.I2C_ChannelConfig Constructor of C++ class ChannelConfig_i2c.</description>
            <name>ChannelConfig_i2c</name>
            <ptKey>A/ChannelConfig_i2c</ptKey>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="490a9955-1715-4178-9716-be3b3e359e1e"/>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="7e772e24-4bf8-4732-8c03-59abc1877265">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="a49079eb-792c-4b98-abf4-7d3826d5de78">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="8ef5667c-26a3-4243-a0f6-0759e8e86ed6"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="fbe6431b-8360-4cd1-a5f3-b6b3d99c9baa"/>
          <Name>operator=</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="91aa4341-f649-4e0f-bd40-553bfda91711">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="e8df4d69-353c-4a66-a301-953c6cf9b0ef">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="e679bbe0-b063-403d-8f04-ec28f736190f">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="0dcfa66d-6677-4b61-bec1-46807ca033df">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="6d22f771-1ba1-4d85-b488-896108c31489"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="a89ca774-1924-462b-8a2b-35f8b1f3949f"/>
          <Name>operator=</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="9ff334e0-0b45-4f0b-a478-eb3f861d1c8a">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="9985b133-4f41-47af-a443-a44b2a3c916c">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="c5625451-161e-4280-bae2-b6af6a771e39">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="b0b48631-ef20-4545-8982-a4f7dc99e48f"/>
          <Name>ClockRate</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="aa4f0dbb-24f3-4cc1-b646-88c3c25d1d3e">
            <cppPosition>1</cppPosition>
            <cppSignature>I2C_CLOCKRATE ChannelConfig_i2c::ClockRate</cppSignature>
            <cppType>[I2C_ClockRate_t]</cppType>
            <description>clib.ftLib.I2C_CLOCKRATE    Data member of C++ class ChannelConfig_i2c.</description>
            <getterPTKey>DM/?get/ChannelConfig_i2c/ClockRate</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>clib.ftLib.I2C_CLOCKRATE</mwType>
            <setterPTKey>DM/?set/ChannelConfig_i2c/ClockRate</setterPTKey>
            <storage>Value</storage>
            <validTypes>clib.ftLib.I2C_CLOCKRATE</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="9b66fa8a-87d3-490e-aaed-784ffed4e60a"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a783d5ce-b6e9-44e2-ad6c-6d1846605404">
            <Col>16</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
            <Line>158</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="318dc7fe-159f-454a-800d-d53d4afd5676">
          <Access>Public</Access>
          <Comments>/** There were 2 functions I2C_TurnOn/OffDivideByFive
	ClockinghiSpeedDevice (FTC_HANDLE fthandle) in the old DLL. This function turns on the
	divide by five for the MPSSE clock to allow the hi-speed devices FT2232H and FT4232H to
	clock at the same rate as the FT2232D device. This allows for backward compatibility
	NOTE: This feature is probably a per chip feature and not per device*/</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>LatencyTimer</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="8c6e38eb-3a93-46d7-bc1e-1ad6dfed0fcc">
            <cppPosition>2</cppPosition>
            <cppSignature>UCHAR ChannelConfig_i2c::LatencyTimer</cppSignature>
            <cppType>[unsigned char]</cppType>
            <description>uint8    Data member of C++ class ChannelConfig_i2c.
There were 2 functions I2C_TurnOn/OffDivideByFive
	ClockinghiSpeedDevice (FTC_HANDLE fthandle) in the old DLL. This function turns on the
	divide by five for the MPSSE clock to allow the hi-speed devices FT2232H and FT4232H to
	clock at the same rate as the FT2232D device. This allows for backward compatibility
	NOTE: This feature is probably a per chip feature and not per device</description>
            <getterPTKey>DM/?get/ChannelConfig_i2c/LatencyTimer</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint8</mwType>
            <setterPTKey>DM/?set/ChannelConfig_i2c/LatencyTimer</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint8</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="690277e3-9c16-49b5-bf3d-8185fc61d809"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="aa2af6f8-df3e-480d-acb2-439eadfaef40">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
            <Line>165</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="66d185d7-992e-481b-8d36-e25644d84652">
          <Access>Public</Access>
          <Comments>/** Required value, in milliseconds, of latency timer.
	Valid range is 2 � 255
	In the FT8U232AM and FT8U245AM devices, the receive buffer timeout that is used to flush
	remaining data from the receive buffer was fixed at 16 ms. In all other FTDI devices, this
	timeout is programmable and can be set at 1 ms intervals between 2ms and 255 ms.  This
	allows the device to be better optimized for protocols requiring faster response times from
	short data packets
	NOTE: This feature is probably a per chip feature and not per device*/</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>Options</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="33654bce-226e-492f-85e8-4bdd6dad2a79">
            <cppPosition>3</cppPosition>
            <cppSignature>DWORD ChannelConfig_i2c::Options</cppSignature>
            <cppType>[unsigned long]</cppType>
            <description>uint32    Data member of C++ class ChannelConfig_i2c.
Required value, in milliseconds, of latency timer.
	Valid range is 2 � 255
	In the FT8U232AM and FT8U245AM devices, the receive buffer timeout that is used to flush
	remaining data from the receive buffer was fixed at 16 ms. In all other FTDI devices, this
	timeout is programmable and can be set at 1 ms intervals between 2ms and 255 ms.  This
	allows the device to be better optimized for protocols requiring faster response times from
	short data packets
	NOTE: This feature is probably a per chip feature and not per device</description>
            <getterPTKey>DM/?get/ChannelConfig_i2c/Options</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint32</mwType>
            <setterPTKey>DM/?set/ChannelConfig_i2c/Options</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="6a24a43a-93b2-4e58-a402-0c7a6cea6768"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6e84f50d-7c31-4506-91c7-1d2dac10f145">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
            <Line>175</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="69d7055a-a4b0-456c-8d5a-12dd17f33649">
          <Access>Public</Access>
          <Comments>/** This member provides a way to enable/disable features
	specific to the protocol that are implemented in the chip
	BIT0		: 3PhaseDataClocking - Setting this bit will turn on 3 phase data clocking for a
			FT2232H dual hi-speed device or FT4232H quad hi-speed device. Three phase
			data clocking, ensures the data is valid on both edges of a clock
	BIT1		: Loopback
	BIT2		: Clock stretching
	BIT3 		: Enable PinState config
	BIT4 - BIT31		: Reserved
	*/</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>Pin</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="bfdbc5dd-f0f7-4864-88ef-b8011abfcc5c">
            <cppPosition>4</cppPosition>
            <cppSignature>DWORD ChannelConfig_i2c::Pin</cppSignature>
            <cppType>[unsigned long]</cppType>
            <description>uint32    Data member of C++ class ChannelConfig_i2c.
This member provides a way to enable/disable features
	specific to the protocol that are implemented in the chip
	BIT0		: 3PhaseDataClocking - Setting this bit will turn on 3 phase data clocking for a
			FT2232H dual hi-speed device or FT4232H quad hi-speed device. Three phase
			data clocking, ensures the data is valid on both edges of a clock
	BIT1		: Loopback
	BIT2		: Clock stretching
	BIT3 		: Enable PinState config
	BIT4 - BIT31		: Reserved</description>
            <getterPTKey>DM/?get/ChannelConfig_i2c/Pin</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint32</mwType>
            <setterPTKey>DM/?set/ChannelConfig_i2c/Pin</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="e37927e6-47b9-494c-a6d6-8de8963fb0b5"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="130468a0-87ed-4994-87ae-19d6d9dfbc78">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
            <Line>187</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="14b71211-7d94-4597-b170-83ece36a086c">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>currentPinState</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="8f4b77d1-8150-48cd-8e77-2c70aa423334">
            <cppPosition>5</cppPosition>
            <cppSignature>USHORT ChannelConfig_i2c::currentPinState</cppSignature>
            <cppType>[unsigned short]</cppType>
            <description>uint16    Data member of C++ class ChannelConfig_i2c.</description>
            <getterPTKey>DM/?get/ChannelConfig_i2c/currentPinState</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint16</mwType>
            <setterPTKey>DM/?set/ChannelConfig_i2c/currentPinState</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint16</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="9d89601a-d9ab-42fa-8a06-5e375138cad2"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f80b4cb9-92c2-43a8-ae40-9801ad383e04">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
            <Line>192</Line>
          </DefPos>
        </Members>
        <Name>ChannelConfig_i2c</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="966e16e6-7687-477e-a65f-143752d78303">
          <deallocatorPTKey>D/ChannelConfig_i2c</deallocatorPTKey>
          <description>clib.ftLib.I2C_ChannelConfig    Representation of C++ class ChannelConfig_i2c.</description>
          <isAssignable>true</isAssignable>
          <isDestructible>true</isDestructible>
          <name>clib.ftLib.I2C_ChannelConfig</name>
          <needArray>true</needArray>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="58f9a959-308c-4d2b-a32c-224d1884da54"/>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="b6710c21-fe8b-4510-813f-06063f60f389">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="e898b12d-8818-4ee6-9384-4d07afc6e259">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="29199488-8b04-4ac6-99aa-c13bd77e53b9"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1dae8c16-aee5-486f-8f5f-9684dee74c1a">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>156</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4600c0a0-fbf3-4f20-a2df-b44709dea762">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="701b5926-f88d-4fb1-b28c-89ad90e7f1b7">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="6d22f771-1ba1-4d85-b488-896108c31489"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="6d22f771-1ba1-4d85-b488-896108c31489">
        <Type type="cxxfe.ast.types.StructType" uuid="a0d9a78d-46d9-4a9a-9ab2-ea9160a78293"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="01945df4-6651-4036-932b-4964d6637877">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="8ef5667c-26a3-4243-a0f6-0759e8e86ed6"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="8ef5667c-26a3-4243-a0f6-0759e8e86ed6">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="2bc08bae-85e1-4860-8eef-1eda8bad6d4d"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="2bc08bae-85e1-4860-8eef-1eda8bad6d4d">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="a0d9a78d-46d9-4a9a-9ab2-ea9160a78293"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="48008f18-192c-483e-a8ca-30b4ff8510e1">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fbe6431b-8360-4cd1-a5f3-b6b3d99c9baa">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="8ef5667c-26a3-4243-a0f6-0759e8e86ed6"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="d0551d89-fe3c-4bd5-8054-d0d6c4c2885a"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="d0551d89-fe3c-4bd5-8054-d0d6c4c2885a">
        <Type type="cxxfe.ast.types.StructType" uuid="a0d9a78d-46d9-4a9a-9ab2-ea9160a78293"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="a89ca774-1924-462b-8a2b-35f8b1f3949f">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="6d22f771-1ba1-4d85-b488-896108c31489"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="d0551d89-fe3c-4bd5-8054-d0d6c4c2885a"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="e2c180c0-39da-4024-b86b-9ecbc17a56a7">
        <Type type="cxxfe.ast.types.StructType" uuid="a0d9a78d-46d9-4a9a-9ab2-ea9160a78293"/>
        <Name>I2C_ChannelConfig</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5c92f5ae-6767-4324-93ff-8984b21beed7">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>194</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="fc573f1c-e90a-41fc-8cfd-9ffebfdd729f">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="30eadc67-3d32-4a25-95e0-ef2c22ba769c">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="02b54893-eb6c-4537-9285-d456be28ab3b"/>
          <Name>~ChannelContext_i2c</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="059559b0-985f-467d-8b6e-6844bac32bae">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="77392517-c1b3-4de8-833d-087225e61631">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="924a5e2b-edeb-48bd-9052-e86549b27ae6">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="ff18e0a3-d09c-4049-9184-7d6baab133b8">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="d4eef36e-7e21-4da3-8164-31380ce41052"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="8db25387-7864-465f-9bd5-53db36a5199b"/>
          <Name>ChannelContext_i2c</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="a98e6f6e-5a5e-4b8b-8046-3134f70b18ac">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="a6d838c1-86b7-459d-8426-bb52ad531a74">
              <definitionStatus>Unsupported</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="f438bdbd-3855-464f-8a7a-72001d694534">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="0f4ccb8d-e23d-49d7-9268-4aa3bd17f255">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="5d616166-31ac-4487-bd2f-3549d4ccb9ed"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="2972fe1e-6eba-45fa-b5a3-d27178d0555b"/>
          <Name>ChannelContext_i2c</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="49276e76-6c59-465a-bf86-a79028a7598d">
            <cppPosition>2</cppPosition>
            <cppSignature>ChannelContext_i2c::ChannelContext_i2c(ChannelContext_i2c const &amp; input1)</cppSignature>
            <cppSignatureFcnType>void(*)(ChannelContext_i2c const &amp;)</cppSignatureFcnType>
            <description>clib.ftLib.I2C_ChannelContext Constructor of C++ class ChannelContext_i2c.</description>
            <inputs type="mwAnnotation.Argument" uuid="ba06c8d3-27e6-4913-a07a-60863bf72600">
              <cppPosition>1</cppPosition>
              <cppType>[ChannelContext_i2c]ConstRef</cppType>
              <isConstData>true</isConstData>
              <mwType>clib.ftLib.I2C_ChannelContext</mwType>
              <name>input1</name>
              <validTypes>clib.ftLib.I2C_ChannelContext</validTypes>
            </inputs>
            <name>ChannelContext_i2c</name>
            <ptKey>A/ChannelContext_i2c@[ChannelContext_i2c]ConstRef</ptKey>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="61a3d14b-041d-4c25-afc5-21a9c6de5019"/>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="f336f7ca-c88a-40d5-9fce-b4b2a8cfcafc">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="4f0d70c9-58ee-4d22-92dc-7d4039b888eb"/>
          <Name>ChannelContext_i2c</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="313ddb9f-3f8f-468e-ac95-47a0676d67e2">
            <cppPosition>2</cppPosition>
            <cppSignature>ChannelContext_i2c::ChannelContext_i2c()</cppSignature>
            <cppSignatureFcnType>void(*)()</cppSignatureFcnType>
            <description>clib.ftLib.I2C_ChannelContext Constructor of C++ class ChannelContext_i2c.</description>
            <name>ChannelContext_i2c</name>
            <ptKey>A/ChannelContext_i2c</ptKey>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="2945dae6-beec-4376-8284-9869827537a6"/>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="f9adb5c7-d652-4e48-abb5-42a8a0e28acb">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="7bda9c3d-a6e0-43bf-9b4d-eaf830488272">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="5d616166-31ac-4487-bd2f-3549d4ccb9ed"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="0ccb79b7-a7c1-4df3-a842-be44fbac519d"/>
          <Name>operator=</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="757e4c15-e2d1-4878-af74-3f49c811ac22">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d053d62f-564c-4d45-8358-4a438e8a2b88">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="d62d6859-08c7-459d-9662-e1ce17363df3">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="38b1a633-4e09-49be-944d-2bee6ad553cf">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="d4eef36e-7e21-4da3-8164-31380ce41052"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="6d1bf13b-f328-4013-aed6-e8ff159321f7"/>
          <Name>operator=</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="6c9395ba-e590-435b-b0da-bf5d378e47a1">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="8dfe5451-e4db-4d2c-811b-1d86019ef780">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="54630e73-98d0-43be-8d88-74dcdaf44519">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="4c317ca7-148b-4194-997b-0b3d695e084a">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="2c134460-43db-4dfb-8b95-2b6a1a9965e2">
              <definitionStatus>Unsupported</definitionStatus>
            </integrationStatus>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="763296b1-84d9-43f8-8170-07949bb3f1bb">
            <Col>14</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
            <Line>200</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="5381fd18-e8c8-4d20-91c8-64954cb57fa8">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="e2c180c0-39da-4024-b86b-9ecbc17a56a7"/>
          <Name>config</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="0a6ce8f0-d1ac-438f-a4a7-2a20a2bf6a88">
            <cppPosition>2</cppPosition>
            <cppSignature>I2C_ChannelConfig ChannelContext_i2c::config</cppSignature>
            <cppType>[ChannelConfig_i2c]</cppType>
            <description>clib.ftLib.I2C_ChannelConfig    Data member of C++ class ChannelContext_i2c.</description>
            <getterPTKey>DM/?get/ChannelContext_i2c/config</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>clib.ftLib.I2C_ChannelConfig</mwType>
            <setterPTKey>DM/?set/ChannelContext_i2c/config</setterPTKey>
            <storage>Value</storage>
            <validTypes>clib.ftLib.I2C_ChannelConfig</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="11f6e5a1-a4bb-4996-8b72-ad991fda269d"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9cbf338a-9097-4b38-8cf6-1aa67aaf6fe1">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
            <Line>201</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="63b4e5cf-baf7-4e27-9728-6e620b999dc3">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.PointerType" uuid="49996f8d-630a-4c7a-8734-3e803f31feec"/>
          <Name>next</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="e4700327-f31e-4774-bf1e-b84afc9af369">
            <cppPosition>3</cppPosition>
            <cppSignature>ChannelContext_i2c * ChannelContext_i2c::next</cppSignature>
            <cppType>[ChannelContext_i2c]Ptr</cppType>
            <description>clib.ftLib.I2C_ChannelContext    Data member of C++ class ChannelContext_i2c.</description>
            <getterPTKey>DM/?get/ChannelContext_i2c/next</getterPTKey>
            <mwType>clib.ftLib.I2C_ChannelContext</mwType>
            <setterPTKey>DM/?set/ChannelContext_i2c/next</setterPTKey>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.I2C_ChannelContext</validTypes>
            <validTypes>clib.array.ftLib.I2C_ChannelContext</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="16691da9-0af3-47d9-8508-98d4b3bc5cff">
              <definitionStatus>PartiallySpecified</definitionStatus>
            </integrationStatus>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3e7c6c5d-4f2c-4130-ab42-b46ac60c3e28">
            <Col>29</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
            <Line>202</Line>
          </DefPos>
        </Members>
        <Name>ChannelContext_i2c</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="fe2ede08-14de-4b34-b549-4ce1b25be065">
          <deallocatorPTKey>D/ChannelContext_i2c</deallocatorPTKey>
          <description>clib.ftLib.I2C_ChannelContext    Representation of C++ class ChannelContext_i2c.</description>
          <isAssignable>true</isAssignable>
          <isDestructible>true</isDestructible>
          <name>clib.ftLib.I2C_ChannelContext</name>
          <needArray>true</needArray>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="2c80eac6-a121-4518-8dbf-23f2fb1097d4"/>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="415d3c33-cd32-43a4-947f-5827ff71f992">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="a6e64c5f-d410-4c65-b918-328c70ecbb29">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="4955ee2b-f37b-4841-a8dc-48ecdede235b"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d113d998-209c-45b5-b8bc-342fe8de7fe1">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>198</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="49996f8d-630a-4c7a-8734-3e803f31feec">
        <Type type="cxxfe.ast.types.StructType" uuid="fc573f1c-e90a-41fc-8cfd-9ffebfdd729f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="02b54893-eb6c-4537-9285-d456be28ab3b">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="8db25387-7864-465f-9bd5-53db36a5199b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="d4eef36e-7e21-4da3-8164-31380ce41052"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="d4eef36e-7e21-4da3-8164-31380ce41052">
        <Type type="cxxfe.ast.types.StructType" uuid="fc573f1c-e90a-41fc-8cfd-9ffebfdd729f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2972fe1e-6eba-45fa-b5a3-d27178d0555b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="5d616166-31ac-4487-bd2f-3549d4ccb9ed"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="5d616166-31ac-4487-bd2f-3549d4ccb9ed">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="19dc730f-2fda-45c6-ab96-a0efe86d60f6"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="19dc730f-2fda-45c6-ab96-a0efe86d60f6">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="fc573f1c-e90a-41fc-8cfd-9ffebfdd729f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4f0d70c9-58ee-4d22-92dc-7d4039b888eb">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0ccb79b7-a7c1-4df3-a842-be44fbac519d">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="5d616166-31ac-4487-bd2f-3549d4ccb9ed"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="0e9ebbc3-ef32-4392-add5-92460c6b1349"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="0e9ebbc3-ef32-4392-add5-92460c6b1349">
        <Type type="cxxfe.ast.types.StructType" uuid="fc573f1c-e90a-41fc-8cfd-9ffebfdd729f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6d1bf13b-f328-4013-aed6-e8ff159321f7">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="d4eef36e-7e21-4da3-8164-31380ce41052"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="0e9ebbc3-ef32-4392-add5-92460c6b1349"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="388703c1-4070-43db-894e-3e85eaa57571">
        <Type type="cxxfe.ast.types.StructType" uuid="fc573f1c-e90a-41fc-8cfd-9ffebfdd729f"/>
        <Name>I2C_ChannelContext</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="9a8728ad-d1af-43fb-a619-7094a756a2d9">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>203</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="cff0154d-46a7-47f9-a410-1840dbf74b25">
        <Type type="cxxfe.ast.types.IntegerType" uuid="78e18ba2-dbb9-41de-a205-1d9dce9cc986"/>
        <Name>ULONG</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2cb7075b-db19-4f1c-80f3-baa6258d73f1">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>51</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="033480ff-3f67-4f22-9f9a-d5a548cd76e7">
        <Type type="cxxfe.ast.types.IntegerType" uuid="b666f7a9-54c9-4374-af57-05a51f5e71dc"/>
        <Name>USHORT</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="232ac7c8-089f-4d38-aac6-be5cfcbfd1ee">
          <Col>24</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>53</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048">
        <Type type="cxxfe.ast.types.IntegerType" uuid="9a5f502f-53cc-4117-895a-e3232c1824a4"/>
        <Name>UCHAR</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="dd1fc67a-b2b2-4a42-8cdf-bf55543d3c1d">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>55</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808">
        <Type type="cxxfe.ast.types.IntegerType" uuid="78e18ba2-dbb9-41de-a205-1d9dce9cc986"/>
        <Name>DWORD</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2c9a2c69-cdb9-4f68-a1cf-34dc960417e4">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>156</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="468244ee-e6f0-459d-9ef2-e98c07320af4">
        <Type type="cxxfe.ast.types.IntegerType" uuid="3e9d02b1-ecf9-493f-82e0-a0e5b0718518"/>
        <Name>BOOL</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b7d19d3c-87b8-4a91-9a38-7e4f0242006f">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>157</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc">
        <Type type="cxxfe.ast.types.PointerType" uuid="9fd15935-0fcb-486c-8def-d510d48c5f2c"/>
        <Name>LPDWORD</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="96d8acab-12f7-4b58-8bde-efbd0c8a0485">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>172</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="9fd15935-0fcb-486c-8def-d510d48c5f2c">
        <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="910ca04a-e369-4edd-8021-ceec9e0165a5">
        <Type type="cxxfe.ast.types.PointerType" uuid="0f0fa2a6-f75a-44cb-8c6e-35f5103a80ee"/>
        <Name>LPVOID</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e28c93e8-c8bb-46bd-90b3-bd34e7c1552c">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
          <Line>173</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="0f0fa2a6-f75a-44cb-8c6e-35f5103a80ee">
        <Type type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="4108ede6-bd7d-4e04-84f9-4b2cb5a5a6b2">
        <Type type="cxxfe.ast.types.PointerType" uuid="0f0fa2a6-f75a-44cb-8c6e-35f5103a80ee"/>
        <Name>PVOID</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6a3a2015-8f5e-4ec8-84ef-1d749376f2d7">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>425</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="ed3f45e7-aff5-4eda-bdab-8c4b44331a93">
        <Type type="cxxfe.ast.types.IntegerType" uuid="c9a6661c-1742-43c8-b1eb-fbf415b2e3d9"/>
        <Name>CHAR</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="84e14dc6-fcdf-44d7-becc-ab6ff21c958a">
          <Col>14</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>467</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="7621a120-e744-4665-b52a-e80910c93cd3">
        <Type type="cxxfe.ast.types.PointerType" uuid="815546da-0313-4ac0-810e-006f1980ee9b"/>
        <Name>PCHAR</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3b789e29-0558-4777-87c6-4c26c58d2d72">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>555</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="815546da-0313-4ac0-810e-006f1980ee9b">
        <Type type="cxxfe.ast.types.TypedefType" uuid="ed3f45e7-aff5-4eda-bdab-8c4b44331a93"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="341f40f9-74cb-4d66-a762-b065ef9f9640">
        <Type type="cxxfe.ast.types.IntegerType" uuid="0effd3cf-1b32-4070-b93d-23eca1246545"/>
        <Name>ULONGLONG</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0430f56f-1e68-409c-8c40-36513b2b6de3">
          <Col>26</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
          <Line>841</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695">
        <Type type="cxxfe.ast.types.TypedefType" uuid="4108ede6-bd7d-4e04-84f9-4b2cb5a5a6b2"/>
        <Name>FT_HANDLE</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d1dc4f21-3014-4c4a-b9ea-767d74f1df22">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>82</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b">
        <Type type="cxxfe.ast.types.TypedefType" uuid="cff0154d-46a7-47f9-a410-1840dbf74b25"/>
        <Name>FT_STATUS</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5c2e6381-c7b8-45fe-add5-caf2fe530cfd">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>88</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.EnumType" uuid="84f696d4-a4e0-49e9-9037-39eaa0f9cd66">
        <StorageType type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1"/>
        <Strings>FT_OK</Strings>
        <Strings>FT_INVALID_HANDLE</Strings>
        <Strings>FT_DEVICE_NOT_FOUND</Strings>
        <Strings>FT_DEVICE_NOT_OPENED</Strings>
        <Strings>FT_IO_ERROR</Strings>
        <Strings>FT_INSUFFICIENT_RESOURCES</Strings>
        <Strings>FT_INVALID_PARAMETER</Strings>
        <Strings>FT_INVALID_BAUD_RATE</Strings>
        <Strings>FT_DEVICE_NOT_OPENED_FOR_ERASE</Strings>
        <Strings>FT_DEVICE_NOT_OPENED_FOR_WRITE</Strings>
        <Strings>FT_FAILED_TO_WRITE_DEVICE</Strings>
        <Strings>FT_EEPROM_READ_FAILED</Strings>
        <Strings>FT_EEPROM_WRITE_FAILED</Strings>
        <Strings>FT_EEPROM_ERASE_FAILED</Strings>
        <Strings>FT_EEPROM_NOT_PRESENT</Strings>
        <Strings>FT_EEPROM_NOT_PROGRAMMED</Strings>
        <Strings>FT_INVALID_ARGS</Strings>
        <Strings>FT_NOT_SUPPORTED</Strings>
        <Strings>FT_OTHER_ERROR</Strings>
        <Strings>FT_DEVICE_LIST_NOT_READY</Strings>
        <Values>0</Values>
        <Values>1</Values>
        <Values>2</Values>
        <Values>3</Values>
        <Values>4</Values>
        <Values>5</Values>
        <Values>6</Values>
        <Values>7</Values>
        <Values>8</Values>
        <Values>9</Values>
        <Values>10</Values>
        <Values>11</Values>
        <Values>12</Values>
        <Values>13</Values>
        <Values>14</Values>
        <Values>15</Values>
        <Values>16</Values>
        <Values>17</Values>
        <Values>18</Values>
        <Values>19</Values>
        <NumBits>32</NumBits>
        <Annotations type="mwAnnotation.EnumAnnotation" uuid="6fca43c1-da48-4e5f-a3e3-5ba0f6527a84">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="b143dde2-4aac-4afd-9dee-cd9a9fb71be2">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8d16cfb5-2ab8-43ff-b403-0a0865f223bf">
          <Col>6</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>90</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="ee3de347-c1f1-40b7-a86b-b54513225e6d">
        <Type type="cxxfe.ast.types.PointerType" uuid="efed68d8-3f47-42ae-a678-a41319be1039"/>
        <Name>PFT_EVENT_HANDLER</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f44f8132-c611-4ddf-836a-2ff43bfd7cce">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>217</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="efed68d8-3f47-42ae-a678-a41319be1039">
        <Type type="cxxfe.ast.types.FunctionType" uuid="d142ce45-7e54-45c3-afe3-5fbeac43a412"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d142ce45-7e54-45c3-afe3-5fbeac43a412">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="e4bd520b-af0d-4b13-b5cb-34841a7499f3">
        <Type type="cxxfe.ast.types.TypedefType" uuid="cff0154d-46a7-47f9-a410-1840dbf74b25"/>
        <Name>FT_DEVICE</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1866a33e-a792-42f0-a3f0-79c0b2852446">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>236</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.EnumType" uuid="cdcabd36-f2d0-4274-90e0-30edd4ebf51a">
        <StorageType type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1"/>
        <Strings>FT_DEVICE_BM</Strings>
        <Strings>FT_DEVICE_AM</Strings>
        <Strings>FT_DEVICE_100AX</Strings>
        <Strings>FT_DEVICE_UNKNOWN</Strings>
        <Strings>FT_DEVICE_2232C</Strings>
        <Strings>FT_DEVICE_232R</Strings>
        <Strings>FT_DEVICE_2232H</Strings>
        <Strings>FT_DEVICE_4232H</Strings>
        <Strings>FT_DEVICE_232H</Strings>
        <Strings>FT_DEVICE_X_SERIES</Strings>
        <Strings>FT_DEVICE_4222H_0</Strings>
        <Strings>FT_DEVICE_4222H_1_2</Strings>
        <Strings>FT_DEVICE_4222H_3</Strings>
        <Strings>FT_DEVICE_4222_PROG</Strings>
        <Strings>FT_DEVICE_900</Strings>
        <Strings>FT_DEVICE_930</Strings>
        <Strings>FT_DEVICE_UMFTPD3A</Strings>
        <Strings>FT_DEVICE_2233HP</Strings>
        <Strings>FT_DEVICE_4233HP</Strings>
        <Strings>FT_DEVICE_2232HP</Strings>
        <Strings>FT_DEVICE_4232HP</Strings>
        <Strings>FT_DEVICE_233HP</Strings>
        <Strings>FT_DEVICE_232HP</Strings>
        <Strings>FT_DEVICE_2232HA</Strings>
        <Strings>FT_DEVICE_4232HA</Strings>
        <Values>0</Values>
        <Values>1</Values>
        <Values>2</Values>
        <Values>3</Values>
        <Values>4</Values>
        <Values>5</Values>
        <Values>6</Values>
        <Values>7</Values>
        <Values>8</Values>
        <Values>9</Values>
        <Values>10</Values>
        <Values>11</Values>
        <Values>12</Values>
        <Values>13</Values>
        <Values>14</Values>
        <Values>15</Values>
        <Values>16</Values>
        <Values>17</Values>
        <Values>18</Values>
        <Values>19</Values>
        <Values>20</Values>
        <Values>21</Values>
        <Values>22</Values>
        <Values>23</Values>
        <Values>24</Values>
        <NumBits>32</NumBits>
        <Annotations type="mwAnnotation.EnumAnnotation" uuid="c1e108e0-d143-46be-8452-6548909fc772">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="b429f866-03e2-44c2-b7cd-fe5911564e07">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7f4415c8-b544-4c90-bfa1-4057c2b4c809">
          <Col>6</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>238</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.EnumType" uuid="a5d87f2c-b2d5-41ec-a881-dd5213081f30">
        <Comments>/** @{
 * @name FT_DEVICE_LIST_INFO_NODE Device Information Flags
 * @par Summary
 * These flags are used in the Flags member of FT_DEVICE_LIST_INFO_NODE to indicated the state of 
 * the device and speed of the device.
*/</Comments>
        <StorageType type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1"/>
        <Strings>FT_FLAGS_OPENED</Strings>
        <Strings>FT_FLAGS_HISPEED</Strings>
        <Values>1</Values>
        <Values>2</Values>
        <NumBits>32</NumBits>
        <Annotations type="mwAnnotation.EnumAnnotation" uuid="8431e376-04b0-42ba-8d23-8bd5cebe4ad5">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c7343987-556b-494e-9576-d032448e4fe1">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e3a4d8a6-d0a0-49b9-865f-15f0e2364d03">
          <Col>6</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>361</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="b7947aac-9540-4ee8-8bf6-201386cb409d">
        <Type type="cxxfe.ast.types.StructType" uuid="f4b9b446-85a8-4a46-91bf-3ccc2bf4ba18"/>
        <Name>FT_DEVICE_LIST_INFO_NODE</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="087585f6-cecb-420d-b679-45e042a3cc6e">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>470</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="7119c9ab-4449-4c0c-bc40-c34e7230de13">
        <Type type="cxxfe.ast.types.StructType" uuid="06cf63f8-aba6-405e-b915-a65fe666a435"/>
        <Name>FT_PROGRAM_DATA</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d3f804fb-0e6a-41ab-aac0-394a319930c7">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1666</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="e2d7d5f2-81f8-462d-9932-a71f7fa3dbb9">
        <Type type="cxxfe.ast.types.PointerType" uuid="24760132-c4b4-4e57-8211-9b27eb8821e5"/>
        <Name>PFT_PROGRAM_DATA</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cb1c56ef-08b4-47c6-af5e-322eceea8b5d">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1666</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="24760132-c4b4-4e57-8211-9b27eb8821e5">
        <Type type="cxxfe.ast.types.StructType" uuid="06cf63f8-aba6-405e-b915-a65fe666a435"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="6994dedb-f8bb-498c-9657-8763163a1c25">
        <Type type="cxxfe.ast.types.StructType" uuid="96c9df89-50a5-479b-a54f-d7db03a4337e"/>
        <Name>FT_EEPROM_HEADER</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a3a126b6-2cd5-4a4c-9eac-e213bb084455">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1921</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="0f561815-f071-4fab-810e-736b67e75f5b">
        <Type type="cxxfe.ast.types.PointerType" uuid="344e4b3a-10f2-4b36-a5ac-dabdb3d23a88"/>
        <Name>PFT_EEPROM_HEADER</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="26ae2644-f417-4815-9fed-cc8534e1e621">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1921</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="344e4b3a-10f2-4b36-a5ac-dabdb3d23a88">
        <Type type="cxxfe.ast.types.StructType" uuid="96c9df89-50a5-479b-a54f-d7db03a4337e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="13c55544-79d1-4c52-8ab8-71aa8dc7f326">
        <Type type="cxxfe.ast.types.StructType" uuid="25fa89e4-2ce7-4363-9468-47bb34b88407"/>
        <Name>FT_EEPROM_232B</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c6030ee9-7172-4b4e-84a8-cea64b466b09">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1932</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="37b9e25b-573d-4d3b-97bb-2b54d11dbc47">
        <Type type="cxxfe.ast.types.PointerType" uuid="1e95bb51-f59c-4dda-98ba-94741eac75b0"/>
        <Name>PFT_EEPROM_232B</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="ebfb6a82-a778-4a42-9f67-a72e7299e38e">
          <Col>21</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1932</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="1e95bb51-f59c-4dda-98ba-94741eac75b0">
        <Type type="cxxfe.ast.types.StructType" uuid="25fa89e4-2ce7-4363-9468-47bb34b88407"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="2b7db8a0-aab4-4d79-8948-ee93e36aa91b">
        <Type type="cxxfe.ast.types.StructType" uuid="1f9908e6-0486-45b3-92d9-774425a2fea4"/>
        <Name>FT_EEPROM_2232</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="777cbf70-03fe-4054-8336-da8011c9aa04">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1957</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="1b5670b3-8950-48b8-9329-c63804a8a2c6">
        <Type type="cxxfe.ast.types.PointerType" uuid="d93c12d9-8471-4ef1-853c-b69d208e5750"/>
        <Name>PFT_EEPROM_2232</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8caa1eb0-9089-48aa-9703-11012148c976">
          <Col>21</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1957</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="d93c12d9-8471-4ef1-853c-b69d208e5750">
        <Type type="cxxfe.ast.types.StructType" uuid="1f9908e6-0486-45b3-92d9-774425a2fea4"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="be9f6c27-3897-413e-acb7-6b7477573dfe">
        <Type type="cxxfe.ast.types.StructType" uuid="1e6fd2cf-4954-4dbe-bd05-4fe41a394293"/>
        <Name>FT_EEPROM_232R</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="acedeb1d-5f3d-47f5-b839-dd4c6961bb78">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1987</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="eb05bcc3-09e3-47e2-b621-d98511642b26">
        <Type type="cxxfe.ast.types.PointerType" uuid="a04c0e4f-96d7-43f2-85e4-e445ba36863d"/>
        <Name>PFT_EEPROM_232R</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4ad3a375-514b-425e-8d0c-488719459c29">
          <Col>21</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1987</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="a04c0e4f-96d7-43f2-85e4-e445ba36863d">
        <Type type="cxxfe.ast.types.StructType" uuid="1e6fd2cf-4954-4dbe-bd05-4fe41a394293"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="935a1642-88c7-46a2-b1ba-8d6b28aac109">
        <Type type="cxxfe.ast.types.StructType" uuid="b821093e-9c5a-4af4-b833-319de5566c8f"/>
        <Name>FT_EEPROM_2232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7b790539-ade7-40d3-9a2a-a35d45021043">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2022</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="7a7b4614-162f-4baa-b799-0e3a7e2de4d1">
        <Type type="cxxfe.ast.types.PointerType" uuid="0afae2be-86fe-4b97-9058-e4c011712e95"/>
        <Name>PFT_EEPROM_2232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e91a1c6b-a8c7-43dd-888d-b4b86d435155">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2022</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="0afae2be-86fe-4b97-9058-e4c011712e95">
        <Type type="cxxfe.ast.types.StructType" uuid="b821093e-9c5a-4af4-b833-319de5566c8f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="c3521a91-640e-425e-bb9e-ca38f1c4541d">
        <Type type="cxxfe.ast.types.StructType" uuid="aab8f594-753d-4ab4-a525-2e999dd39123"/>
        <Name>FT_EEPROM_4232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="262af97c-2147-4d66-865c-192675c486e7">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2056</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="c2083161-760c-4694-b721-008fb0dd7761">
        <Type type="cxxfe.ast.types.PointerType" uuid="df7a658a-83a4-4852-8893-9b4e9d4f275f"/>
        <Name>PFT_EEPROM_4232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="faa76f3f-2392-45a4-b8fc-c411276974b9">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2056</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="df7a658a-83a4-4852-8893-9b4e9d4f275f">
        <Type type="cxxfe.ast.types.StructType" uuid="aab8f594-753d-4ab4-a525-2e999dd39123"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="5d3cba92-6cd3-46fe-9ebe-6bdab4bdd0b2">
        <Type type="cxxfe.ast.types.StructType" uuid="80263b7f-a2a2-4513-88c3-115a29103089"/>
        <Name>FT_EEPROM_232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1d19c023-d967-44fa-8f34-43f0b517553f">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2097</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="831ff95f-9dbb-4a12-bbd4-a9fbd1c5d20c">
        <Type type="cxxfe.ast.types.PointerType" uuid="f71bbb3a-1cb8-4b46-ac58-7d8569b26f73"/>
        <Name>PFT_EEPROM_232H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0fa701c9-9e47-400c-a7ea-ecce6f2652a9">
          <Col>21</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2097</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="f71bbb3a-1cb8-4b46-ac58-7d8569b26f73">
        <Type type="cxxfe.ast.types.StructType" uuid="80263b7f-a2a2-4513-88c3-115a29103089"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="5d8b2ca6-fa8a-491a-88d7-a1fe759ea593">
        <Type type="cxxfe.ast.types.StructType" uuid="b2da8d2c-270e-4884-9b5c-cdbd061395a8"/>
        <Name>FT_EEPROM_X_SERIES</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="323ea6a3-2c0b-446f-b8f2-c9b9dbb463c6">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2149</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="4ab886a0-8c76-4b45-8993-e4589cf53ef9">
        <Type type="cxxfe.ast.types.PointerType" uuid="52b78b09-3281-454b-b5a3-7ad8fd109845"/>
        <Name>PFT_EEPROM_X_SERIES</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="192a3887-e6fc-482e-994b-2830ce984d46">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2149</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="52b78b09-3281-454b-b5a3-7ad8fd109845">
        <Type type="cxxfe.ast.types.StructType" uuid="b2da8d2c-270e-4884-9b5c-cdbd061395a8"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="c281704e-12d1-4b8f-b672-1299c6d83b25">
        <Type type="cxxfe.ast.types.StructType" uuid="9e7aae59-de8b-4015-be7f-eb41fa03fb70"/>
        <Name>FT_EEPROM_4222H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="cab9677e-5e86-4567-975e-8b6cab64dee2">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2212</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="7181a84b-404a-4215-9d70-3058b7ee1fc3">
        <Type type="cxxfe.ast.types.PointerType" uuid="3ea3f58c-f12f-44d1-8f8b-82a684ecd4d8"/>
        <Name>PFT_EEPROM_4222H</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2c589d9a-bc5f-44dc-a339-066498353b84">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2212</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="3ea3f58c-f12f-44d1-8f8b-82a684ecd4d8">
        <Type type="cxxfe.ast.types.StructType" uuid="9e7aae59-de8b-4015-be7f-eb41fa03fb70"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="c8e002b7-3fd1-46d9-a84e-1f3dbcfafc05">
        <Type type="cxxfe.ast.types.StructType" uuid="8e5aec8f-07ed-4dce-937a-f9bdaf3770a0"/>
        <Name>FT_EEPROM_PD_PDO_mv_ma</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1abb9081-1d00-4107-b402-1513d09b7d71">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2235</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="7584d13c-a40e-4cf1-9542-e308131fc31e">
        <Type type="cxxfe.ast.types.StructType" uuid="515d1c95-cb41-4697-91b5-f24b6a9f6469"/>
        <Name>FT_EEPROM_PD</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="87aca99f-d5e5-4c42-8398-d197d567d581">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2330</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="c46b1b67-8db4-4050-bfae-98e64b7e1e20">
        <Type type="cxxfe.ast.types.PointerType" uuid="e411a269-50c0-4ca5-8bf0-a9806f7a2070"/>
        <Name>PFT_EEPROM_PD</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="171e967e-6934-4fdc-aa26-b5d518f60c2a">
          <Col>19</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2330</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="e411a269-50c0-4ca5-8bf0-a9806f7a2070">
        <Type type="cxxfe.ast.types.StructType" uuid="515d1c95-cb41-4697-91b5-f24b6a9f6469"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="d56f1955-af5d-436e-af99-8569ab841d08">
        <Type type="cxxfe.ast.types.StructType" uuid="e1241cde-4629-4f07-9da7-a87e7c0b7c99"/>
        <Name>FT_EEPROM_2233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="456334ca-7811-4ecc-885c-9f0b6ad561f4">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2338</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="2a935cf5-5484-4a54-b1d4-bcbca279b457">
        <Type type="cxxfe.ast.types.PointerType" uuid="38285092-628b-4459-a8db-c44df6c1b740"/>
        <Name>PFT_EEPROM_2233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="0564126b-da8d-4101-9bd2-ee1a0c0e3013">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2338</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="38285092-628b-4459-a8db-c44df6c1b740">
        <Type type="cxxfe.ast.types.StructType" uuid="e1241cde-4629-4f07-9da7-a87e7c0b7c99"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="3102a643-19de-4db1-b302-814a28ec55b6">
        <Type type="cxxfe.ast.types.StructType" uuid="c5d744e0-9139-4bfe-9972-99a80753ab1a"/>
        <Name>FT_EEPROM_4233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="edfe8fca-9c0e-4d9b-8cc6-0659c579153e">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2346</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="8ed0f66a-a72c-413e-a859-da8c77b114a3">
        <Type type="cxxfe.ast.types.PointerType" uuid="fc322ead-86da-4a27-b0dd-8dc9ffefbe60"/>
        <Name>PFT_EEPROM_4233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b32d38ee-15f8-47ab-8f4e-b3277d5bd18f">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2346</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="fc322ead-86da-4a27-b0dd-8dc9ffefbe60">
        <Type type="cxxfe.ast.types.StructType" uuid="c5d744e0-9139-4bfe-9972-99a80753ab1a"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="fb2a1037-277a-4bf7-bb2b-63e9fad1c621">
        <Type type="cxxfe.ast.types.StructType" uuid="81ac384e-3962-481c-bf3b-9a7f12904f41"/>
        <Name>FT_EEPROM_2232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f21bc835-b34d-4c4d-92d6-e3a5a52677ac">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2354</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="693f2e4f-5ab6-49fa-b8cc-96bd6ed7867b">
        <Type type="cxxfe.ast.types.PointerType" uuid="6598088d-d2fd-4f7f-b564-d32a6fbd0897"/>
        <Name>PFT_EEPROM_2232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f57da50d-d9b0-4fba-a0c0-a7d367c962b1">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2354</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="6598088d-d2fd-4f7f-b564-d32a6fbd0897">
        <Type type="cxxfe.ast.types.StructType" uuid="81ac384e-3962-481c-bf3b-9a7f12904f41"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="0a1c7d36-a8a7-4eac-b088-59573666fd14">
        <Type type="cxxfe.ast.types.StructType" uuid="d2495ccd-6d49-478d-b980-b9f1b2779133"/>
        <Name>FT_EEPROM_4232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1980a149-2845-425c-bab7-dcc407d55726">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2362</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="cb05c644-e373-4334-adec-3c20da2b16c8">
        <Type type="cxxfe.ast.types.PointerType" uuid="6f230bd5-0c9b-4525-b103-b086931e3a24"/>
        <Name>PFT_EEPROM_4232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c9e4a529-5e2b-40a8-b0c7-e7428d0f4d89">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2362</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="6f230bd5-0c9b-4525-b103-b086931e3a24">
        <Type type="cxxfe.ast.types.StructType" uuid="d2495ccd-6d49-478d-b980-b9f1b2779133"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="5e6cb6cf-2f42-489a-b248-fd75c6feb730">
        <Type type="cxxfe.ast.types.StructType" uuid="bdc9b5e4-1c9e-43f2-aad7-6e98384e89be"/>
        <Name>FT_EEPROM_233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c0cfd412-98f1-4317-a7ce-725c9a8a230f">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2370</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="49f285b3-fdd1-43f2-9c95-dc823485ce29">
        <Type type="cxxfe.ast.types.PointerType" uuid="f860dda5-3b38-4c2b-97c6-73c04e814bd8"/>
        <Name>PFT_EEPROM_233HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6022b1ba-8b63-4675-82b6-14db02ea9fba">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2370</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="f860dda5-3b38-4c2b-97c6-73c04e814bd8">
        <Type type="cxxfe.ast.types.StructType" uuid="bdc9b5e4-1c9e-43f2-aad7-6e98384e89be"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="14823b36-d92f-4ad7-ab45-07ba86c6e96c">
        <Type type="cxxfe.ast.types.StructType" uuid="fc6f2e3e-9581-4fd0-a3ba-591dfb29db4c"/>
        <Name>FT_EEPROM_232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="21543f77-d117-4a8e-b2d8-a9c626aaa54d">
          <Col>4</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2378</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="d97133a4-75c9-484b-b5e7-3dea3b40810a">
        <Type type="cxxfe.ast.types.PointerType" uuid="7f528d7a-722a-4481-bd98-944e50eaeab3"/>
        <Name>PFT_EEPROM_232HP</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5d874904-8ee2-4a81-8887-e8fc71c8f09f">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2378</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="7f528d7a-722a-4481-bd98-944e50eaeab3">
        <Type type="cxxfe.ast.types.StructType" uuid="fc6f2e3e-9581-4fd0-a3ba-591dfb29db4c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="fac66550-b68d-4e29-8651-0566103eedeb">
        <Type type="cxxfe.ast.types.StructType" uuid="45b49c39-5bdb-483d-a9ef-d0ed78c6b234"/>
        <Name>FTCOMSTAT</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="80e7ff19-19ba-406e-9de3-f965d59a03e9">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2935</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="70763644-4060-4a9c-9a2b-87e7350d4fc7">
        <Type type="cxxfe.ast.types.PointerType" uuid="32952f94-9da0-4639-a71c-67aa2a4d48ba"/>
        <Name>LPFTCOMSTAT</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="bc1a5ff3-3830-4938-852e-e9bb7b3cf801">
          <Col>15</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2935</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="32952f94-9da0-4639-a71c-67aa2a4d48ba">
        <Type type="cxxfe.ast.types.StructType" uuid="45b49c39-5bdb-483d-a9ef-d0ed78c6b234"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="2a8105e0-411c-448f-9091-d7d0776cff3a">
        <Type type="cxxfe.ast.types.StructType" uuid="6aac256b-84f3-43a0-bc2c-6e2755cda378"/>
        <Name>FTDCB</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="52f3fd3a-2d89-45b1-a90d-a801dcabac63">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2970</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="27007a48-6ee3-4c80-9673-04def358a8df">
        <Type type="cxxfe.ast.types.PointerType" uuid="649cc631-bc48-4428-a677-9f37642e13a1"/>
        <Name>LPFTDCB</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7ddadc78-8376-40ed-a965-19c2085689d3">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2970</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="649cc631-bc48-4428-a677-9f37642e13a1">
        <Type type="cxxfe.ast.types.StructType" uuid="6aac256b-84f3-43a0-bc2c-6e2755cda378"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="323d26bd-a474-4389-b340-2ec83b92ca19">
        <Type type="cxxfe.ast.types.StructType" uuid="a324d88e-e879-4659-b5a4-7b22ded5b974"/>
        <Name>FTTIMEOUTS</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1a5724d7-5f7c-4256-99bf-25e778240919">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2982</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="d01fd5d7-43ba-4e52-93a6-c7311233bcac">
        <Type type="cxxfe.ast.types.PointerType" uuid="edda2ef0-7ca3-4643-b7b6-f59ae65aa478"/>
        <Name>LPFTTIMEOUTS</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b2d5fd8c-7bf9-4412-b8e7-780c30ae54f7">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2982</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="edda2ef0-7ca3-4643-b7b6-f59ae65aa478">
        <Type type="cxxfe.ast.types.StructType" uuid="a324d88e-e879-4659-b5a4-7b22ded5b974"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="23c862f7-ebf9-455a-983e-4f3fc6812bdd">
        <Type type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048"/>
        <Name>uint8</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4a7413e5-fd8c-4a3e-a8d6-ab38c2be6bc7">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>183</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="761181be-f897-4267-93a4-55cf2666677c">
        <Type type="cxxfe.ast.types.TypedefType" uuid="033480ff-3f67-4f22-9f9a-d5a548cd76e7"/>
        <Name>uint16</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a2784699-2fdf-45cb-9d29-53f3065f22be">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>184</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="a4d12615-4abc-4b24-b923-d0c60106f8d8">
        <Type type="cxxfe.ast.types.TypedefType" uuid="341f40f9-74cb-4d66-a762-b065ef9f9640"/>
        <Name>uint64</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a5d2eba9-2d1a-4d46-8ef6-5dfd2eef461c">
          <Col>19</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>185</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="b05196f6-2276-4d87-ba9d-a79932f21bc3">
        <Type type="cxxfe.ast.types.IntegerType" uuid="88ccdfac-3274-4740-a32c-ad9de24232b1"/>
        <Name>int8</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="27507f51-ca08-4250-8813-88e1eb035f21">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>187</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="f0ac0036-b226-4e9f-a009-fe21e44b6a44">
        <Type type="cxxfe.ast.types.IntegerType" uuid="e75619c4-54a9-4ac3-ba1a-b6083f56fa28"/>
        <Name>int16</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8fc42dd4-1bae-4d27-866c-da7e48fbcfe7">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>188</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="55c4a761-8d1b-47de-a615-b8c2f51532ba">
        <Type type="cxxfe.ast.types.IntegerType" uuid="5ab69de9-d6af-43dd-b36a-347dbf0037e8"/>
        <Name>int64</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="c47fa9e0-bac6-44ae-8718-803c190c5c2c">
          <Col>26</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>189</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="0e1d66b6-6068-4d80-b706-80a3274a15ef">
        <Type type="cxxfe.ast.types.IntegerType" uuid="8e75ba64-eb3d-4e82-976d-353491f41022"/>
        <Name>uint32</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a7395954-9e97-4af7-84ca-1ef2f40b0f93">
          <Col>24</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>195</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="7a4c303d-f61d-4294-ab2c-e4d4c720b229">
        <Type type="cxxfe.ast.types.IntegerType" uuid="a72cad6f-ed9a-4d91-b4a8-9c93ff88cda1"/>
        <Name>int32</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2e9541ac-93c1-4432-ab50-8aeef4dda99a">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>196</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="ed8a101c-af1a-4995-b9ac-581731fb5321">
        <Type type="cxxfe.ast.types.PointerType" uuid="82818d15-93a1-495f-81d3-abfccddb7e47"/>
        <Name>pfunc_FT_GetLibraryVersion</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e27fe108-8d1e-4398-a4f2-5a71c21471e4">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>198</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="82818d15-93a1-495f-81d3-abfccddb7e47">
        <Type type="cxxfe.ast.types.FunctionType" uuid="0c3b712b-fd60-4c2f-9ce7-7034c6a886c5"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e3a448e1-3704-437c-9eb0-850d57ee9936">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>218</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0c3b712b-fd60-4c2f-9ce7-7034c6a886c5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="cda29b19-b7b2-420f-94f7-ea3fbbe0fad6">
        <Type type="cxxfe.ast.types.PointerType" uuid="9eba10d8-5e2c-4c3e-a14e-e2c685212c25"/>
        <Name>pfunc_FT_GetNumChannel</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="096e232e-699a-4bdf-bf1f-440f90feb4a5">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>199</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="9eba10d8-5e2c-4c3e-a14e-e2c685212c25">
        <Type type="cxxfe.ast.types.FunctionType" uuid="93738770-f9d7-484c-b264-03242e442173"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e8dbf5b4-e286-495f-b4db-a25295f9eb02">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>219</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="93738770-f9d7-484c-b264-03242e442173">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="c917b3d8-6d7f-462b-8052-8e7cc7261804">
        <Type type="cxxfe.ast.types.PointerType" uuid="cb149365-7a2f-4933-88a1-3b9d21028580"/>
        <Name>pfunc_FT_GetDeviceInfoList</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5cb06f4d-8819-4c12-be95-f9f896e27099">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>200</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="cb149365-7a2f-4933-88a1-3b9d21028580">
        <Type type="cxxfe.ast.types.FunctionType" uuid="2db3f5ca-81f9-4fa9-9044-f820e8a2770b"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8be00854-c4f2-43ea-926c-c045e19073cc">
          <Col>29</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>220</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2db3f5ca-81f9-4fa9-9044-f820e8a2770b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="a51a5be6-e9d2-4226-9a13-7bd65a8120c6"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="a51a5be6-e9d2-4226-9a13-7bd65a8120c6">
        <Type type="cxxfe.ast.types.TypedefType" uuid="b7947aac-9540-4ee8-8bf6-201386cb409d"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="5a61f4ae-3e22-40ca-88a3-4f35d609fd7d">
        <Type type="cxxfe.ast.types.PointerType" uuid="13090fac-98b5-4e06-bd80-f0291fd7a49c"/>
        <Name>pfunc_FT_Open</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="8dadc726-60d7-43a5-a2f8-45db70d804cf">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>201</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="13090fac-98b5-4e06-bd80-f0291fd7a49c">
        <Type type="cxxfe.ast.types.FunctionType" uuid="1dd40540-c052-4589-a5f8-8215e511cab9"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5cf1d083-975f-41a5-9562-1f84b4105744">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>221</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="1dd40540-c052-4589-a5f8-8215e511cab9">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.IntegerType" uuid="3e9d02b1-ecf9-493f-82e0-a0e5b0718518"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="131d3698-c38f-4d4f-8a41-a70ed518a5bc"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="131d3698-c38f-4d4f-8a41-a70ed518a5bc">
        <Type type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="047f6a13-00f5-4784-b687-ce6e32a0ce24">
        <Type type="cxxfe.ast.types.PointerType" uuid="274e5cba-b0ad-4011-90c3-1ea719cf36e6"/>
        <Name>pfunc_FT_Close</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3c812d20-4e7a-45be-994c-9fc07c5f76bc">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>202</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="274e5cba-b0ad-4011-90c3-1ea719cf36e6">
        <Type type="cxxfe.ast.types.FunctionType" uuid="fea0db37-6636-4f17-bd2b-a2bd63db0285"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="34677dac-93a9-4bcf-bdb8-313b29c612ea">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>222</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fea0db37-6636-4f17-bd2b-a2bd63db0285">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="328c7bbe-fc9f-4546-a674-18f0f729cd92">
        <Type type="cxxfe.ast.types.PointerType" uuid="a42d992a-2de5-46a4-a819-718d1e2b5060"/>
        <Name>pfunc_FT_ResetDevice</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2ba299d5-a296-4c3e-b056-60d673a17274">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>203</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="a42d992a-2de5-46a4-a819-718d1e2b5060">
        <Type type="cxxfe.ast.types.FunctionType" uuid="9f927004-d820-47bc-9b7d-34d4edc7952b"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="49bdbd0c-49dd-45c4-869d-91d6d5d00a6c">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>223</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="9f927004-d820-47bc-9b7d-34d4edc7952b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="ecaf1d31-c881-4a4b-bf71-b3f983dd7dbc">
        <Type type="cxxfe.ast.types.PointerType" uuid="e51216e2-b2ea-4f77-ad38-d0be5d9075a9"/>
        <Name>pfunc_FT_Purge</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1ae47760-5f56-4724-8873-c09ecbbc957b">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>204</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="e51216e2-b2ea-4f77-ad38-d0be5d9075a9">
        <Type type="cxxfe.ast.types.FunctionType" uuid="57965bc0-830c-4726-9581-9e51373f8242"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4b3f250b-9bf1-4642-b520-1e74d7fa2b38">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>224</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="57965bc0-830c-4726-9581-9e51373f8242">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="e32acb37-387e-4e79-adbd-11a6d127ba8f">
        <Type type="cxxfe.ast.types.PointerType" uuid="253447b2-0d5e-4b2d-ad74-1b108bef3bd9"/>
        <Name>pfunc_FT_SetUSBParameters</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3ff1b8c1-ffb9-40c2-9777-1b76e1e11b5b">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>205</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="253447b2-0d5e-4b2d-ad74-1b108bef3bd9">
        <Type type="cxxfe.ast.types.FunctionType" uuid="f362b5e5-5722-4c2b-97b0-daf5b271ea1c"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="95b63410-1be5-4d2d-9c03-b6de9f2d7e51">
          <Col>28</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>225</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f362b5e5-5722-4c2b-97b0-daf5b271ea1c">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="d6a92352-7e7d-4878-ac50-84f17ca9ac0a">
        <Type type="cxxfe.ast.types.PointerType" uuid="c796039b-a878-43de-a3d0-cfcc5115ccb9"/>
        <Name>pfunc_FT_SetChars</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1045792e-fa9b-45fe-a9b8-cd394e823211">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>206</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="c796039b-a878-43de-a3d0-cfcc5115ccb9">
        <Type type="cxxfe.ast.types.FunctionType" uuid="408c11a6-f8f7-46fb-a0ca-1c4bf4d10596"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="07892559-0bcb-47b9-bb3a-6eb036b26c05">
          <Col>20</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>226</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="408c11a6-f8f7-46fb-a0ca-1c4bf4d10596">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="eedf8921-42f1-4380-9dc9-9879295e0dab">
        <Type type="cxxfe.ast.types.PointerType" uuid="d9a6f79c-afef-4fc9-9019-8ed92c9c264c"/>
        <Name>pfunc_FT_SetTimeouts</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="89b65295-0a36-4660-9020-f9b3148cf26a">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>207</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="d9a6f79c-afef-4fc9-9019-8ed92c9c264c">
        <Type type="cxxfe.ast.types.FunctionType" uuid="b64e7aef-11b6-422c-9f4f-fcc5be7e42ba"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="43f00eef-bfe8-4761-ad2a-a62f425af21b">
          <Col>23</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>227</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="b64e7aef-11b6-422c-9f4f-fcc5be7e42ba">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="89bbea88-b381-42c8-81a5-f8c2d361a90c">
        <Type type="cxxfe.ast.types.PointerType" uuid="fef930c7-f192-43a2-9235-3545bad7c844"/>
        <Name>pfunc_FT_SetLatencyTimer</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e852db08-be4c-43b0-b76e-c12201ad55c1">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>208</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="fef930c7-f192-43a2-9235-3545bad7c844">
        <Type type="cxxfe.ast.types.FunctionType" uuid="e5e0c58c-a02e-44ef-8d60-78b24a6571ce"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e645769a-0eb1-477a-ac75-53845299ba0c">
          <Col>27</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>228</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e5e0c58c-a02e-44ef-8d60-78b24a6571ce">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="7a05ef20-ccf2-4478-b2d3-06b2ec01b6d8">
        <Type type="cxxfe.ast.types.PointerType" uuid="8b82f186-73b0-4808-ac6b-88c1a947f81b"/>
        <Name>pfunc_FT_GetLatencyTimer</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4693a3eb-a9ae-447e-8544-d0edefe9d0d0">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>209</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="8b82f186-73b0-4808-ac6b-88c1a947f81b">
        <Type type="cxxfe.ast.types.FunctionType" uuid="4a02f451-619d-4c38-97db-021f7dc40534"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="6ebc6806-7890-49c2-94ef-7a281f3a0a3c">
          <Col>27</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>229</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4a02f451-619d-4c38-97db-021f7dc40534">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="032ad8fa-f650-4ff8-963a-584793236ec6"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="032ad8fa-f650-4ff8-963a-584793236ec6">
        <Type type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="9c9671d3-1301-484d-b79f-4fcce3c2b7aa">
        <Type type="cxxfe.ast.types.PointerType" uuid="14e9b762-2cb8-4ea3-9d55-9cc9e466ddbe"/>
        <Name>pfunc_FT_SetBitmode</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="5b189311-2ae8-4e94-b8a6-2247483e833a">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>210</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="14e9b762-2cb8-4ea3-9d55-9cc9e466ddbe">
        <Type type="cxxfe.ast.types.FunctionType" uuid="a7df07b6-5618-4a36-97a1-9ec851a21910"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e7618fc3-b757-4c7f-955a-857adb20d6b2">
          <Col>22</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>230</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="a7df07b6-5618-4a36-97a1-9ec851a21910">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="8ff64cae-2e62-4ac9-9a4d-de0d9a74613e">
        <Type type="cxxfe.ast.types.PointerType" uuid="5025ac6a-2e09-4a88-b601-de9a51390bef"/>
        <Name>pfunc_FT_GetQueueStatus</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="74985ce3-34d3-4d4d-b401-1ac28f5585dd">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>211</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="5025ac6a-2e09-4a88-b601-de9a51390bef">
        <Type type="cxxfe.ast.types.FunctionType" uuid="d0d93536-9e07-42ef-8aa7-6a9207845ae4"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="434cd882-ecea-4945-95fb-99420b3db73b">
          <Col>26</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>231</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d0d93536-9e07-42ef-8aa7-6a9207845ae4">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="a4d9edb4-457b-49b1-affa-445c6c833a31">
        <Type type="cxxfe.ast.types.PointerType" uuid="c9617619-a3a0-4c47-80e4-7d0e8e172c1d"/>
        <Name>pfunc_FT_Read</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="21f917d1-fec8-4fac-b798-11a9ebf43835">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>212</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="c9617619-a3a0-4c47-80e4-7d0e8e172c1d">
        <Type type="cxxfe.ast.types.FunctionType" uuid="133289a9-839b-4d27-864b-9e9bc6d54d88"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="78c795c8-8a0d-4e23-9eb0-f378825cd23b">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>232</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="133289a9-839b-4d27-864b-9e9bc6d54d88">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="910ca04a-e369-4edd-8021-ceec9e0165a5"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="f431c55d-c911-4356-b526-f2ccaeb74ccc">
        <Type type="cxxfe.ast.types.PointerType" uuid="9676b519-fcb3-44f7-af58-1e89082c5bca"/>
        <Name>pfunc_FT_Write</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e098bfab-a41a-4b62-a9e7-fbd4b0bec6de">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>213</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="9676b519-fcb3-44f7-af58-1e89082c5bca">
        <Type type="cxxfe.ast.types.FunctionType" uuid="ec6ffc64-0147-4a7b-abc2-e9569b296671"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="16f8d640-9ff8-4bd6-971f-863dfe6a4e03">
          <Col>17</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>233</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ec6ffc64-0147-4a7b-abc2-e9569b296671">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="910ca04a-e369-4edd-8021-ceec9e0165a5"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="2b8ccd85-f870-4693-aa9b-98e580564ade">
        <Type type="cxxfe.ast.types.PointerType" uuid="a9fdd68d-629e-460a-9794-c72d56e48373"/>
        <Name>pfunc_FT_GetDeviceInfo</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2d769675-c1ea-4b2e-9f25-eb273eed6a77">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>214</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="a9fdd68d-629e-460a-9794-c72d56e48373">
        <Type type="cxxfe.ast.types.FunctionType" uuid="afa34ebc-1df0-4583-953c-2e01e00b38cc"/>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="12543311-a5d1-49fe-babb-85858c184781">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>234</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="afa34ebc-1df0-4583-953c-2e01e00b38cc">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="51133e51-80a1-49b4-bfe4-79951739f2ed"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="7621a120-e744-4665-b52a-e80910c93cd3"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="7621a120-e744-4665-b52a-e80910c93cd3"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="910ca04a-e369-4edd-8021-ceec9e0165a5"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="51133e51-80a1-49b4-bfe4-79951739f2ed">
        <Type type="cxxfe.ast.types.TypedefType" uuid="e4bd520b-af0d-4b13-b5cb-34841a7499f3"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="0e0309b8-87b2-46e3-9870-dc508e61ca72">
        <Type type="cxxfe.ast.types.StructType" uuid="e319b9ce-d8a7-4d84-abe3-404699e33afb"/>
        <Name>InfraFunctionPtrLst</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="72b70c38-c73e-4674-b8f8-80469a75c5d5">
          <Col>3</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>235</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="e8bd52f6-5f3c-48ed-a4e8-6b13000e0a58">
        <Type type="cxxfe.ast.types.EnumType" uuid="50c5be2f-1dc6-47aa-8199-84df1348ce9d"/>
        <Name>FT_LegacyProtocol</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="7690ce77-b98c-4472-878d-29fd6bc7d085">
          <Col>49</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="3dba0d30-15bc-4e46-bd36-84bd0a23f39d"/>
          <Line>138</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="839fca36-ea84-4690-be16-b7a3bfdf730c">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="b138142e-7b26-425b-bd38-900454b85328">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="bad68f82-2389-4ee6-b70c-c89b90c036aa"/>
          <Name>~ChannelConfig_spi</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="320a7408-5dc4-48b5-8a6e-1abe22bbec46">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="34b584e6-c287-45e2-b65a-cc30860b2955">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="383c1a10-8675-4430-b435-0ad85924628c">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="178c73a8-8b31-4222-9b96-15fedbdce769">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="965862e0-feba-4e90-8cec-cdc9bb4f0098"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="a4288f8f-73ec-4d2a-95b8-f00572ee7ad9"/>
          <Name>ChannelConfig_spi</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="8ee4cc57-2601-42de-8a14-a031b874660e">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d1c25695-b7c1-456d-b55a-4698a9c23c50">
              <definitionStatus>Unsupported</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="5461e3e0-b594-4ba6-b8f1-973c67c08304">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="7ed47e09-e475-4687-acfb-06e3821ec885">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="2ce5e46d-1350-4c0d-b0fd-3e1deef19d30"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="ed81e97d-c76d-4a44-aa28-96b42da1b37e"/>
          <Name>ChannelConfig_spi</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="34dd6b0a-3095-4b52-b9d2-0c9b7881d432">
            <cppPosition>2</cppPosition>
            <cppSignature>ChannelConfig_spi::ChannelConfig_spi(ChannelConfig_spi const &amp; input1)</cppSignature>
            <cppSignatureFcnType>void(*)(ChannelConfig_spi const &amp;)</cppSignatureFcnType>
            <description>clib.ftLib.SPI_ChannelConfig Constructor of C++ class ChannelConfig_spi.</description>
            <inputs type="mwAnnotation.Argument" uuid="c56e6158-1b5c-416b-a39e-e6f430ecb383">
              <cppPosition>1</cppPosition>
              <cppType>[ChannelConfig_spi]ConstRef</cppType>
              <isConstData>true</isConstData>
              <mwType>clib.ftLib.SPI_ChannelConfig</mwType>
              <name>input1</name>
              <validTypes>clib.ftLib.SPI_ChannelConfig</validTypes>
            </inputs>
            <name>ChannelConfig_spi</name>
            <ptKey>A/ChannelConfig_spi@[ChannelConfig_spi]ConstRef</ptKey>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d6bef00c-105e-431d-9184-bfa00bedfe02"/>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="466a6244-1294-421f-8590-8440d3e93790">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="4e797a91-fb46-484e-995d-530ee001c04a"/>
          <Name>ChannelConfig_spi</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="cc03c44b-d820-4ee9-ab57-261f46a31ee8">
            <cppPosition>2</cppPosition>
            <cppSignature>ChannelConfig_spi::ChannelConfig_spi()</cppSignature>
            <cppSignatureFcnType>void(*)()</cppSignatureFcnType>
            <description>clib.ftLib.SPI_ChannelConfig Constructor of C++ class ChannelConfig_spi.</description>
            <name>ChannelConfig_spi</name>
            <ptKey>A/ChannelConfig_spi</ptKey>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="bca49348-1262-42e3-882e-18edda3d5e94"/>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="521dc334-c095-4511-9d6f-6025380902d5">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="dcf20e3f-ce0b-40e2-b6f5-ff7fbf49a670">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="2ce5e46d-1350-4c0d-b0fd-3e1deef19d30"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="0a9303a8-023b-405d-bfba-36446378bcd5"/>
          <Name>operator=</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="d6726a1e-e122-4d29-b146-18376720e41a">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="067f5135-d502-48fd-abc1-6a9ab53ca05f">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="114ca831-c82b-4bd5-9783-be91a6b7d31b">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="ddf7a8db-e39e-4834-a856-7345034db8b8">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="965862e0-feba-4e90-8cec-cdc9bb4f0098"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="d66a53e7-72e2-419d-8f42-a87a555e6cc5"/>
          <Name>operator=</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="aaa2fd65-0272-4439-a8d2-ba05103787de">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="ea9f1a0c-f331-455b-bdf0-2129cb66f9c2">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="f4d5020d-1081-4705-86e2-1bafc1f4128b">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>ClockRate</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="81d5b249-6c7f-48dc-9c9d-ea0491a4fdcf">
            <cppPosition>1</cppPosition>
            <cppSignature>DWORD ChannelConfig_spi::ClockRate</cppSignature>
            <cppType>[unsigned long]</cppType>
            <description>uint32    Data member of C++ class ChannelConfig_spi.</description>
            <getterPTKey>DM/?get/ChannelConfig_spi/ClockRate</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint32</mwType>
            <setterPTKey>DM/?set/ChannelConfig_spi/ClockRate</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="7bc69a52-1d94-46ab-bb31-46c64df0af84"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1aa0c0c2-bf35-4568-aa21-2fe2c1e41f75">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
            <Line>115</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="c2a3c35b-ab0e-45c0-97c0-0694f2af5d4f">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fbb6196a-ecf1-4531-b9bd-6b3551bf4048"/>
          <Name>LatencyTimer</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="1c8233c5-87dc-4321-8a78-198f542c31b1">
            <cppPosition>2</cppPosition>
            <cppSignature>UCHAR ChannelConfig_spi::LatencyTimer</cppSignature>
            <cppType>[unsigned char]</cppType>
            <description>uint8    Data member of C++ class ChannelConfig_spi.</description>
            <getterPTKey>DM/?get/ChannelConfig_spi/LatencyTimer</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint8</mwType>
            <setterPTKey>DM/?set/ChannelConfig_spi/LatencyTimer</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint8</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="ed9ada58-b581-4e90-bc85-b3d81442ad67"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="f4333105-17c0-47fc-a205-1d6914b1eaf8">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
            <Line>116</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="525bdfb9-7519-40f4-b0c7-d4375b3b3dd0">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>configOptions</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="6c7d598d-b1be-4e94-8946-5fd7c9dda9b7">
            <cppPosition>3</cppPosition>
            <cppSignature>DWORD ChannelConfig_spi::configOptions</cppSignature>
            <cppType>[unsigned long]</cppType>
            <description>uint32    Data member of C++ class ChannelConfig_spi.</description>
            <getterPTKey>DM/?get/ChannelConfig_spi/configOptions</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint32</mwType>
            <setterPTKey>DM/?set/ChannelConfig_spi/configOptions</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="17f95efc-af20-48aa-b7ce-44fb4d9e547d"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="864ebb67-71e0-4569-8f71-58bc7860c4c0">
            <Col>8</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
            <Line>117</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="7af7ecbe-cdd6-4224-b39c-a45a6240731a">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>Pin</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="0862615f-feb2-4b2e-9728-bb583be9e653">
            <cppPosition>4</cppPosition>
            <cppSignature>DWORD ChannelConfig_spi::Pin</cppSignature>
            <cppType>[unsigned long]</cppType>
            <description>uint32    Data member of C++ class ChannelConfig_spi.</description>
            <getterPTKey>DM/?get/ChannelConfig_spi/Pin</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint32</mwType>
            <setterPTKey>DM/?set/ChannelConfig_spi/Pin</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="14659531-bd69-4716-b1d4-1f60cd60d066"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="b6c390d5-a909-4a89-84e9-7b3eee8fac11">
            <Col>9</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
            <Line>131</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="97936ee7-87af-4cf1-b4a5-9532bba70331">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="033480ff-3f67-4f22-9f9a-d5a548cd76e7"/>
          <Name>currentPinState</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="1f2a1558-9cab-4b27-8bd8-d85c569ac5de">
            <cppPosition>5</cppPosition>
            <cppSignature>USHORT ChannelConfig_spi::currentPinState</cppSignature>
            <cppType>[unsigned short]</cppType>
            <description>uint16    Data member of C++ class ChannelConfig_spi.</description>
            <getterPTKey>DM/?get/ChannelConfig_spi/currentPinState</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>uint16</mwType>
            <setterPTKey>DM/?set/ChannelConfig_spi/currentPinState</setterPTKey>
            <storage>Value</storage>
            <validTypes>uint16</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="af965516-0564-4277-97df-78d39918221c"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="68ece667-1b37-4ca1-9b45-66437a83645a">
            <Col>10</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
            <Line>135</Line>
          </DefPos>
        </Members>
        <Name>ChannelConfig_spi</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="1373cfb6-834b-4db6-bc74-bed815f41556">
          <deallocatorPTKey>D/ChannelConfig_spi</deallocatorPTKey>
          <description>clib.ftLib.SPI_ChannelConfig    Representation of C++ class ChannelConfig_spi.</description>
          <isAssignable>true</isAssignable>
          <isDestructible>true</isDestructible>
          <name>clib.ftLib.SPI_ChannelConfig</name>
          <needArray>true</needArray>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="a12cfa5b-29dd-44ba-a9dd-75ea7c3e4abc"/>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="1b191efa-009f-4a46-9703-fb2ea86f3400">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="1518a1f2-6cb8-4640-8b96-fc179c00ca46">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="6beb9aa4-e380-4eb5-a7b4-279db25f8e44"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="eaf22b39-fc3b-4e68-b579-8e429c28e14b">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>113</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="bad68f82-2389-4ee6-b70c-c89b90c036aa">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="a4288f8f-73ec-4d2a-95b8-f00572ee7ad9">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="965862e0-feba-4e90-8cec-cdc9bb4f0098"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="965862e0-feba-4e90-8cec-cdc9bb4f0098">
        <Type type="cxxfe.ast.types.StructType" uuid="839fca36-ea84-4690-be16-b7a3bfdf730c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ed81e97d-c76d-4a44-aa28-96b42da1b37e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="2ce5e46d-1350-4c0d-b0fd-3e1deef19d30"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="2ce5e46d-1350-4c0d-b0fd-3e1deef19d30">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="2c14647c-f82a-405d-88b9-4948b52bed29"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="2c14647c-f82a-405d-88b9-4948b52bed29">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="839fca36-ea84-4690-be16-b7a3bfdf730c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4e797a91-fb46-484e-995d-530ee001c04a">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0a9303a8-023b-405d-bfba-36446378bcd5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="2ce5e46d-1350-4c0d-b0fd-3e1deef19d30"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="a0205fef-c86e-41c3-966e-6f62a723e785"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="a0205fef-c86e-41c3-966e-6f62a723e785">
        <Type type="cxxfe.ast.types.StructType" uuid="839fca36-ea84-4690-be16-b7a3bfdf730c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d66a53e7-72e2-419d-8f42-a87a555e6cc5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="965862e0-feba-4e90-8cec-cdc9bb4f0098"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="a0205fef-c86e-41c3-966e-6f62a723e785"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="60a1a947-3ee8-4fa8-97f1-e87a75a9c28b">
        <Type type="cxxfe.ast.types.StructType" uuid="839fca36-ea84-4690-be16-b7a3bfdf730c"/>
        <Name>SPI_ChannelConfig</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="1975643a-1a6b-4b00-b7ec-ce6c0acf2b53">
          <Col>2</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>137</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.StructType" uuid="e6121a5b-067d-42cd-83bc-79685cbc11ad">
        <Linkage>ExternalCXX</Linkage>
        <Methods type="cxxfe.ast.types.Method" uuid="93ebd7df-d33f-43ba-afbc-bcff0ea735c4">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Destructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="f6b2bc77-f716-42d0-930c-2b3d0e8e2764"/>
          <Name>~ChannelContext_spi</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="45c0e26f-18d8-419d-9b58-cdd84346b344">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="feb56f9e-c840-4a67-a7cd-d872c7472091">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="d22af958-29a7-464b-a075-e6d8f206ca2b">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="40bbe2fa-365a-4e4e-97c6-f1b5abf0f432">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="8953e4d8-115d-4607-b185-14605ff6561b"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="7059d229-a6f4-451d-b535-31a7c234e69d"/>
          <Name>ChannelContext_spi</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="7a94ba01-fac9-4c0b-a832-d98cb249b78a">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="81731538-2d8d-44c2-b51e-118b4ad33317">
              <definitionStatus>Unsupported</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="6125f328-d438-4370-9fc0-ccf1773400c1">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="2e707803-9999-4377-9161-fd22218f1116">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="aef0b240-da4b-4fba-ae0b-cd1741d25797"/>
          </Params>
          <SpecialKind>CopyConstructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="f59b18b3-f12c-44dc-8650-d3f76dde1fed"/>
          <Name>ChannelContext_spi</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="3e6d3f42-24f7-4179-ad02-4d5a19a658e5">
            <cppPosition>2</cppPosition>
            <cppSignature>ChannelContext_spi::ChannelContext_spi(ChannelContext_spi const &amp; input1)</cppSignature>
            <cppSignatureFcnType>void(*)(ChannelContext_spi const &amp;)</cppSignatureFcnType>
            <description>clib.ftLib.SPI_ChannelContext Constructor of C++ class ChannelContext_spi.</description>
            <inputs type="mwAnnotation.Argument" uuid="fbebaba1-a4df-4918-8f38-31697349b48e">
              <cppPosition>1</cppPosition>
              <cppType>[ChannelContext_spi]ConstRef</cppType>
              <isConstData>true</isConstData>
              <mwType>clib.ftLib.SPI_ChannelContext</mwType>
              <name>input1</name>
              <validTypes>clib.ftLib.SPI_ChannelContext</validTypes>
            </inputs>
            <name>ChannelContext_spi</name>
            <ptKey>A/ChannelContext_spi@[ChannelContext_spi]ConstRef</ptKey>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="04880a72-bcfb-449a-ada0-6d0af2a6f09b"/>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="b458ed8f-3d16-4fa0-9cbe-5b4c66799521">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <SpecialKind>Constructor</SpecialKind>
          <Type type="cxxfe.ast.types.FunctionType" uuid="09606165-19d8-4ac7-8332-7dd5d9cc69a5"/>
          <Name>ChannelContext_spi</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="403a94d9-3b3e-4a52-9420-52d40bb9145f">
            <cppPosition>2</cppPosition>
            <cppSignature>ChannelContext_spi::ChannelContext_spi()</cppSignature>
            <cppSignatureFcnType>void(*)()</cppSignatureFcnType>
            <description>clib.ftLib.SPI_ChannelContext Constructor of C++ class ChannelContext_spi.</description>
            <name>ChannelContext_spi</name>
            <ptKey>A/ChannelContext_spi</ptKey>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c7006088-6cd2-47f0-81e9-db696b16fe15"/>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="1c1738d9-f342-49ac-9e4f-581f7479a8e8">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="701867fc-a3bf-4bcd-9297-e33aa3392b1b">
            <Type type="cxxfe.ast.types.LValueReferenceType" uuid="aef0b240-da4b-4fba-ae0b-cd1741d25797"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="271b56cb-d677-49a1-9d42-211b76e482e3"/>
          <Name>operator=</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="2e7cebb5-11d3-4bd1-a432-a76a28883843">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="56d7c43c-3c7a-48bb-8b3b-a7b8bd2470f3">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <Methods type="cxxfe.ast.types.Method" uuid="292ec658-6e04-47c8-8b75-cf5a47b9641e">
          <IsCompilerGenerated>true</IsCompilerGenerated>
          <IsInline>true</IsInline>
          <Params type="cxxfe.ast.Variable" uuid="f6fb65ec-9557-48cb-a96e-8fe228ab48fc">
            <Type type="cxxfe.ast.types.RValueReferenceType" uuid="8953e4d8-115d-4607-b185-14605ff6561b"/>
          </Params>
          <SpecialKind>Operator</SpecialKind>
          <Linkage>ExternalCXX</Linkage>
          <Type type="cxxfe.ast.types.FunctionType" uuid="54f0a480-7feb-4754-8ecc-4d35753ceca2"/>
          <Name>operator=</Name>
          <Annotations type="mwAnnotation.FunctionAnnotation" uuid="bdeda313-6079-4204-84d8-888e631e76ae">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="4ea0d67a-c4ca-4669-9d4d-9e99c3dd051e">
              <definitionStatus>Inaccessible</definitionStatus>
            </integrationStatus>
          </Annotations>
        </Methods>
        <IsPOD>true</IsPOD>
        <IsStandardLayout>true</IsStandardLayout>
        <Members type="cxxfe.ast.types.Member" uuid="2cfe8695-1de5-4acc-8829-ccc40bacbce8">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
          <Name>handle</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="0bdf368f-5632-4794-81cb-86b5f4f79dfe">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="9b50fc51-e8e7-4737-b6e1-a28ad0cfd6dd">
              <definitionStatus>Unsupported</definitionStatus>
            </integrationStatus>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="2697558c-ec77-408c-9674-cc00d274d17e">
            <Col>14</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
            <Line>143</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="1b05b28a-0799-47ad-836f-86ff2667150b">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.TypedefType" uuid="60a1a947-3ee8-4fa8-97f1-e87a75a9c28b"/>
          <Name>config</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="4c200ee3-846d-4221-a9c2-3c46e81ecc31">
            <cppPosition>2</cppPosition>
            <cppSignature>SPI_ChannelConfig ChannelContext_spi::config</cppSignature>
            <cppType>[ChannelConfig_spi]</cppType>
            <description>clib.ftLib.SPI_ChannelConfig    Data member of C++ class ChannelContext_spi.</description>
            <getterPTKey>DM/?get/ChannelContext_spi/config</getterPTKey>
            <isSettable>true</isSettable>
            <mwType>clib.ftLib.SPI_ChannelConfig</mwType>
            <setterPTKey>DM/?set/ChannelContext_spi/config</setterPTKey>
            <storage>Value</storage>
            <validTypes>clib.ftLib.SPI_ChannelConfig</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="fa3bac96-8ef5-42db-98c4-ad3e55f1f40b"/>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="4f82eafd-bdf0-47fe-bd08-7460d30df964">
            <Col>20</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
            <Line>144</Line>
          </DefPos>
        </Members>
        <Members type="cxxfe.ast.types.Member" uuid="04438e1e-a845-4593-8885-8234feac33d4">
          <Access>Public</Access>
          <Type type="cxxfe.ast.types.PointerType" uuid="db2bc29e-4356-41cd-b312-59dd35d676ff"/>
          <Name>next</Name>
          <Annotations type="mwAnnotation.VariableAnnotation" uuid="ea4aea72-cce0-4285-8918-88fecb7102de">
            <cppPosition>3</cppPosition>
            <cppSignature>ChannelContext_spi * ChannelContext_spi::next</cppSignature>
            <cppType>[ChannelContext_spi]Ptr</cppType>
            <description>clib.ftLib.SPI_ChannelContext    Data member of C++ class ChannelContext_spi.</description>
            <getterPTKey>DM/?get/ChannelContext_spi/next</getterPTKey>
            <mwType>clib.ftLib.SPI_ChannelContext</mwType>
            <setterPTKey>DM/?set/ChannelContext_spi/next</setterPTKey>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.SPI_ChannelContext</validTypes>
            <validTypes>clib.array.ftLib.SPI_ChannelContext</validTypes>
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="7c604fea-d965-4bb3-890a-a9c91fc8b2c2">
              <definitionStatus>PartiallySpecified</definitionStatus>
            </integrationStatus>
          </Annotations>
          <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d6698a89-921e-40af-b7b7-4beae8e60247">
            <Col>29</Col>
            <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
            <Line>145</Line>
          </DefPos>
        </Members>
        <Name>ChannelContext_spi</Name>
        <Annotations type="mwAnnotation.ClassAnnotation" uuid="046ec7b3-ae7c-4544-9d5a-50d8f39b6bde">
          <deallocatorPTKey>D/ChannelContext_spi</deallocatorPTKey>
          <description>clib.ftLib.SPI_ChannelContext    Representation of C++ class ChannelContext_spi.</description>
          <isAssignable>true</isAssignable>
          <isDestructible>true</isDestructible>
          <name>clib.ftLib.SPI_ChannelContext</name>
          <needArray>true</needArray>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="2fdcbd0c-582d-445c-ac27-f517c1171843"/>
        </Annotations>
        <Scope type="cxxfe.ast.Scope" uuid="c37a80f4-8c7c-4f3d-81a5-279b4141790d">
          <Annotations type="mwAnnotation.ScopeAnnotation" uuid="1fda1f0c-0119-49db-aa0c-54df0cb46017">
            <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="de9246b5-c646-4d8f-9d5a-86b2a065ae46"/>
          </Annotations>
        </Scope>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="a8cfc43a-c528-4770-ba9c-ee29db984e4d">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>141</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="db2bc29e-4356-41cd-b312-59dd35d676ff">
        <Type type="cxxfe.ast.types.StructType" uuid="e6121a5b-067d-42cd-83bc-79685cbc11ad"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f6b2bc77-f716-42d0-930c-2b3d0e8e2764">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="7059d229-a6f4-451d-b535-31a7c234e69d">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="8953e4d8-115d-4607-b185-14605ff6561b"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.RValueReferenceType" uuid="8953e4d8-115d-4607-b185-14605ff6561b">
        <Type type="cxxfe.ast.types.StructType" uuid="e6121a5b-067d-42cd-83bc-79685cbc11ad"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f59b18b3-f12c-44dc-8650-d3f76dde1fed">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="aef0b240-da4b-4fba-ae0b-cd1741d25797"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="aef0b240-da4b-4fba-ae0b-cd1741d25797">
        <Type type="cxxfe.ast.types.QualifiedType" uuid="18cb7a09-fcf6-47fd-ba86-745204acf14e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.QualifiedType" uuid="18cb7a09-fcf6-47fd-ba86-745204acf14e">
        <IsConst>true</IsConst>
        <Type type="cxxfe.ast.types.StructType" uuid="e6121a5b-067d-42cd-83bc-79685cbc11ad"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="09606165-19d8-4ac7-8332-7dd5d9cc69a5">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="271b56cb-d677-49a1-9d42-211b76e482e3">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.LValueReferenceType" uuid="aef0b240-da4b-4fba-ae0b-cd1741d25797"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="0a8f1817-0fe7-4caf-a6c2-52bc1166bd2e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.LValueReferenceType" uuid="0a8f1817-0fe7-4caf-a6c2-52bc1166bd2e">
        <Type type="cxxfe.ast.types.StructType" uuid="e6121a5b-067d-42cd-83bc-79685cbc11ad"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="54f0a480-7feb-4754-8ecc-4d35753ceca2">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.RValueReferenceType" uuid="8953e4d8-115d-4607-b185-14605ff6561b"/>
        <RetType type="cxxfe.ast.types.LValueReferenceType" uuid="0a8f1817-0fe7-4caf-a6c2-52bc1166bd2e"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.TypedefType" uuid="b0dfb87b-e516-48d3-be1a-57e7a6ef9005">
        <Type type="cxxfe.ast.types.StructType" uuid="e6121a5b-067d-42cd-83bc-79685cbc11ad"/>
        <Name>SPI_ChannelContext</Name>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="d1ed4baf-775c-42c7-b40a-d2c37c1d8790">
          <Col>2</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>146</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.Variable" uuid="93f5e06b-e887-495e-a2ff-f19f33484bfc">
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.TypedefType" uuid="bea86721-abbf-4265-ad2e-4a4a5e6ed61f"/>
        <Name>hdll_d2xx</Name>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="579b5acb-2b1d-439f-ac3e-5fa916aca29d">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>241</Line>
        </DeclPos>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="e54b1f5b-a66a-46b4-9b68-833061ac5232">
          <Col>16</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>241</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.Variable" uuid="78b4ae24-7109-49c5-9178-6119ec78be35">
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.TypedefType" uuid="73e1c926-c74f-474e-be77-4bed77bae7d2"/>
        <Name>varFunctionPtrLst</Name>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="ef16ec3a-5cb3-4aa0-bbe6-6866d0ed5936">
          <Col>28</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>246</Line>
        </DeclPos>
        <DefPos type="cxxfe.ast.source.SourcePosition" uuid="3e868eb9-266c-4ab7-a412-b6745d6b6890">
          <Col>28</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>246</Line>
        </DefPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="7e61a0fc-04dc-4b73-b8f5-4a24fb65f870">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.IntegerType" uuid="0effd3cf-1b32-4070-b93d-23eca1246545"/>
        <RetType type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="22d50673-a8a2-4d98-9b4b-c55b61766738">
        <IsCompilerGenerated>true</IsCompilerGenerated>
        <Params type="cxxfe.ast.Variable" uuid="7b16cf6c-ef1e-4cb2-922e-308f6a86187f">
          <Type type="cxxfe.ast.types.IntegerType" uuid="0effd3cf-1b32-4070-b93d-23eca1246545"/>
        </Params>
        <SpecialKind>Operator</SpecialKind>
        <Linkage>ExternalCXX</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="7e61a0fc-04dc-4b73-b8f5-4a24fb65f870"/>
        <Name>operator new</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ad4447b3-fa6e-4e49-a4fc-c2cae58bbd07">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c533df9e-f9e8-4a38-9542-8675b3b08c5f">
            <definitionStatus>Inaccessible</definitionStatus>
          </integrationStatus>
        </Annotations>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="01976f2b-0565-43c4-94e8-c06039496656">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="71cfea1a-3987-4c08-b4c5-a4d9fdfc5531">
        <IsCompilerGenerated>true</IsCompilerGenerated>
        <Params type="cxxfe.ast.Variable" uuid="90a76f39-0b41-4c52-9379-84b4e58e1593">
          <Type type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
        </Params>
        <SpecialKind>Operator</SpecialKind>
        <Linkage>ExternalCXX</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="01976f2b-0565-43c4-94e8-c06039496656"/>
        <Name>operator delete</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ca998ebd-4b3f-4928-b477-79d2d38340f5">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="0afd2c28-c371-42e9-9162-83ce124d701b">
            <definitionStatus>Inaccessible</definitionStatus>
          </integrationStatus>
        </Annotations>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="7cd01d74-d96c-4a4a-87dd-fb71981740b6">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
        <ParamTypes type="cxxfe.ast.types.IntegerType" uuid="0effd3cf-1b32-4070-b93d-23eca1246545"/>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="2fd78adf-02c2-4d0f-914b-3e27bc775797">
        <IsCompilerGenerated>true</IsCompilerGenerated>
        <Params type="cxxfe.ast.Variable" uuid="30539d0d-f47a-4fe8-9fe5-38e4bda1b547">
          <Type type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="9b904bbb-9805-4742-9ff9-053bdb81549c">
          <Type type="cxxfe.ast.types.IntegerType" uuid="0effd3cf-1b32-4070-b93d-23eca1246545"/>
        </Params>
        <SpecialKind>Operator</SpecialKind>
        <Linkage>ExternalCXX</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="7cd01d74-d96c-4a4a-87dd-fb71981740b6"/>
        <Name>operator delete</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="946ed241-8f6a-4993-820d-857485bdac1d">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="28edabaf-106e-4b5e-b9e8-7d54786a61cf">
            <definitionStatus>Inaccessible</definitionStatus>
          </integrationStatus>
        </Annotations>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="86d28530-728b-41aa-afe1-2b79a79383c3">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="861f976f-4001-4228-9a15-f54923b627c0">
        <Comments>/** @noop FT_CreateDeviceInfoList
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function builds a device information list and returns the number of D2XX devices connected to the
	 * system. The list contains information about both unopen and open devices.
	 * @param lpdwNumDevs Pointer to unsigned long to store the number of devices connected.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * An application can use this function to get the number of devices attached to the system. It can then
	 * allocate space for the device information list and retrieve the list using FT_GetDeviceInfoList or
	 * FT_GetDeviceInfoDetail.
	 * @n If the devices connected to the system change, the device info list will not be updated until
	 * FT_CreateDeviceInfoList is called again. 
	 * @see FT_GetDeviceInfoList
	 * @see FT_GetDeviceInfoDetail
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="eb1b3128-6db9-4d60-ad58-d9909cdc9a21">
          <Comments>/** @noop FT_CreateDeviceInfoList
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function builds a device information list and returns the number of D2XX devices connected to the
	 * system. The list contains information about both unopen and open devices.
	 * @param lpdwNumDevs Pointer to unsigned long to store the number of devices connected.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * An application can use this function to get the number of devices attached to the system. It can then
	 * allocate space for the device information list and retrieve the list using FT_GetDeviceInfoList or
	 * FT_GetDeviceInfoDetail.
	 * @n If the devices connected to the system change, the device info list will not be updated until
	 * FT_CreateDeviceInfoList is called again. 
	 * @see FT_GetDeviceInfoList
	 * @see FT_GetDeviceInfoDetail
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwNumDevs</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="86d28530-728b-41aa-afe1-2b79a79383c3"/>
        <Name>FT_CreateDeviceInfoList</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="548bac0e-6e33-4b5b-adcd-0904a4639c66">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="8aa14578-0a16-43d6-b739-f7e2f184344c">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="547f6b3f-3a0e-4088-b10d-9494b54ebc21">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>453</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c3d341c9-21f8-433f-a90a-a1aa2bbfdf62">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c5b4bb0a-84ac-4781-b2e3-91df74117ae8"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="ad51da4a-62df-4209-9e50-9c7fa221b0c5">
        <Comments>/** @noop FT_GetDeviceInfoList
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns a device information list and the number of D2XX devices in the list.
	 * @param *pDest Pointer to an array of FT_DEVICE_LIST_INFO_NODE structures.
	 * @param lpdwNumDevs Pointer to the number of elements in the array.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the Flags
	 * parameter of the FT_DEVICE_LIST_INFO_NODE will indicate that the device is open, but other fields will
	 * be unpopulated.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n The array of FT_DEVICE_LIST_INFO_NODES contains all available data on each device. The structure of
	 * FT_DEVICE_LIST_INFO_NODES is given in the Appendix. The storage for the list must be allocated by
	 * the application. The number of devices returned by FT_CreateDeviceInfoList can be used to do this.
	 * When programming in Visual Basic, LabVIEW or similar languages, FT_GetDeviceInfoDetail may be
	 * required instead of this function.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="c720d924-4988-4537-8657-d7562e1fa757">
          <Comments>/** @noop FT_GetDeviceInfoList
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns a device information list and the number of D2XX devices in the list.
	 * @param *pDest Pointer to an array of FT_DEVICE_LIST_INFO_NODE structures.
	 * @param lpdwNumDevs Pointer to the number of elements in the array.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the Flags
	 * parameter of the FT_DEVICE_LIST_INFO_NODE will indicate that the device is open, but other fields will
	 * be unpopulated.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n The array of FT_DEVICE_LIST_INFO_NODES contains all available data on each device. The structure of
	 * FT_DEVICE_LIST_INFO_NODES is given in the Appendix. The storage for the list must be allocated by
	 * the application. The number of devices returned by FT_CreateDeviceInfoList can be used to do this.
	 * When programming in Visual Basic, LabVIEW or similar languages, FT_GetDeviceInfoDetail may be
	 * required instead of this function.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="c5b4bb0a-84ac-4781-b2e3-91df74117ae8"/>
          <Name>pDest</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="0106a9bb-cff3-4150-81ef-1ba90bb095d1">
          <Comments>/** @noop FT_GetDeviceInfoList
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns a device information list and the number of D2XX devices in the list.
	 * @param *pDest Pointer to an array of FT_DEVICE_LIST_INFO_NODE structures.
	 * @param lpdwNumDevs Pointer to the number of elements in the array.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the Flags
	 * parameter of the FT_DEVICE_LIST_INFO_NODE will indicate that the device is open, but other fields will
	 * be unpopulated.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n The array of FT_DEVICE_LIST_INFO_NODES contains all available data on each device. The structure of
	 * FT_DEVICE_LIST_INFO_NODES is given in the Appendix. The storage for the list must be allocated by
	 * the application. The number of devices returned by FT_CreateDeviceInfoList can be used to do this.
	 * When programming in Visual Basic, LabVIEW or similar languages, FT_GetDeviceInfoDetail may be
	 * required instead of this function.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwNumDevs</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="c3d341c9-21f8-433f-a90a-a1aa2bbfdf62"/>
        <Name>FT_GetDeviceInfoList</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="80448b12-2a52-4c65-89f9-ed1453ad991c">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="4acfe781-1017-4654-bce4-21e8be6eb4da">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="a9989b09-60b6-4208-b237-210ed00cd358">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>504</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d1eecc5b-70c9-4022-8cc5-e424d07c6f8c">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="b74ccab8-d8e7-4b5f-81df-23f6d3709a40">
        <Comments>/** @noop FT_GetDeviceInfoDetail
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns an entry from the device information list.
	 * @param dwIndex Index of the entry in the device info list.
	 * @param lpdwFlags Pointer to unsigned long to store the flag value.
	 * @param lpdwType Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param lpdwLocId Pointer to unsigned long to store the device location ID.
	 * @param lpSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param lpDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param *pftHandle Pointer to a variable of type FT_HANDLE where the handle will be stored.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * @n The index value is zero-based.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the lpdwFlags
	 * parameter will indicate that the device is open, but other fields will be unpopulated.
	 * To return the whole device info list as an array of FT_DEVICE_LIST_INFO_NODE structures, use
	 * FT_CreateDeviceInfoList.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="d455d802-5b2e-4649-a627-d4100ee75b6e">
          <Comments>/** @noop FT_GetDeviceInfoDetail
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns an entry from the device information list.
	 * @param dwIndex Index of the entry in the device info list.
	 * @param lpdwFlags Pointer to unsigned long to store the flag value.
	 * @param lpdwType Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param lpdwLocId Pointer to unsigned long to store the device location ID.
	 * @param lpSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param lpDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param *pftHandle Pointer to a variable of type FT_HANDLE where the handle will be stored.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * @n The index value is zero-based.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the lpdwFlags
	 * parameter will indicate that the device is open, but other fields will be unpopulated.
	 * To return the whole device info list as an array of FT_DEVICE_LIST_INFO_NODE structures, use
	 * FT_CreateDeviceInfoList.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwIndex</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d093cb4a-6281-4d76-bf79-e4a96ce15f9f">
          <Comments>/** @noop FT_GetDeviceInfoDetail
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns an entry from the device information list.
	 * @param dwIndex Index of the entry in the device info list.
	 * @param lpdwFlags Pointer to unsigned long to store the flag value.
	 * @param lpdwType Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param lpdwLocId Pointer to unsigned long to store the device location ID.
	 * @param lpSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param lpDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param *pftHandle Pointer to a variable of type FT_HANDLE where the handle will be stored.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * @n The index value is zero-based.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the lpdwFlags
	 * parameter will indicate that the device is open, but other fields will be unpopulated.
	 * To return the whole device info list as an array of FT_DEVICE_LIST_INFO_NODE structures, use
	 * FT_CreateDeviceInfoList.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwFlags</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="1032d50a-fc4d-476c-828b-ec8e142208a6">
          <Comments>/** @noop FT_GetDeviceInfoDetail
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns an entry from the device information list.
	 * @param dwIndex Index of the entry in the device info list.
	 * @param lpdwFlags Pointer to unsigned long to store the flag value.
	 * @param lpdwType Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param lpdwLocId Pointer to unsigned long to store the device location ID.
	 * @param lpSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param lpDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param *pftHandle Pointer to a variable of type FT_HANDLE where the handle will be stored.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * @n The index value is zero-based.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the lpdwFlags
	 * parameter will indicate that the device is open, but other fields will be unpopulated.
	 * To return the whole device info list as an array of FT_DEVICE_LIST_INFO_NODE structures, use
	 * FT_CreateDeviceInfoList.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwType</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="41142776-b527-4242-a94e-1e01d067b686">
          <Comments>/** @noop FT_GetDeviceInfoDetail
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns an entry from the device information list.
	 * @param dwIndex Index of the entry in the device info list.
	 * @param lpdwFlags Pointer to unsigned long to store the flag value.
	 * @param lpdwType Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param lpdwLocId Pointer to unsigned long to store the device location ID.
	 * @param lpSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param lpDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param *pftHandle Pointer to a variable of type FT_HANDLE where the handle will be stored.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * @n The index value is zero-based.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the lpdwFlags
	 * parameter will indicate that the device is open, but other fields will be unpopulated.
	 * To return the whole device info list as an array of FT_DEVICE_LIST_INFO_NODE structures, use
	 * FT_CreateDeviceInfoList.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwID</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="16f848d1-079f-4788-9c49-8baf44514fcb">
          <Comments>/** @noop FT_GetDeviceInfoDetail
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns an entry from the device information list.
	 * @param dwIndex Index of the entry in the device info list.
	 * @param lpdwFlags Pointer to unsigned long to store the flag value.
	 * @param lpdwType Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param lpdwLocId Pointer to unsigned long to store the device location ID.
	 * @param lpSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param lpDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param *pftHandle Pointer to a variable of type FT_HANDLE where the handle will be stored.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * @n The index value is zero-based.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the lpdwFlags
	 * parameter will indicate that the device is open, but other fields will be unpopulated.
	 * To return the whole device info list as an array of FT_DEVICE_LIST_INFO_NODE structures, use
	 * FT_CreateDeviceInfoList.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwLocId</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="24fb1b90-fa6c-4fb2-8ab3-1806502fe646">
          <Comments>/** @noop FT_GetDeviceInfoDetail
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns an entry from the device information list.
	 * @param dwIndex Index of the entry in the device info list.
	 * @param lpdwFlags Pointer to unsigned long to store the flag value.
	 * @param lpdwType Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param lpdwLocId Pointer to unsigned long to store the device location ID.
	 * @param lpSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param lpDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param *pftHandle Pointer to a variable of type FT_HANDLE where the handle will be stored.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * @n The index value is zero-based.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the lpdwFlags
	 * parameter will indicate that the device is open, but other fields will be unpopulated.
	 * To return the whole device info list as an array of FT_DEVICE_LIST_INFO_NODE structures, use
	 * FT_CreateDeviceInfoList.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
          <Name>lpSerialNumber</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="1c18bb44-e612-4eaf-ad6b-9b80441212b2">
          <Comments>/** @noop FT_GetDeviceInfoDetail
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns an entry from the device information list.
	 * @param dwIndex Index of the entry in the device info list.
	 * @param lpdwFlags Pointer to unsigned long to store the flag value.
	 * @param lpdwType Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param lpdwLocId Pointer to unsigned long to store the device location ID.
	 * @param lpSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param lpDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param *pftHandle Pointer to a variable of type FT_HANDLE where the handle will be stored.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * @n The index value is zero-based.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the lpdwFlags
	 * parameter will indicate that the device is open, but other fields will be unpopulated.
	 * To return the whole device info list as an array of FT_DEVICE_LIST_INFO_NODE structures, use
	 * FT_CreateDeviceInfoList.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
          <Name>lpDescription</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="e50d918e-8282-4fb9-8293-b3caea17497a">
          <Comments>/** @noop FT_GetDeviceInfoDetail
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function returns an entry from the device information list.
	 * @param dwIndex Index of the entry in the device info list.
	 * @param lpdwFlags Pointer to unsigned long to store the flag value.
	 * @param lpdwType Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param lpdwLocId Pointer to unsigned long to store the device location ID.
	 * @param lpSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param lpDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param *pftHandle Pointer to a variable of type FT_HANDLE where the handle will be stored.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function should only be called after calling FT_CreateDeviceInfoList. If the devices connected to the
	 * system change, the device info list will not be updated until FT_CreateDeviceInfoList is called again.
	 * @n The index value is zero-based.
	 * @n The flag value is a 4-byte bit map containing miscellaneous data as defined Appendix A - Type
	 * Definitions. Bit 0 (least significant bit) of this number indicates if the port is open (1) or closed (0). Bit 1
	 * indicates if the device is enumerated as a high-speed USB device (2) or a full-speed USB device (0). The
	 * remaining bits (2 - 31) are reserved.
	 * @n Location ID information is not returned for devices that are open when FT_CreateDeviceInfoList is called.
	 * Information is not available for devices which are open in other processes. In this case, the lpdwFlags
	 * parameter will indicate that the device is open, but other fields will be unpopulated.
	 * To return the whole device info list as an array of FT_DEVICE_LIST_INFO_NODE structures, use
	 * FT_CreateDeviceInfoList.
	 * @note Please note that Windows CE does not support location IDs. As such, the Location ID parameter in the 
	 * structure will be empty.
	 * @see FT_CreateDeviceInfoList
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
          <Name>pftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="d1eecc5b-70c9-4022-8cc5-e424d07c6f8c"/>
        <Name>FT_GetDeviceInfoDetail</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="4342eb83-9145-482a-9990-6827bf450e9f">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="146cdb74-29f2-496f-8bf4-dee6a0122fc0">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="09d765ac-eaa4-4924-a31e-b4b068a65cbd">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>544</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ef3dc01f-1e67-4895-88ed-9e53e1c12430">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="02459eb9-a617-459c-9c3e-efd5708a0a57">
        <Comments>/** @noop FT_ListDevices
	 * @par Summary
	 * Gets information concerning the devices currently connected. This function can return information such
	 * as the number of devices connected, the device serial number and device description strings, and the
	 * location IDs of connected devices.
	 * @param pvArg1 Meaning depends on dwFlags.
	 * @param pvArg2 Meaning depends on dwFlags.
	 * @param dwFlags Determines format of returned information.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function can be used in a number of ways to return different types of information. A more powerful
	 * way to get device information is to use the FT_CreateDeviceInfoList, FT_GetDeviceInfoList and
	 * FT_GetDeviceInfoDetail functions as they return all the available information on devices.
	 * In its simplest form, it can be used to return the number of devices currently connected. If
	 * FT_LIST_NUMBER_ONLY bit is set in dwFlags, the parameter pvArg1 is interpreted as a pointer to a
	 * DWORD location to store the number of devices currently connected.
	 * @n It can be used to return device information: if FT_OPEN_BY_SERIAL_NUMBER bit is set in dwFlags, the
	 * serial number string will be returned; if FT_OPEN_BY_DESCRIPTION bit is set in dwFlags, the product 
	 * description string will be returned; if FT_OPEN_BY_LOCATION bit is set in dwFlags, the Location ID will 
	 * be returned; if none of these bits is set, the serial number string will be returned by default.
	 * @n It can be used to return device string information for a single device. If FT_LIST_BY_INDEX and
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION bits are set in dwFlags, the parameter
	 * pvArg1 is interpreted as the index of the device, and the parameter pvArg2 is interpreted as a pointer to
	 * a buffer to contain the appropriate string. Indexes are zero-based, and the error code
	 * FT_DEVICE_NOT_FOUND is returned for an invalid index.
	 * @n It can be used to return device string information for all connected devices. If FT_LIST_ALL and
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION bits are set in dwFlags, the parameter
	 * pvArg1 is interpreted as a pointer to an array of pointers to buffers to contain the appropriate strings and
	 * the parameter pvArg2 is interpreted as a pointer to a DWORD location to store the number of devices
	 * currently connected. Note that, for pvArg1, the last entry in the array of pointers to buffers should be a
	 * NULL pointer so the array will contain one more location than the number of devices connected.
	 * @n The location ID of a device is returned if FT_LIST_BY_INDEX and FT_OPEN_BY_LOCATION bits are set in
	 * dwFlags. In this case the parameter pvArg1 is interpreted as the index of the device, and the parameter
	 * pvArg2 is interpreted as a pointer to a variable of type long to contain the location ID. Indexes are 
	 * zerobased, and the error code FT_DEVICE_NOT_FOUND is returned for an invalid index. Please note that
	 * Windows CE and Linux do not support location IDs.
	 * @n The location IDs of all connected devices are returned if FT_LIST_ALL and FT_OPEN_BY_LOCATION bits
	 * are set in dwFlags. In this case, the parameter pvArg1 is interpreted as a pointer to an array of variables
	 * of type long to contain the location IDs, and the parameter pvArg2 is interpreted as a pointer to a
	 * DWORD location to store the number of devices currently connected.
	 * @see FT_CreateDeviceInfoList
	 * @see FT_GetDeviceInfoList
	 * @see FT_GetDeviceInfoDetail
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="28ebc9e4-6807-48ac-88c6-1f161034f445">
          <Comments>/** @noop FT_ListDevices
	 * @par Summary
	 * Gets information concerning the devices currently connected. This function can return information such
	 * as the number of devices connected, the device serial number and device description strings, and the
	 * location IDs of connected devices.
	 * @param pvArg1 Meaning depends on dwFlags.
	 * @param pvArg2 Meaning depends on dwFlags.
	 * @param dwFlags Determines format of returned information.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function can be used in a number of ways to return different types of information. A more powerful
	 * way to get device information is to use the FT_CreateDeviceInfoList, FT_GetDeviceInfoList and
	 * FT_GetDeviceInfoDetail functions as they return all the available information on devices.
	 * In its simplest form, it can be used to return the number of devices currently connected. If
	 * FT_LIST_NUMBER_ONLY bit is set in dwFlags, the parameter pvArg1 is interpreted as a pointer to a
	 * DWORD location to store the number of devices currently connected.
	 * @n It can be used to return device information: if FT_OPEN_BY_SERIAL_NUMBER bit is set in dwFlags, the
	 * serial number string will be returned; if FT_OPEN_BY_DESCRIPTION bit is set in dwFlags, the product 
	 * description string will be returned; if FT_OPEN_BY_LOCATION bit is set in dwFlags, the Location ID will 
	 * be returned; if none of these bits is set, the serial number string will be returned by default.
	 * @n It can be used to return device string information for a single device. If FT_LIST_BY_INDEX and
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION bits are set in dwFlags, the parameter
	 * pvArg1 is interpreted as the index of the device, and the parameter pvArg2 is interpreted as a pointer to
	 * a buffer to contain the appropriate string. Indexes are zero-based, and the error code
	 * FT_DEVICE_NOT_FOUND is returned for an invalid index.
	 * @n It can be used to return device string information for all connected devices. If FT_LIST_ALL and
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION bits are set in dwFlags, the parameter
	 * pvArg1 is interpreted as a pointer to an array of pointers to buffers to contain the appropriate strings and
	 * the parameter pvArg2 is interpreted as a pointer to a DWORD location to store the number of devices
	 * currently connected. Note that, for pvArg1, the last entry in the array of pointers to buffers should be a
	 * NULL pointer so the array will contain one more location than the number of devices connected.
	 * @n The location ID of a device is returned if FT_LIST_BY_INDEX and FT_OPEN_BY_LOCATION bits are set in
	 * dwFlags. In this case the parameter pvArg1 is interpreted as the index of the device, and the parameter
	 * pvArg2 is interpreted as a pointer to a variable of type long to contain the location ID. Indexes are 
	 * zerobased, and the error code FT_DEVICE_NOT_FOUND is returned for an invalid index. Please note that
	 * Windows CE and Linux do not support location IDs.
	 * @n The location IDs of all connected devices are returned if FT_LIST_ALL and FT_OPEN_BY_LOCATION bits
	 * are set in dwFlags. In this case, the parameter pvArg1 is interpreted as a pointer to an array of variables
	 * of type long to contain the location IDs, and the parameter pvArg2 is interpreted as a pointer to a
	 * DWORD location to store the number of devices currently connected.
	 * @see FT_CreateDeviceInfoList
	 * @see FT_GetDeviceInfoList
	 * @see FT_GetDeviceInfoDetail
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d"/>
          <Name>pvArg1</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="a15c17ac-6bed-4451-9e8f-19252478aa0d">
          <Comments>/** @noop FT_ListDevices
	 * @par Summary
	 * Gets information concerning the devices currently connected. This function can return information such
	 * as the number of devices connected, the device serial number and device description strings, and the
	 * location IDs of connected devices.
	 * @param pvArg1 Meaning depends on dwFlags.
	 * @param pvArg2 Meaning depends on dwFlags.
	 * @param dwFlags Determines format of returned information.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function can be used in a number of ways to return different types of information. A more powerful
	 * way to get device information is to use the FT_CreateDeviceInfoList, FT_GetDeviceInfoList and
	 * FT_GetDeviceInfoDetail functions as they return all the available information on devices.
	 * In its simplest form, it can be used to return the number of devices currently connected. If
	 * FT_LIST_NUMBER_ONLY bit is set in dwFlags, the parameter pvArg1 is interpreted as a pointer to a
	 * DWORD location to store the number of devices currently connected.
	 * @n It can be used to return device information: if FT_OPEN_BY_SERIAL_NUMBER bit is set in dwFlags, the
	 * serial number string will be returned; if FT_OPEN_BY_DESCRIPTION bit is set in dwFlags, the product 
	 * description string will be returned; if FT_OPEN_BY_LOCATION bit is set in dwFlags, the Location ID will 
	 * be returned; if none of these bits is set, the serial number string will be returned by default.
	 * @n It can be used to return device string information for a single device. If FT_LIST_BY_INDEX and
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION bits are set in dwFlags, the parameter
	 * pvArg1 is interpreted as the index of the device, and the parameter pvArg2 is interpreted as a pointer to
	 * a buffer to contain the appropriate string. Indexes are zero-based, and the error code
	 * FT_DEVICE_NOT_FOUND is returned for an invalid index.
	 * @n It can be used to return device string information for all connected devices. If FT_LIST_ALL and
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION bits are set in dwFlags, the parameter
	 * pvArg1 is interpreted as a pointer to an array of pointers to buffers to contain the appropriate strings and
	 * the parameter pvArg2 is interpreted as a pointer to a DWORD location to store the number of devices
	 * currently connected. Note that, for pvArg1, the last entry in the array of pointers to buffers should be a
	 * NULL pointer so the array will contain one more location than the number of devices connected.
	 * @n The location ID of a device is returned if FT_LIST_BY_INDEX and FT_OPEN_BY_LOCATION bits are set in
	 * dwFlags. In this case the parameter pvArg1 is interpreted as the index of the device, and the parameter
	 * pvArg2 is interpreted as a pointer to a variable of type long to contain the location ID. Indexes are 
	 * zerobased, and the error code FT_DEVICE_NOT_FOUND is returned for an invalid index. Please note that
	 * Windows CE and Linux do not support location IDs.
	 * @n The location IDs of all connected devices are returned if FT_LIST_ALL and FT_OPEN_BY_LOCATION bits
	 * are set in dwFlags. In this case, the parameter pvArg1 is interpreted as a pointer to an array of variables
	 * of type long to contain the location IDs, and the parameter pvArg2 is interpreted as a pointer to a
	 * DWORD location to store the number of devices currently connected.
	 * @see FT_CreateDeviceInfoList
	 * @see FT_GetDeviceInfoList
	 * @see FT_GetDeviceInfoDetail
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d"/>
          <Name>pvArg2</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="ce788f15-82e9-45a9-82bb-478c41be6b15">
          <Comments>/** @noop FT_ListDevices
	 * @par Summary
	 * Gets information concerning the devices currently connected. This function can return information such
	 * as the number of devices connected, the device serial number and device description strings, and the
	 * location IDs of connected devices.
	 * @param pvArg1 Meaning depends on dwFlags.
	 * @param pvArg2 Meaning depends on dwFlags.
	 * @param dwFlags Determines format of returned information.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function can be used in a number of ways to return different types of information. A more powerful
	 * way to get device information is to use the FT_CreateDeviceInfoList, FT_GetDeviceInfoList and
	 * FT_GetDeviceInfoDetail functions as they return all the available information on devices.
	 * In its simplest form, it can be used to return the number of devices currently connected. If
	 * FT_LIST_NUMBER_ONLY bit is set in dwFlags, the parameter pvArg1 is interpreted as a pointer to a
	 * DWORD location to store the number of devices currently connected.
	 * @n It can be used to return device information: if FT_OPEN_BY_SERIAL_NUMBER bit is set in dwFlags, the
	 * serial number string will be returned; if FT_OPEN_BY_DESCRIPTION bit is set in dwFlags, the product 
	 * description string will be returned; if FT_OPEN_BY_LOCATION bit is set in dwFlags, the Location ID will 
	 * be returned; if none of these bits is set, the serial number string will be returned by default.
	 * @n It can be used to return device string information for a single device. If FT_LIST_BY_INDEX and
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION bits are set in dwFlags, the parameter
	 * pvArg1 is interpreted as the index of the device, and the parameter pvArg2 is interpreted as a pointer to
	 * a buffer to contain the appropriate string. Indexes are zero-based, and the error code
	 * FT_DEVICE_NOT_FOUND is returned for an invalid index.
	 * @n It can be used to return device string information for all connected devices. If FT_LIST_ALL and
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION bits are set in dwFlags, the parameter
	 * pvArg1 is interpreted as a pointer to an array of pointers to buffers to contain the appropriate strings and
	 * the parameter pvArg2 is interpreted as a pointer to a DWORD location to store the number of devices
	 * currently connected. Note that, for pvArg1, the last entry in the array of pointers to buffers should be a
	 * NULL pointer so the array will contain one more location than the number of devices connected.
	 * @n The location ID of a device is returned if FT_LIST_BY_INDEX and FT_OPEN_BY_LOCATION bits are set in
	 * dwFlags. In this case the parameter pvArg1 is interpreted as the index of the device, and the parameter
	 * pvArg2 is interpreted as a pointer to a variable of type long to contain the location ID. Indexes are 
	 * zerobased, and the error code FT_DEVICE_NOT_FOUND is returned for an invalid index. Please note that
	 * Windows CE and Linux do not support location IDs.
	 * @n The location IDs of all connected devices are returned if FT_LIST_ALL and FT_OPEN_BY_LOCATION bits
	 * are set in dwFlags. In this case, the parameter pvArg1 is interpreted as a pointer to an array of variables
	 * of type long to contain the location IDs, and the parameter pvArg2 is interpreted as a pointer to a
	 * DWORD location to store the number of devices currently connected.
	 * @see FT_CreateDeviceInfoList
	 * @see FT_GetDeviceInfoList
	 * @see FT_GetDeviceInfoDetail
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwFlags</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="ef3dc01f-1e67-4895-88ed-9e53e1c12430"/>
        <Name>FT_ListDevices</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="cdd7b37c-68f4-4ba6-9594-f19178300e27">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="fd5ef13e-0d81-4ad4-a28b-7974bb182e61">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="dbd9940d-e443-4f84-b526-24f447a7938d">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>600</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6fe541e7-391c-4d16-adb0-1ed2962326a9">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.IntegerType" uuid="3e9d02b1-ecf9-493f-82e0-a0e5b0718518"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="519790d8-029c-4f7e-8378-35fa1fee07d0">
        <Comments>/** @noop FT_Open
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Open the device and return a handle which will be used for subsequent accesses.
	 * @param deviceNumber Index of the device to open. Indices are 0 based.
	 * @param pHandle Pointer to a variable of type FT_HANDLE where the handle will be stored. This handle must 
	 * be used to access the device.
	 * @return
	 * FT_OK if successful, otherwise the return value is an FT error code. 
	 * @remarks
	 * Although this function can be used to open multiple devices by setting iDevice to 0, 1, 2 etc. there is no
	 * ability to open a specific device. To open named devices, use the function FT_OpenEx.
	 * @see FT_OpenEx.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="f66fe85c-7164-46a2-b55c-3d7cdc2ca0ae">
          <Comments>/** @noop FT_Open
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Open the device and return a handle which will be used for subsequent accesses.
	 * @param deviceNumber Index of the device to open. Indices are 0 based.
	 * @param pHandle Pointer to a variable of type FT_HANDLE where the handle will be stored. This handle must 
	 * be used to access the device.
	 * @return
	 * FT_OK if successful, otherwise the return value is an FT error code. 
	 * @remarks
	 * Although this function can be used to open multiple devices by setting iDevice to 0, 1, 2 etc. there is no
	 * ability to open a specific device. To open named devices, use the function FT_OpenEx.
	 * @see FT_OpenEx.
	 */</Comments>
          <Type type="cxxfe.ast.types.IntegerType" uuid="3e9d02b1-ecf9-493f-82e0-a0e5b0718518"/>
          <Name>deviceNumber</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="fd51ef45-9181-4ae4-8371-c5fbdc2297e9">
          <Comments>/** @noop FT_Open
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Open the device and return a handle which will be used for subsequent accesses.
	 * @param deviceNumber Index of the device to open. Indices are 0 based.
	 * @param pHandle Pointer to a variable of type FT_HANDLE where the handle will be stored. This handle must 
	 * be used to access the device.
	 * @return
	 * FT_OK if successful, otherwise the return value is an FT error code. 
	 * @remarks
	 * Although this function can be used to open multiple devices by setting iDevice to 0, 1, 2 etc. there is no
	 * ability to open a specific device. To open named devices, use the function FT_OpenEx.
	 * @see FT_OpenEx.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
          <Name>pHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="6fe541e7-391c-4d16-adb0-1ed2962326a9"/>
        <Name>FT_Open</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="93add24d-ed8b-448a-99b0-8b08844d080c">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="64c4fc4f-3a25-4610-a5d9-83feb8048064">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="3e725a09-c5a0-4a41-9c5d-8528ae62b625">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>624</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f7c8c9e5-9984-4311-ab21-2ff56abf420b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="3599bf17-8ee7-4455-9f01-65e8dca5554e">
        <Comments>/** @noop FT_OpenEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Open the specified device and return a handle that will be used for subsequent accesses. The device can
	 * be specified by its serial number, device description or location.
	 * @n This function can also be used to open multiple devices simultaneously. Multiple devices can be specified
	 * by serial number, device description or location ID (location information derived from the physical
	 * location of a device on USB). Location IDs for specific USB ports can be obtained using the utility
	 * USBView and are given in hexadecimal format. Location IDs for devices connected to a system can be
	 * obtained by calling FT_GetDeviceInfoList or FT_ListDevices with the appropriate flags.
	 * @param pvArg1 Pointer to an argument whose type depends on the value of dwFlags. 
	 * It is normally be interpreted as a pointer to a null terminated string.
	 * @param dwFlags FT_OPEN_BY_SERIAL_NUMBER, FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION.
	 * @param pHandle Pointer to a variable of type FT_HANDLE where the handle will be
	 * stored. This handle must be used to access the device.
	 * @returns 
	 * FT_OK if successful, otherwise the return value is an FT error code. 
	 * @remarks 
	 * The parameter specified in pvArg1 depends on dwFlags: if dwFlags is FT_OPEN_BY_SERIAL_NUMBER,
	 * pvArg1 is interpreted as a pointer to a null-terminated string that represents the serial number of the
	 * device; if dwFlags is FT_OPEN_BY_DESCRIPTION, pvArg1 is interpreted as a pointer to a nullterminated 
	 * string that represents the device description; if dwFlags is FT_OPEN_BY_LOCATION, pvArg1
	 * is interpreted as a long value that contains the location ID of the device. Please note that Windows CE
	 * and Linux do not support location IDs.
	 * @n ftHandle is a pointer to a variable of type FT_HANDLE where the handle is to be stored. This handle must
	 * be used to access the device.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="48ff17aa-ba61-4f91-b0c2-7a64ec3528b5">
          <Comments>/** @noop FT_OpenEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Open the specified device and return a handle that will be used for subsequent accesses. The device can
	 * be specified by its serial number, device description or location.
	 * @n This function can also be used to open multiple devices simultaneously. Multiple devices can be specified
	 * by serial number, device description or location ID (location information derived from the physical
	 * location of a device on USB). Location IDs for specific USB ports can be obtained using the utility
	 * USBView and are given in hexadecimal format. Location IDs for devices connected to a system can be
	 * obtained by calling FT_GetDeviceInfoList or FT_ListDevices with the appropriate flags.
	 * @param pvArg1 Pointer to an argument whose type depends on the value of dwFlags. 
	 * It is normally be interpreted as a pointer to a null terminated string.
	 * @param dwFlags FT_OPEN_BY_SERIAL_NUMBER, FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION.
	 * @param pHandle Pointer to a variable of type FT_HANDLE where the handle will be
	 * stored. This handle must be used to access the device.
	 * @returns 
	 * FT_OK if successful, otherwise the return value is an FT error code. 
	 * @remarks 
	 * The parameter specified in pvArg1 depends on dwFlags: if dwFlags is FT_OPEN_BY_SERIAL_NUMBER,
	 * pvArg1 is interpreted as a pointer to a null-terminated string that represents the serial number of the
	 * device; if dwFlags is FT_OPEN_BY_DESCRIPTION, pvArg1 is interpreted as a pointer to a nullterminated 
	 * string that represents the device description; if dwFlags is FT_OPEN_BY_LOCATION, pvArg1
	 * is interpreted as a long value that contains the location ID of the device. Please note that Windows CE
	 * and Linux do not support location IDs.
	 * @n ftHandle is a pointer to a variable of type FT_HANDLE where the handle is to be stored. This handle must
	 * be used to access the device.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d"/>
          <Name>pvArg1</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="ec0b3c1e-ca9d-48a9-be3a-1f9f53c34057">
          <Comments>/** @noop FT_OpenEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Open the specified device and return a handle that will be used for subsequent accesses. The device can
	 * be specified by its serial number, device description or location.
	 * @n This function can also be used to open multiple devices simultaneously. Multiple devices can be specified
	 * by serial number, device description or location ID (location information derived from the physical
	 * location of a device on USB). Location IDs for specific USB ports can be obtained using the utility
	 * USBView and are given in hexadecimal format. Location IDs for devices connected to a system can be
	 * obtained by calling FT_GetDeviceInfoList or FT_ListDevices with the appropriate flags.
	 * @param pvArg1 Pointer to an argument whose type depends on the value of dwFlags. 
	 * It is normally be interpreted as a pointer to a null terminated string.
	 * @param dwFlags FT_OPEN_BY_SERIAL_NUMBER, FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION.
	 * @param pHandle Pointer to a variable of type FT_HANDLE where the handle will be
	 * stored. This handle must be used to access the device.
	 * @returns 
	 * FT_OK if successful, otherwise the return value is an FT error code. 
	 * @remarks 
	 * The parameter specified in pvArg1 depends on dwFlags: if dwFlags is FT_OPEN_BY_SERIAL_NUMBER,
	 * pvArg1 is interpreted as a pointer to a null-terminated string that represents the serial number of the
	 * device; if dwFlags is FT_OPEN_BY_DESCRIPTION, pvArg1 is interpreted as a pointer to a nullterminated 
	 * string that represents the device description; if dwFlags is FT_OPEN_BY_LOCATION, pvArg1
	 * is interpreted as a long value that contains the location ID of the device. Please note that Windows CE
	 * and Linux do not support location IDs.
	 * @n ftHandle is a pointer to a variable of type FT_HANDLE where the handle is to be stored. This handle must
	 * be used to access the device.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwFlags</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="21ae2409-b1a0-4052-9fa3-9fe94837f485">
          <Comments>/** @noop FT_OpenEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Open the specified device and return a handle that will be used for subsequent accesses. The device can
	 * be specified by its serial number, device description or location.
	 * @n This function can also be used to open multiple devices simultaneously. Multiple devices can be specified
	 * by serial number, device description or location ID (location information derived from the physical
	 * location of a device on USB). Location IDs for specific USB ports can be obtained using the utility
	 * USBView and are given in hexadecimal format. Location IDs for devices connected to a system can be
	 * obtained by calling FT_GetDeviceInfoList or FT_ListDevices with the appropriate flags.
	 * @param pvArg1 Pointer to an argument whose type depends on the value of dwFlags. 
	 * It is normally be interpreted as a pointer to a null terminated string.
	 * @param dwFlags FT_OPEN_BY_SERIAL_NUMBER, FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION.
	 * @param pHandle Pointer to a variable of type FT_HANDLE where the handle will be
	 * stored. This handle must be used to access the device.
	 * @returns 
	 * FT_OK if successful, otherwise the return value is an FT error code. 
	 * @remarks 
	 * The parameter specified in pvArg1 depends on dwFlags: if dwFlags is FT_OPEN_BY_SERIAL_NUMBER,
	 * pvArg1 is interpreted as a pointer to a null-terminated string that represents the serial number of the
	 * device; if dwFlags is FT_OPEN_BY_DESCRIPTION, pvArg1 is interpreted as a pointer to a nullterminated 
	 * string that represents the device description; if dwFlags is FT_OPEN_BY_LOCATION, pvArg1
	 * is interpreted as a long value that contains the location ID of the device. Please note that Windows CE
	 * and Linux do not support location IDs.
	 * @n ftHandle is a pointer to a variable of type FT_HANDLE where the handle is to be stored. This handle must
	 * be used to access the device.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
          <Name>pHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f7c8c9e5-9984-4311-ab21-2ff56abf420b"/>
        <Name>FT_OpenEx</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ce5c116f-9252-4618-984f-bd027f72f9d5">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="578ff6f9-7ec6-40ef-9693-0f2b5f3d5f50">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="48f74640-da02-4ebb-824a-c366784eedf3">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>660</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="160d89f1-f654-4ec6-aa78-14a632a13dd5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="02a9271e-accb-4ed1-8ed6-b8dd15991d4a">
        <Comments>/** @noop FT_Close
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Close an open device.
	 * @param ftHandle Handle of the device.
	 * @returns 
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="8b51b0fa-1784-4118-ac3e-b9f791fd3be5">
          <Comments>/** @noop FT_Close
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Close an open device.
	 * @param ftHandle Handle of the device.
	 * @returns 
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="160d89f1-f654-4ec6-aa78-14a632a13dd5"/>
        <Name>FT_Close</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="2876c176-1bff-4212-9860-8920fd8c508a">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="185f8f17-2a54-4ed5-8fec-fba333391370">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="a1767a59-dcbf-404f-a10e-1aad442a5379">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>678</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="3262aaaf-9bd2-4237-947d-0b84e8c74f77">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="643f4cbb-f0cb-4906-a492-40cea4d6bcde">
        <Comments>/** @noop FT_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that receives the data from the device.
	 * @param dwBytesToRead Number of bytes to be read from the device.
	 * @param lpdwBytesReturned Pointer to a variable of type DWORD which receives the number of
	 * bytes read from the device.
	 * @returns
	 * FT_OK if successful, FT_IO_ERROR otherwise. $see FT_STATUS
	 * @remarks
	 * FT_Read always returns the number of bytes read in lpdwBytesReturned.
	 * @n This function does not return until dwBytesToRead bytes have been read into the buffer. The number of
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed to FT_Read as dwBytesToRead so that the function reads the device and returns immediately.
	 * When a read timeout value has been specified in a previous call to FT_SetTimeouts, FT_Read returns
	 * when the timer expires or dwBytesToRead have been read, whichever occurs first. If the timeout
	 * occurred, FT_Read reads available data into the buffer and returns FT_OK.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the buffer.
	 * If the return value is FT_OK, and lpdwBytesReturned is equal to dwBytesToRead then FT_Read has
	 * completed normally. If the return value is FT_OK, and lpdwBytesReturned is less then dwBytesToRead
	 * then a timeout has occurred and the read has been partially completed. Note that if a timeout occurred
	 * and no data was read, the return value is still FT_OK.
	 * @n A return value of FT_IO_ERROR suggests an error in the parameters of the function, or a fatal error like a
	 * USB disconnect has occurred.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="37a14688-ad5e-478a-8cf0-b99222c65263">
          <Comments>/** @noop FT_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that receives the data from the device.
	 * @param dwBytesToRead Number of bytes to be read from the device.
	 * @param lpdwBytesReturned Pointer to a variable of type DWORD which receives the number of
	 * bytes read from the device.
	 * @returns
	 * FT_OK if successful, FT_IO_ERROR otherwise. $see FT_STATUS
	 * @remarks
	 * FT_Read always returns the number of bytes read in lpdwBytesReturned.
	 * @n This function does not return until dwBytesToRead bytes have been read into the buffer. The number of
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed to FT_Read as dwBytesToRead so that the function reads the device and returns immediately.
	 * When a read timeout value has been specified in a previous call to FT_SetTimeouts, FT_Read returns
	 * when the timer expires or dwBytesToRead have been read, whichever occurs first. If the timeout
	 * occurred, FT_Read reads available data into the buffer and returns FT_OK.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the buffer.
	 * If the return value is FT_OK, and lpdwBytesReturned is equal to dwBytesToRead then FT_Read has
	 * completed normally. If the return value is FT_OK, and lpdwBytesReturned is less then dwBytesToRead
	 * then a timeout has occurred and the read has been partially completed. Note that if a timeout occurred
	 * and no data was read, the return value is still FT_OK.
	 * @n A return value of FT_IO_ERROR suggests an error in the parameters of the function, or a fatal error like a
	 * USB disconnect has occurred.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8b7fc679-117a-464a-bec4-0ecd0da2336a">
          <Comments>/** @noop FT_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that receives the data from the device.
	 * @param dwBytesToRead Number of bytes to be read from the device.
	 * @param lpdwBytesReturned Pointer to a variable of type DWORD which receives the number of
	 * bytes read from the device.
	 * @returns
	 * FT_OK if successful, FT_IO_ERROR otherwise. $see FT_STATUS
	 * @remarks
	 * FT_Read always returns the number of bytes read in lpdwBytesReturned.
	 * @n This function does not return until dwBytesToRead bytes have been read into the buffer. The number of
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed to FT_Read as dwBytesToRead so that the function reads the device and returns immediately.
	 * When a read timeout value has been specified in a previous call to FT_SetTimeouts, FT_Read returns
	 * when the timer expires or dwBytesToRead have been read, whichever occurs first. If the timeout
	 * occurred, FT_Read reads available data into the buffer and returns FT_OK.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the buffer.
	 * If the return value is FT_OK, and lpdwBytesReturned is equal to dwBytesToRead then FT_Read has
	 * completed normally. If the return value is FT_OK, and lpdwBytesReturned is less then dwBytesToRead
	 * then a timeout has occurred and the read has been partially completed. Note that if a timeout occurred
	 * and no data was read, the return value is still FT_OK.
	 * @n A return value of FT_IO_ERROR suggests an error in the parameters of the function, or a fatal error like a
	 * USB disconnect has occurred.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
          <Name>lpBuffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="1ba92e10-0a2a-49b4-9f8f-9dca7839b5f6">
          <Comments>/** @noop FT_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that receives the data from the device.
	 * @param dwBytesToRead Number of bytes to be read from the device.
	 * @param lpdwBytesReturned Pointer to a variable of type DWORD which receives the number of
	 * bytes read from the device.
	 * @returns
	 * FT_OK if successful, FT_IO_ERROR otherwise. $see FT_STATUS
	 * @remarks
	 * FT_Read always returns the number of bytes read in lpdwBytesReturned.
	 * @n This function does not return until dwBytesToRead bytes have been read into the buffer. The number of
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed to FT_Read as dwBytesToRead so that the function reads the device and returns immediately.
	 * When a read timeout value has been specified in a previous call to FT_SetTimeouts, FT_Read returns
	 * when the timer expires or dwBytesToRead have been read, whichever occurs first. If the timeout
	 * occurred, FT_Read reads available data into the buffer and returns FT_OK.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the buffer.
	 * If the return value is FT_OK, and lpdwBytesReturned is equal to dwBytesToRead then FT_Read has
	 * completed normally. If the return value is FT_OK, and lpdwBytesReturned is less then dwBytesToRead
	 * then a timeout has occurred and the read has been partially completed. Note that if a timeout occurred
	 * and no data was read, the return value is still FT_OK.
	 * @n A return value of FT_IO_ERROR suggests an error in the parameters of the function, or a fatal error like a
	 * USB disconnect has occurred.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwBytesToRead</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8ae236f0-cb87-47ce-86cb-0efb37b19836">
          <Comments>/** @noop FT_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that receives the data from the device.
	 * @param dwBytesToRead Number of bytes to be read from the device.
	 * @param lpdwBytesReturned Pointer to a variable of type DWORD which receives the number of
	 * bytes read from the device.
	 * @returns
	 * FT_OK if successful, FT_IO_ERROR otherwise. $see FT_STATUS
	 * @remarks
	 * FT_Read always returns the number of bytes read in lpdwBytesReturned.
	 * @n This function does not return until dwBytesToRead bytes have been read into the buffer. The number of
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed to FT_Read as dwBytesToRead so that the function reads the device and returns immediately.
	 * When a read timeout value has been specified in a previous call to FT_SetTimeouts, FT_Read returns
	 * when the timer expires or dwBytesToRead have been read, whichever occurs first. If the timeout
	 * occurred, FT_Read reads available data into the buffer and returns FT_OK.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the buffer.
	 * If the return value is FT_OK, and lpdwBytesReturned is equal to dwBytesToRead then FT_Read has
	 * completed normally. If the return value is FT_OK, and lpdwBytesReturned is less then dwBytesToRead
	 * then a timeout has occurred and the read has been partially completed. Note that if a timeout occurred
	 * and no data was read, the return value is still FT_OK.
	 * @n A return value of FT_IO_ERROR suggests an error in the parameters of the function, or a fatal error like a
	 * USB disconnect has occurred.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwBytesReturned</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="3262aaaf-9bd2-4237-947d-0b84e8c74f77"/>
        <Name>FT_Read</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="22ad14a3-ce20-4851-87e9-e3d3123bd334">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="ef7ab970-0452-499e-bfd9-18ac023852b7">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="34c8bab4-7b9b-4344-8f03-8a22bba87136">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>713</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c12f4a20-2411-4a8f-8c3e-c607ceb3889e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="79e3c49d-41ac-44cc-b46c-4d1695be17f4">
        <Comments>/** @noop FT_Write
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to be written to the device.
	 * @param dwBytesToWrite Number of bytes to write to the device.
	 * @param lpdwBytesWritten Pointer to a variable of type DWORD which receives the number of
	 * bytes written to the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="ce121405-2015-4bea-9d4f-2ea50781ee9e">
          <Comments>/** @noop FT_Write
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to be written to the device.
	 * @param dwBytesToWrite Number of bytes to write to the device.
	 * @param lpdwBytesWritten Pointer to a variable of type DWORD which receives the number of
	 * bytes written to the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="091c6807-cc2f-4eb3-af81-9d04312fe8f6">
          <Comments>/** @noop FT_Write
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to be written to the device.
	 * @param dwBytesToWrite Number of bytes to write to the device.
	 * @param lpdwBytesWritten Pointer to a variable of type DWORD which receives the number of
	 * bytes written to the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
          <Name>lpBuffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="05aae264-6852-4255-a2f1-4112dc184da1">
          <Comments>/** @noop FT_Write
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to be written to the device.
	 * @param dwBytesToWrite Number of bytes to write to the device.
	 * @param lpdwBytesWritten Pointer to a variable of type DWORD which receives the number of
	 * bytes written to the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwBytesToWrite</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="cb4c533f-268c-41fb-a2d4-028bed51740f">
          <Comments>/** @noop FT_Write
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to be written to the device.
	 * @param dwBytesToWrite Number of bytes to write to the device.
	 * @param lpdwBytesWritten Pointer to a variable of type DWORD which receives the number of
	 * bytes written to the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwBytesWritten</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="c12f4a20-2411-4a8f-8c3e-c607ceb3889e"/>
        <Name>FT_Write</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="1939fbda-c318-4fbd-b1f3-c37db6fd74f6">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d684aa1b-c344-42c2-ab8a-6ae1883f91d2">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="29f9f107-82ce-4ad8-b40e-720437852fd5">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>736</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ce84febf-8312-4695-88e8-76974e88e70b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="af1ba0cf-caf9-4d96-aa5f-7115d15b26de">
        <Comments>/** @noop FT_SetBaudRate
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the baud rate for the device.
	 * @param ftHandle Handle of the device.
	 * @param dwBaudRate Baud rate.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="c8143456-89d2-4aa4-944b-79fa14dc9d85">
          <Comments>/** @noop FT_SetBaudRate
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the baud rate for the device.
	 * @param ftHandle Handle of the device.
	 * @param dwBaudRate Baud rate.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d6bc92df-93ab-453f-8e02-92beb6ae5176">
          <Comments>/** @noop FT_SetBaudRate
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the baud rate for the device.
	 * @param ftHandle Handle of the device.
	 * @param dwBaudRate Baud rate.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>dwBaudRate</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="ce84febf-8312-4695-88e8-76974e88e70b"/>
        <Name>FT_SetBaudRate</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="3244ccda-ef0a-477c-adb8-c519b85ba4fd">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="74216b48-3e37-4803-aebe-f94afeb0d167">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="59a53614-04d9-40f7-8618-c6fe9ec0d2a0">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>756</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f97e830e-0835-44fd-be88-8cd492523c19">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="9d9223d0-7746-491a-a492-2f5811c33d7b">
        <Comments>/** @noop FT_SetDivisor
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the baud rate for the device. It is used to set non-standard baud rates.
	 * @param ftHandle Handle of the device.
	 * @param usDivisor Divisor.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is no longer required as FT_SetBaudRate will now automatically calculate the required
	 * divisor for a requested baud rate. The application note &quot;Setting baud rates for the FT8U232AM&quot; is
	 * available from the Application Notes section of the FTDI website describes how to calculate the divisor for
	 * a non-standard baud rate.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="71fc7211-afa2-404f-9580-079bddf9cac3">
          <Comments>/** @noop FT_SetDivisor
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the baud rate for the device. It is used to set non-standard baud rates.
	 * @param ftHandle Handle of the device.
	 * @param usDivisor Divisor.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is no longer required as FT_SetBaudRate will now automatically calculate the required
	 * divisor for a requested baud rate. The application note &quot;Setting baud rates for the FT8U232AM&quot; is
	 * available from the Application Notes section of the FTDI website describes how to calculate the divisor for
	 * a non-standard baud rate.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="263a2825-6bff-4e57-b550-53a5b445350c">
          <Comments>/** @noop FT_SetDivisor
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the baud rate for the device. It is used to set non-standard baud rates.
	 * @param ftHandle Handle of the device.
	 * @param usDivisor Divisor.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is no longer required as FT_SetBaudRate will now automatically calculate the required
	 * divisor for a requested baud rate. The application note &quot;Setting baud rates for the FT8U232AM&quot; is
	 * available from the Application Notes section of the FTDI website describes how to calculate the divisor for
	 * a non-standard baud rate.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>usDivisor</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f97e830e-0835-44fd-be88-8cd492523c19"/>
        <Name>FT_SetDivisor</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="f726ec82-c12b-4d3b-b37d-e3d46441785f">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="a846556f-49e4-4694-9ae7-1ce389857cf9">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="90f580da-5a9c-4a1c-b9c7-788d02e38711">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>779</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="71e20467-7501-44cb-a879-be29741fd299">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="4cbf6e89-9895-48cf-bb63-ec181632eacd">
        <Comments>/** @noop FT_SetDataCharacteristics
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the data characteristics for the device.
	 * @param ftHandle Handle of the device.
	 * @param uWordLength Number of bits per word - must be FT_BITS_8 or FT_BITS_7.
	 * @param uStopBits Number of stop bits - must be FT_STOP_BITS_1 or FT_STOP_BITS_2.
	 * @param uParity Parity - must be FT_PARITY_NONE, FT_PARITY_ODD, FT_PARITY_EVEN, 
	 * FT_PARITY_MARK or FT_PARITY SPACE.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="fa9c94e7-023e-49ff-9cd7-d5c833f37bed">
          <Comments>/** @noop FT_SetDataCharacteristics
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the data characteristics for the device.
	 * @param ftHandle Handle of the device.
	 * @param uWordLength Number of bits per word - must be FT_BITS_8 or FT_BITS_7.
	 * @param uStopBits Number of stop bits - must be FT_STOP_BITS_1 or FT_STOP_BITS_2.
	 * @param uParity Parity - must be FT_PARITY_NONE, FT_PARITY_ODD, FT_PARITY_EVEN, 
	 * FT_PARITY_MARK or FT_PARITY SPACE.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="e8c74e1d-3635-4e8f-9119-2fd4b9ad77c7">
          <Comments>/** @noop FT_SetDataCharacteristics
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the data characteristics for the device.
	 * @param ftHandle Handle of the device.
	 * @param uWordLength Number of bits per word - must be FT_BITS_8 or FT_BITS_7.
	 * @param uStopBits Number of stop bits - must be FT_STOP_BITS_1 or FT_STOP_BITS_2.
	 * @param uParity Parity - must be FT_PARITY_NONE, FT_PARITY_ODD, FT_PARITY_EVEN, 
	 * FT_PARITY_MARK or FT_PARITY SPACE.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>uWordLength</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="9464f195-3a28-4433-baf6-92bd2eab9b6a">
          <Comments>/** @noop FT_SetDataCharacteristics
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the data characteristics for the device.
	 * @param ftHandle Handle of the device.
	 * @param uWordLength Number of bits per word - must be FT_BITS_8 or FT_BITS_7.
	 * @param uStopBits Number of stop bits - must be FT_STOP_BITS_1 or FT_STOP_BITS_2.
	 * @param uParity Parity - must be FT_PARITY_NONE, FT_PARITY_ODD, FT_PARITY_EVEN, 
	 * FT_PARITY_MARK or FT_PARITY SPACE.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>uStopBits</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="1300071b-ba22-4740-8b91-549995275486">
          <Comments>/** @noop FT_SetDataCharacteristics
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the data characteristics for the device.
	 * @param ftHandle Handle of the device.
	 * @param uWordLength Number of bits per word - must be FT_BITS_8 or FT_BITS_7.
	 * @param uStopBits Number of stop bits - must be FT_STOP_BITS_1 or FT_STOP_BITS_2.
	 * @param uParity Parity - must be FT_PARITY_NONE, FT_PARITY_ODD, FT_PARITY_EVEN, 
	 * FT_PARITY_MARK or FT_PARITY SPACE.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>uParity</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="71e20467-7501-44cb-a879-be29741fd299"/>
        <Name>FT_SetDataCharacteristics</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="129901b5-aa19-4f2f-bd39-76f298e99da8">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="dad5af47-67fe-49f6-8e65-48ecc03e811b">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="9d94fb12-74bc-47d4-a146-200088c9b0c2">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>800</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="de0340e9-aea6-4667-bcb7-9a37d9cf3bd1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="250a6802-56aa-464d-a73b-1bf17b9b7a17">
        <Comments>/** @noop FT_SetTimeouts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the read and write timeouts for the device.
	 * @param ftHandle Handle of the device.
	 * @param dwReadTimeout Read timeout in milliseconds.
	 * @param dwWriteTimeout Write timeout in milliseconds.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="430971b5-a039-47c3-ba90-3a6a96810787">
          <Comments>/** @noop FT_SetTimeouts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the read and write timeouts for the device.
	 * @param ftHandle Handle of the device.
	 * @param dwReadTimeout Read timeout in milliseconds.
	 * @param dwWriteTimeout Write timeout in milliseconds.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="3edd1f63-61bc-4d31-b64a-c339e8ef4482">
          <Comments>/** @noop FT_SetTimeouts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the read and write timeouts for the device.
	 * @param ftHandle Handle of the device.
	 * @param dwReadTimeout Read timeout in milliseconds.
	 * @param dwWriteTimeout Write timeout in milliseconds.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>dwReadTimeout</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="6a4a4157-7d4e-4fc1-9e0a-f7c2a42a6aed">
          <Comments>/** @noop FT_SetTimeouts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the read and write timeouts for the device.
	 * @param ftHandle Handle of the device.
	 * @param dwReadTimeout Read timeout in milliseconds.
	 * @param dwWriteTimeout Write timeout in milliseconds.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>dwWriteTimeout</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="de0340e9-aea6-4667-bcb7-9a37d9cf3bd1"/>
        <Name>FT_SetTimeouts</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="8ae7d5e1-1f9a-4516-be81-569fc842af6c">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="829c5d6c-9f1e-408b-842e-5d6b946408ab">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="84074b98-59b9-4fe2-8a7a-5bb5108d7e1c">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>821</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="50cfd385-9ac8-498f-8a07-668e101a3687">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="2a127f7a-39db-442e-b193-a4c3bd7d2843">
        <Comments>/** @noop FT_SetFlowControl
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the flow control for the device.
	 * @param ftHandle Handle of the device.
	 * @param usFlowControl Must be one of FT_FLOW_NONE, FT_FLOW_RTS_CTS, FT_FLOW_DTR_DSR or 
	 * FT_FLOW_XON_XOFF.
	 * @param uXonChar Character used to signal Xon. Only used if flow control is FT_FLOW_XON_XOFF.
	 * @param uXoffChar Character used to signal Xoff. Only used if flow control is	FT_FLOW_XON_XOFF.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="ef303c0c-7cef-4099-ac60-d13242c98925">
          <Comments>/** @noop FT_SetFlowControl
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the flow control for the device.
	 * @param ftHandle Handle of the device.
	 * @param usFlowControl Must be one of FT_FLOW_NONE, FT_FLOW_RTS_CTS, FT_FLOW_DTR_DSR or 
	 * FT_FLOW_XON_XOFF.
	 * @param uXonChar Character used to signal Xon. Only used if flow control is FT_FLOW_XON_XOFF.
	 * @param uXoffChar Character used to signal Xoff. Only used if flow control is	FT_FLOW_XON_XOFF.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="e7e8e70f-d46f-4c83-acba-1b81a9fdd465">
          <Comments>/** @noop FT_SetFlowControl
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the flow control for the device.
	 * @param ftHandle Handle of the device.
	 * @param usFlowControl Must be one of FT_FLOW_NONE, FT_FLOW_RTS_CTS, FT_FLOW_DTR_DSR or 
	 * FT_FLOW_XON_XOFF.
	 * @param uXonChar Character used to signal Xon. Only used if flow control is FT_FLOW_XON_XOFF.
	 * @param uXoffChar Character used to signal Xoff. Only used if flow control is	FT_FLOW_XON_XOFF.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>usFlowControl</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="021f2940-5666-44ef-9e41-77e081e59b5e">
          <Comments>/** @noop FT_SetFlowControl
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the flow control for the device.
	 * @param ftHandle Handle of the device.
	 * @param usFlowControl Must be one of FT_FLOW_NONE, FT_FLOW_RTS_CTS, FT_FLOW_DTR_DSR or 
	 * FT_FLOW_XON_XOFF.
	 * @param uXonChar Character used to signal Xon. Only used if flow control is FT_FLOW_XON_XOFF.
	 * @param uXoffChar Character used to signal Xoff. Only used if flow control is	FT_FLOW_XON_XOFF.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>uXonChar</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="6a77012f-8bec-438b-b51e-8e17ec802cd6">
          <Comments>/** @noop FT_SetFlowControl
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the flow control for the device.
	 * @param ftHandle Handle of the device.
	 * @param usFlowControl Must be one of FT_FLOW_NONE, FT_FLOW_RTS_CTS, FT_FLOW_DTR_DSR or 
	 * FT_FLOW_XON_XOFF.
	 * @param uXonChar Character used to signal Xon. Only used if flow control is FT_FLOW_XON_XOFF.
	 * @param uXoffChar Character used to signal Xoff. Only used if flow control is	FT_FLOW_XON_XOFF.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>uXoffChar</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="50cfd385-9ac8-498f-8a07-668e101a3687"/>
        <Name>FT_SetFlowControl</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="318b782a-f3b0-4cc0-86db-ff9454c4589b">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="30a1a71a-4ca3-4521-acbc-ae02b3a56e00">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="76d182f2-c23c-4f99-a497-97be9d6d6c45">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>843</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f7d625bf-6ca6-45a3-ac17-a2a1077f061c">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="f92e43f8-4388-4364-99d9-8b257d6c988e">
        <Comments>/** @noop FT_SetDtr
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the Data Terminal Ready (DTR) control signal.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function asserts the Data Terminal Ready (DTR) line of the device.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="e4f28a2c-9ff5-4c94-9c8d-6fe06515b9b2">
          <Comments>/** @noop FT_SetDtr
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the Data Terminal Ready (DTR) control signal.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function asserts the Data Terminal Ready (DTR) line of the device.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f7d625bf-6ca6-45a3-ac17-a2a1077f061c"/>
        <Name>FT_SetDtr</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="71b039bc-c2b0-4133-9750-ea091d55df8a">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="b993e52a-2910-4b17-b9a6-b720c76cde78">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="1e865cb5-b7d9-449a-a313-f5db5fe65443">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>864</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="7f7b3c5c-def3-426f-909b-69e50a82e174">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="cbf2edd0-8c4c-4bea-9cdd-cb4d751b9b7b">
        <Comments>/** @noop FT_ClrDtr
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function clears the Data Terminal Ready (DTR) control signal.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function de-asserts the Data Terminal Ready (DTR) line of the device.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="32497467-6dd9-447c-a5be-6feaedb2c722">
          <Comments>/** @noop FT_ClrDtr
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function clears the Data Terminal Ready (DTR) control signal.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function de-asserts the Data Terminal Ready (DTR) line of the device.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="7f7b3c5c-def3-426f-909b-69e50a82e174"/>
        <Name>FT_ClrDtr</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ab5407fb-cd48-484d-848e-9119019bb580">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c8220c08-5e1f-444e-874a-d5428c404f08">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="f39dc990-45a4-4378-b617-54c4a6081099">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>882</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f359251a-b3ea-409c-a577-64ad0c40b8e5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="4589613b-0876-4a53-ac5d-9f718e6edebb">
        <Comments>/** @noop FT_SetRts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the Request To Send (RTS) control signal.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function asserts the Request To Send (RTS) line of the device.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="c886acec-ec89-4be8-925b-33acefa9fd4c">
          <Comments>/** @noop FT_SetRts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the Request To Send (RTS) control signal.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function asserts the Request To Send (RTS) line of the device.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f359251a-b3ea-409c-a577-64ad0c40b8e5"/>
        <Name>FT_SetRts</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="b87c1ecc-e0ea-432a-bf8c-0a2de043964e">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="dd3fca24-3885-40b0-a898-21ed13c4df9e">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="f6fe1fb9-2e4b-45fa-81ca-fbef74443a78">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>900</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e7d00f27-a71c-4502-80f1-d98956c5d70e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="6b766459-75ad-4660-a082-f52add0f6d15">
        <Comments>/** @noop FT_ClrRts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function clears the Request To Send (RTS) control signal.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function de-asserts the Request To Send (RTS) line of the device.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="75e73f72-e264-4341-a8e4-2c8165e66ef6">
          <Comments>/** @noop FT_ClrRts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function clears the Request To Send (RTS) control signal.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function de-asserts the Request To Send (RTS) line of the device.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="e7d00f27-a71c-4502-80f1-d98956c5d70e"/>
        <Name>FT_ClrRts</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="157cf725-3144-4a98-ad84-6335876c9669">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="a2987fa2-6e1c-47ee-ba80-215ff05d2b98">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="55ccb9c6-5d96-4640-9fd3-28c913486690">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>918</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="18e3bde5-1c32-4bb0-b51b-997b82cf8c2a">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="1aeed841-a829-4314-84a1-d38e94aa47d3"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="c1480879-4124-4d6a-8ebf-0cc79f19af20">
        <Comments>/** @noop FT_GetModemStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the modem status and line status from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpdwModemStatus Pointer to a variable of type DWORD which receives the modem
	 * status and line status from the device.
	 * @returns 
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The least significant byte of the lpdwModemStatus value holds the modem status. On Windows and
	 * Windows CE, the line status is held in the second least significant byte of the lpdwModemStatus value.
	 * @n The modem status is bit-mapped as follows: Clear To Send (CTS) = 0x10, Data Set Ready (DSR) = 0x20,
	 * Ring Indicator (RI) = 0x40, Data Carrier Detect (DCD) = 0x80.
	 * @n The line status is bit-mapped as follows: Overrun Error (OE) = 0x02, Parity Error (PE) = 0x04, Framing
	 * Error (FE) = 0x08, Break Interrupt (BI) = 0x10.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="3bbe6f4f-8381-467b-ac10-04f395e72d44">
          <Comments>/** @noop FT_GetModemStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the modem status and line status from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpdwModemStatus Pointer to a variable of type DWORD which receives the modem
	 * status and line status from the device.
	 * @returns 
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The least significant byte of the lpdwModemStatus value holds the modem status. On Windows and
	 * Windows CE, the line status is held in the second least significant byte of the lpdwModemStatus value.
	 * @n The modem status is bit-mapped as follows: Clear To Send (CTS) = 0x10, Data Set Ready (DSR) = 0x20,
	 * Ring Indicator (RI) = 0x40, Data Carrier Detect (DCD) = 0x80.
	 * @n The line status is bit-mapped as follows: Overrun Error (OE) = 0x02, Parity Error (PE) = 0x04, Framing
	 * Error (FE) = 0x08, Break Interrupt (BI) = 0x10.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d51fc8cc-7b3b-4164-a098-7598d12d1a0e">
          <Comments>/** @noop FT_GetModemStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the modem status and line status from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpdwModemStatus Pointer to a variable of type DWORD which receives the modem
	 * status and line status from the device.
	 * @returns 
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The least significant byte of the lpdwModemStatus value holds the modem status. On Windows and
	 * Windows CE, the line status is held in the second least significant byte of the lpdwModemStatus value.
	 * @n The modem status is bit-mapped as follows: Clear To Send (CTS) = 0x10, Data Set Ready (DSR) = 0x20,
	 * Ring Indicator (RI) = 0x40, Data Carrier Detect (DCD) = 0x80.
	 * @n The line status is bit-mapped as follows: Overrun Error (OE) = 0x02, Parity Error (PE) = 0x04, Framing
	 * Error (FE) = 0x08, Break Interrupt (BI) = 0x10.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="1aeed841-a829-4314-84a1-d38e94aa47d3"/>
          <Name>lpdwModemStatus</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="18e3bde5-1c32-4bb0-b51b-997b82cf8c2a"/>
        <Name>FT_GetModemStatus</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="aebd2d68-c6c8-471d-91e0-05e66ca0fb5e">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d8fa7814-669f-4fa6-afc2-fc6e7738a600">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="097553ee-b0ae-4e4a-b920-9119d21bc157">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>943</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d7312de8-b5a0-4003-b595-8e5886c70a73">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="2d4774f3-22ef-434c-9157-188637a55036">
        <Comments>/** @noop FT_GetQueueStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the number of bytes in the receive queue.
	 * @param ftHandle Handle of the device.
	 * @param lpdwAmountInRxQueue Pointer to a variable of type DWORD which receives the number of
	 * bytes in the receive queue.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="83194e3b-bbe5-4cbc-87a2-4a503faa2890">
          <Comments>/** @noop FT_GetQueueStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the number of bytes in the receive queue.
	 * @param ftHandle Handle of the device.
	 * @param lpdwAmountInRxQueue Pointer to a variable of type DWORD which receives the number of
	 * bytes in the receive queue.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="54475093-6cac-4c29-82d4-68b7e55f06c3">
          <Comments>/** @noop FT_GetQueueStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the number of bytes in the receive queue.
	 * @param ftHandle Handle of the device.
	 * @param lpdwAmountInRxQueue Pointer to a variable of type DWORD which receives the number of
	 * bytes in the receive queue.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
          <Name>lpdwAmountInRxQueue</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="d7312de8-b5a0-4003-b595-8e5886c70a73"/>
        <Name>FT_GetQueueStatus</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="5cddda21-2467-4d51-8985-3ad54f6175e9">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="07dfa1e1-13b2-49c6-a63a-917b615dc5ab">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="e6a40134-1d51-4a5f-a82c-4c7e9a78a608">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>962</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="9b108d8c-b812-46fa-a305-78a65615f3e2">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="cd3052fd-5483-423d-b569-dc4e6533c41d"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="207a0d30-acf0-436b-ae9c-6a32c3c02487"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="207a0d30-acf0-436b-ae9c-6a32c3c02487"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="dddd6c5b-9f18-4849-9895-a2a59e005bac">
        <Comments>/** @noop FT_GetDeviceInfo
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get device information for an open device.
	 * @param ftHandle Handle of the device.
	 * @param lpftDevice Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param pcSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param pcDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param pvDummy Reserved for future use - should be set to NULL.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to return the device type, device ID, device description and serial number.
	 * The device ID is encoded in a DWORD - the most significant word contains the vendor ID, and the least
	 * significant word contains the product ID. So the returned ID 0x04036001 corresponds to the device ID
	 * VID_0403&amp;PID_6001.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="07384918-91ea-4f82-89c0-3577fa9a6fb9">
          <Comments>/** @noop FT_GetDeviceInfo
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get device information for an open device.
	 * @param ftHandle Handle of the device.
	 * @param lpftDevice Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param pcSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param pcDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param pvDummy Reserved for future use - should be set to NULL.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to return the device type, device ID, device description and serial number.
	 * The device ID is encoded in a DWORD - the most significant word contains the vendor ID, and the least
	 * significant word contains the product ID. So the returned ID 0x04036001 corresponds to the device ID
	 * VID_0403&amp;PID_6001.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="145c4e3a-c8fb-41a7-8e46-13b973cef35c">
          <Comments>/** @noop FT_GetDeviceInfo
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get device information for an open device.
	 * @param ftHandle Handle of the device.
	 * @param lpftDevice Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param pcSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param pcDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param pvDummy Reserved for future use - should be set to NULL.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to return the device type, device ID, device description and serial number.
	 * The device ID is encoded in a DWORD - the most significant word contains the vendor ID, and the least
	 * significant word contains the product ID. So the returned ID 0x04036001 corresponds to the device ID
	 * VID_0403&amp;PID_6001.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="cd3052fd-5483-423d-b569-dc4e6533c41d"/>
          <Name>lpftDevice</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="17f03442-8f48-448d-989f-7f7cb7c0b817">
          <Comments>/** @noop FT_GetDeviceInfo
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get device information for an open device.
	 * @param ftHandle Handle of the device.
	 * @param lpftDevice Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param pcSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param pcDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param pvDummy Reserved for future use - should be set to NULL.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to return the device type, device ID, device description and serial number.
	 * The device ID is encoded in a DWORD - the most significant word contains the vendor ID, and the least
	 * significant word contains the product ID. So the returned ID 0x04036001 corresponds to the device ID
	 * VID_0403&amp;PID_6001.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwID</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="370641ac-15d9-4083-b88d-6d455e2eef28">
          <Comments>/** @noop FT_GetDeviceInfo
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get device information for an open device.
	 * @param ftHandle Handle of the device.
	 * @param lpftDevice Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param pcSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param pcDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param pvDummy Reserved for future use - should be set to NULL.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to return the device type, device ID, device description and serial number.
	 * The device ID is encoded in a DWORD - the most significant word contains the vendor ID, and the least
	 * significant word contains the product ID. So the returned ID 0x04036001 corresponds to the device ID
	 * VID_0403&amp;PID_6001.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="207a0d30-acf0-436b-ae9c-6a32c3c02487"/>
          <Name>pcSerialNumber</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="2bd23f97-ab10-4658-bb08-b5c1519b3953">
          <Comments>/** @noop FT_GetDeviceInfo
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get device information for an open device.
	 * @param ftHandle Handle of the device.
	 * @param lpftDevice Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param pcSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param pcDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param pvDummy Reserved for future use - should be set to NULL.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to return the device type, device ID, device description and serial number.
	 * The device ID is encoded in a DWORD - the most significant word contains the vendor ID, and the least
	 * significant word contains the product ID. So the returned ID 0x04036001 corresponds to the device ID
	 * VID_0403&amp;PID_6001.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="207a0d30-acf0-436b-ae9c-6a32c3c02487"/>
          <Name>pcDescription</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5c75267b-dd68-450e-ba0f-d14610e56a7d">
          <Comments>/** @noop FT_GetDeviceInfo
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get device information for an open device.
	 * @param ftHandle Handle of the device.
	 * @param lpftDevice Pointer to unsigned long to store device type.
	 * @param lpdwID Pointer to unsigned long to store device ID.
	 * @param pcSerialNumber Pointer to buffer to store device serial number as a nullterminated string.
	 * @param pcDescription Pointer to buffer to store device description as a null-terminated string.
	 * @param pvDummy Reserved for future use - should be set to NULL.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to return the device type, device ID, device description and serial number.
	 * The device ID is encoded in a DWORD - the most significant word contains the vendor ID, and the least
	 * significant word contains the product ID. So the returned ID 0x04036001 corresponds to the device ID
	 * VID_0403&amp;PID_6001.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
          <Name>pvDummy</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="9b108d8c-b812-46fa-a305-78a65615f3e2"/>
        <Name>FT_GetDeviceInfo</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="e21fc3ac-dc99-4668-b173-d5ad59fac29d">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="49d60044-64e4-4ec3-bece-c33a429c5a21">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="ed872afe-4296-4de0-8473-f56aa76048ed">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>989</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="65516cbf-2e5b-4a23-8064-8871095bbc30">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="847f937f-24d5-466d-a47e-464ceda57cb8">
        <Comments>/** @noop FT_GetDriverVersion
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function returns the D2XX driver version number.
	 * @param ftHandle Handle of the device.
	 * @param lpdwDriverVersion Pointer to the driver version number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * A version number consists of major, minor and build version numbers contained in a 4-byte field
	 * (unsigned long). Byte0 (least significant) holds the build version, Byte1 holds the minor version, and
	 * Byte2 holds the major version. Byte3 is currently set to zero.
	 * @n For example, driver version &quot;2.04.06&quot; is represented as 0x00020406. Note that a device has to be
	 * opened before this function can be called.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="91683ae6-4ae9-45fe-893e-29e98a6f5299">
          <Comments>/** @noop FT_GetDriverVersion
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function returns the D2XX driver version number.
	 * @param ftHandle Handle of the device.
	 * @param lpdwDriverVersion Pointer to the driver version number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * A version number consists of major, minor and build version numbers contained in a 4-byte field
	 * (unsigned long). Byte0 (least significant) holds the build version, Byte1 holds the minor version, and
	 * Byte2 holds the major version. Byte3 is currently set to zero.
	 * @n For example, driver version &quot;2.04.06&quot; is represented as 0x00020406. Note that a device has to be
	 * opened before this function can be called.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5590a4da-9cf2-40d1-9a02-89d0d43ae721">
          <Comments>/** @noop FT_GetDriverVersion
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function returns the D2XX driver version number.
	 * @param ftHandle Handle of the device.
	 * @param lpdwDriverVersion Pointer to the driver version number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * A version number consists of major, minor and build version numbers contained in a 4-byte field
	 * (unsigned long). Byte0 (least significant) holds the build version, Byte1 holds the minor version, and
	 * Byte2 holds the major version. Byte3 is currently set to zero.
	 * @n For example, driver version &quot;2.04.06&quot; is represented as 0x00020406. Note that a device has to be
	 * opened before this function can be called.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwDriverVersion</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="65516cbf-2e5b-4a23-8064-8871095bbc30"/>
        <Name>FT_GetDriverVersion</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="555fc9a8-2fa1-47bc-81f4-d4ba53ef99f2">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="bf31d130-3977-4d71-8d6a-1f9c1f2a3f42">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="1775bc65-f573-4c7c-9ede-48f2c4939cb1">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1025</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fa494431-700f-4a96-9b66-d23fc4d88638">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="a5fb3b23-8945-4703-bb96-8744eb20ff7a">
        <Comments>/** @noop FT_GetLibraryVersion
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @n
	 * This function returns D2XX DLL or library version number.
	 * @param lpdwDLLVersion Pointer to the DLL or library version number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * A version number consists of major, minor and build version numbers contained in a 4-byte field
	 * (unsigned long). Byte0 (least significant) holds the build version, Byte1 holds the minor version, and
	 * Byte2 holds the major version. Byte3 is currently set to zero.
	 * @n For example, D2XX DLL version &quot;3.01.15&quot; is represented as 0x00030115. Note that this function does
	 * not take a handle, and so it can be called without opening a device.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="e4763118-300a-403a-a7f2-c4ddc2080ad0">
          <Comments>/** @noop FT_GetLibraryVersion
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @n
	 * This function returns D2XX DLL or library version number.
	 * @param lpdwDLLVersion Pointer to the DLL or library version number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * A version number consists of major, minor and build version numbers contained in a 4-byte field
	 * (unsigned long). Byte0 (least significant) holds the build version, Byte1 holds the minor version, and
	 * Byte2 holds the major version. Byte3 is currently set to zero.
	 * @n For example, D2XX DLL version &quot;3.01.15&quot; is represented as 0x00030115. Note that this function does
	 * not take a handle, and so it can be called without opening a device.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwDLLVersion</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="fa494431-700f-4a96-9b66-d23fc4d88638"/>
        <Name>FT_GetLibraryVersion</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="7c9ee9bf-489f-432e-b82c-0ef2a31b62fb">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="dceab829-7ef2-48ce-8228-961434f67e9c">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="c4f7c29b-4a8f-4a87-843a-13f4ffa9ef5e">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1048</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f521984d-fb5c-4b92-b8df-0da039eefda4">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="e8da4c65-dbc8-4865-9793-01b4b077ad22"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="8254868c-4d7b-48db-9fb5-32154ef8e95b">
        <Comments>/** @noop FT_GetComPortNumber
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * Retrieves the COM port associated with a device.
	 * @param ftHandle Handle of the device.
	 * @param lplComPortNumber Pointer to a variable of type LONG which receives the COM port number
	 * associated with the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is only available when using the Windows CDM driver as both the D2XX and VCP drivers can
	 * be installed at the same time.
	 * @n If no COM port is associated with the device, lplComPortNumber will have a value of -1
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="1fd6921f-440b-4709-a510-902ca307a0b4">
          <Comments>/** @noop FT_GetComPortNumber
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * Retrieves the COM port associated with a device.
	 * @param ftHandle Handle of the device.
	 * @param lplComPortNumber Pointer to a variable of type LONG which receives the COM port number
	 * associated with the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is only available when using the Windows CDM driver as both the D2XX and VCP drivers can
	 * be installed at the same time.
	 * @n If no COM port is associated with the device, lplComPortNumber will have a value of -1
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="37e363f2-80d2-4be0-953e-6c8a41b7ae5c">
          <Comments>/** @noop FT_GetComPortNumber
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * Retrieves the COM port associated with a device.
	 * @param ftHandle Handle of the device.
	 * @param lplComPortNumber Pointer to a variable of type LONG which receives the COM port number
	 * associated with the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is only available when using the Windows CDM driver as both the D2XX and VCP drivers can
	 * be installed at the same time.
	 * @n If no COM port is associated with the device, lplComPortNumber will have a value of -1
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="e8da4c65-dbc8-4865-9793-01b4b077ad22"/>
          <Name>lplComPortNumber</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f521984d-fb5c-4b92-b8df-0da039eefda4"/>
        <Name>FT_GetComPortNumber</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="1e6fe86c-fe15-4574-a296-e9444a183236">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="054ae8c9-e645-46ce-867d-0a6aa612ebd9">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="26a5032b-daa1-461f-95d8-daa378f15e6d">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1067</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="8880e2fb-dc9d-4cee-8f5a-d9c88a461fd5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="55a48fd9-b2eb-4f68-bb08-f6154a99b144">
        <Comments>/** @noop FT_GetStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the device status including number of characters in the receive queue, number of characters in the
	 * transmit queue, and the current event status.
	 * @param ftHandle Handle of the device.
	 * @param lpdwAmountInRxQueue Pointer to a variable of type DWORD which receives the number of characters in
	 * the receive queue.
	 * @param lpdwAmountInTxQueue Pointer to a variable of type DWORD which receives the number of characters in
	 * the transmit queue.
	 * @param lpdwEventStatus Pointer to a variable of type DWORD which receives the current state of
	 * the event status.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For an example of how to use this function, see the sample code in FT_SetEventNotification.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="73e95ad2-f043-4dbf-9f76-6ea74d6aa98f">
          <Comments>/** @noop FT_GetStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the device status including number of characters in the receive queue, number of characters in the
	 * transmit queue, and the current event status.
	 * @param ftHandle Handle of the device.
	 * @param lpdwAmountInRxQueue Pointer to a variable of type DWORD which receives the number of characters in
	 * the receive queue.
	 * @param lpdwAmountInTxQueue Pointer to a variable of type DWORD which receives the number of characters in
	 * the transmit queue.
	 * @param lpdwEventStatus Pointer to a variable of type DWORD which receives the current state of
	 * the event status.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For an example of how to use this function, see the sample code in FT_SetEventNotification.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="ffea9143-fc84-4633-ab48-fbc9af1c8fd2">
          <Comments>/** @noop FT_GetStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the device status including number of characters in the receive queue, number of characters in the
	 * transmit queue, and the current event status.
	 * @param ftHandle Handle of the device.
	 * @param lpdwAmountInRxQueue Pointer to a variable of type DWORD which receives the number of characters in
	 * the receive queue.
	 * @param lpdwAmountInTxQueue Pointer to a variable of type DWORD which receives the number of characters in
	 * the transmit queue.
	 * @param lpdwEventStatus Pointer to a variable of type DWORD which receives the current state of
	 * the event status.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For an example of how to use this function, see the sample code in FT_SetEventNotification.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
          <Name>lpdwAmountInRxQueue</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5029cffa-9670-4edb-9a6b-38608016da23">
          <Comments>/** @noop FT_GetStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the device status including number of characters in the receive queue, number of characters in the
	 * transmit queue, and the current event status.
	 * @param ftHandle Handle of the device.
	 * @param lpdwAmountInRxQueue Pointer to a variable of type DWORD which receives the number of characters in
	 * the receive queue.
	 * @param lpdwAmountInTxQueue Pointer to a variable of type DWORD which receives the number of characters in
	 * the transmit queue.
	 * @param lpdwEventStatus Pointer to a variable of type DWORD which receives the current state of
	 * the event status.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For an example of how to use this function, see the sample code in FT_SetEventNotification.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
          <Name>lpdwAmountInTxQueue</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="ad3797f6-1694-407d-a800-9bd65e4451cc">
          <Comments>/** @noop FT_GetStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the device status including number of characters in the receive queue, number of characters in the
	 * transmit queue, and the current event status.
	 * @param ftHandle Handle of the device.
	 * @param lpdwAmountInRxQueue Pointer to a variable of type DWORD which receives the number of characters in
	 * the receive queue.
	 * @param lpdwAmountInTxQueue Pointer to a variable of type DWORD which receives the number of characters in
	 * the transmit queue.
	 * @param lpdwEventStatus Pointer to a variable of type DWORD which receives the current state of
	 * the event status.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For an example of how to use this function, see the sample code in FT_SetEventNotification.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
          <Name>lpdwEventStatus</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="8880e2fb-dc9d-4cee-8f5a-d9c88a461fd5"/>
        <Name>FT_GetStatus</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="75c2e8d8-62ba-45e6-a41b-23d5a5d04933">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="438da5e5-6b78-47ac-8541-67238f8f5fe8">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="ee112b07-08b5-4136-badb-f40b8540ed18">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1093</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="3e238836-b041-4b5d-9f5f-4b500bea717e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="40321249-18c5-4f58-bade-0623139378e6">
        <Comments>/** @noop FT_SetEventNotification
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Sets conditions for event notification.
	 * @param ftHandle Handle of the device.
	 * @param dwEventMask Conditions that cause the event to be set.
	 * @param pvArg Interpreted as the handle of an event.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * An application can use this function to setup conditions which allow a thread to block until one of the
	 * conditions is met. Typically, an application will create an event, call this function, then block on the
	 * event. When the conditions are met, the event is set, and the application thread unblocked.
	 * dwEventMask is a bit-map that describes the events the application is interested in. pvArg is interpreted
	 * as the handle of an event which has been created by the application. If one of the event conditions is
	 * met, the event is set.
	 * @n If FT_EVENT_RXCHAR is set in dwEventMask, the event will be set when a character has been received
	 * by the device.
	 * @n If FT_EVENT_MODEM_STATUS is set in dwEventMask, the event will be set when a change in the modem
	 * signals has been detected by the device.
	 * @n If FT_EVENT_LINE_STATUS is set in dwEventMask, the event will be set when a change in the line status
	 * has been detected by the device.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="f22e5a0e-6f59-47d7-8bc8-5f9d3ea87ad8">
          <Comments>/** @noop FT_SetEventNotification
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Sets conditions for event notification.
	 * @param ftHandle Handle of the device.
	 * @param dwEventMask Conditions that cause the event to be set.
	 * @param pvArg Interpreted as the handle of an event.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * An application can use this function to setup conditions which allow a thread to block until one of the
	 * conditions is met. Typically, an application will create an event, call this function, then block on the
	 * event. When the conditions are met, the event is set, and the application thread unblocked.
	 * dwEventMask is a bit-map that describes the events the application is interested in. pvArg is interpreted
	 * as the handle of an event which has been created by the application. If one of the event conditions is
	 * met, the event is set.
	 * @n If FT_EVENT_RXCHAR is set in dwEventMask, the event will be set when a character has been received
	 * by the device.
	 * @n If FT_EVENT_MODEM_STATUS is set in dwEventMask, the event will be set when a change in the modem
	 * signals has been detected by the device.
	 * @n If FT_EVENT_LINE_STATUS is set in dwEventMask, the event will be set when a change in the line status
	 * has been detected by the device.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5fa80fa7-b903-4703-b8c0-7dd4cf20ed1d">
          <Comments>/** @noop FT_SetEventNotification
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Sets conditions for event notification.
	 * @param ftHandle Handle of the device.
	 * @param dwEventMask Conditions that cause the event to be set.
	 * @param pvArg Interpreted as the handle of an event.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * An application can use this function to setup conditions which allow a thread to block until one of the
	 * conditions is met. Typically, an application will create an event, call this function, then block on the
	 * event. When the conditions are met, the event is set, and the application thread unblocked.
	 * dwEventMask is a bit-map that describes the events the application is interested in. pvArg is interpreted
	 * as the handle of an event which has been created by the application. If one of the event conditions is
	 * met, the event is set.
	 * @n If FT_EVENT_RXCHAR is set in dwEventMask, the event will be set when a character has been received
	 * by the device.
	 * @n If FT_EVENT_MODEM_STATUS is set in dwEventMask, the event will be set when a change in the modem
	 * signals has been detected by the device.
	 * @n If FT_EVENT_LINE_STATUS is set in dwEventMask, the event will be set when a change in the line status
	 * has been detected by the device.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwEventMask</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="3f030d06-b1f4-4332-aa9a-d23dc674c98e">
          <Comments>/** @noop FT_SetEventNotification
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Sets conditions for event notification.
	 * @param ftHandle Handle of the device.
	 * @param dwEventMask Conditions that cause the event to be set.
	 * @param pvArg Interpreted as the handle of an event.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * An application can use this function to setup conditions which allow a thread to block until one of the
	 * conditions is met. Typically, an application will create an event, call this function, then block on the
	 * event. When the conditions are met, the event is set, and the application thread unblocked.
	 * dwEventMask is a bit-map that describes the events the application is interested in. pvArg is interpreted
	 * as the handle of an event which has been created by the application. If one of the event conditions is
	 * met, the event is set.
	 * @n If FT_EVENT_RXCHAR is set in dwEventMask, the event will be set when a character has been received
	 * by the device.
	 * @n If FT_EVENT_MODEM_STATUS is set in dwEventMask, the event will be set when a change in the modem
	 * signals has been detected by the device.
	 * @n If FT_EVENT_LINE_STATUS is set in dwEventMask, the event will be set when a change in the line status
	 * has been detected by the device.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="16936b9f-fd6f-48e2-9234-477a9a9b5b6d"/>
          <Name>pvArg</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="3e238836-b041-4b5d-9f5f-4b500bea717e"/>
        <Name>FT_SetEventNotification</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="fa07b130-140c-429b-bbb2-a4273c7df1b0">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="16cb12fd-cd7f-407c-9032-afafb7da64c5">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="4873e259-05ee-4b69-9e58-6cd298dc341d">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1127</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="af430125-dcf1-4952-9bd7-d1da94e6d771">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="7e25c9bd-2440-47cb-b4ba-48f701df2854">
        <Comments>/** @noop FT_SetChars
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the special characters for the device.
	 * @param ftHandle Handle of the device.
	 * @param uEventChar Event character.
	 * @param uEventCharEnabled 0 if event character disabled, non-zero otherwise.
	 * @param uErrorChar Error character.
	 * @param uErrorCharEnabled 0 if error character disabled, non-zero otherwise.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function allows for inserting specified characters in the data stream to represent events firing or
	 * errors occurring.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="de5efaff-d036-428a-9b40-778e2e6bf4f4">
          <Comments>/** @noop FT_SetChars
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the special characters for the device.
	 * @param ftHandle Handle of the device.
	 * @param uEventChar Event character.
	 * @param uEventCharEnabled 0 if event character disabled, non-zero otherwise.
	 * @param uErrorChar Error character.
	 * @param uErrorCharEnabled 0 if error character disabled, non-zero otherwise.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function allows for inserting specified characters in the data stream to represent events firing or
	 * errors occurring.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="eced2d72-1ae2-466c-8d9f-0a28f2e929be">
          <Comments>/** @noop FT_SetChars
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the special characters for the device.
	 * @param ftHandle Handle of the device.
	 * @param uEventChar Event character.
	 * @param uEventCharEnabled 0 if event character disabled, non-zero otherwise.
	 * @param uErrorChar Error character.
	 * @param uErrorCharEnabled 0 if error character disabled, non-zero otherwise.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function allows for inserting specified characters in the data stream to represent events firing or
	 * errors occurring.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>uEventChar</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="6f56adf9-1531-4ef3-80d5-cd3e22d2cf05">
          <Comments>/** @noop FT_SetChars
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the special characters for the device.
	 * @param ftHandle Handle of the device.
	 * @param uEventChar Event character.
	 * @param uEventCharEnabled 0 if event character disabled, non-zero otherwise.
	 * @param uErrorChar Error character.
	 * @param uErrorCharEnabled 0 if error character disabled, non-zero otherwise.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function allows for inserting specified characters in the data stream to represent events firing or
	 * errors occurring.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>uEventCharEnabled</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="25618434-00fe-411b-9157-59c1b3488b42">
          <Comments>/** @noop FT_SetChars
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the special characters for the device.
	 * @param ftHandle Handle of the device.
	 * @param uEventChar Event character.
	 * @param uEventCharEnabled 0 if event character disabled, non-zero otherwise.
	 * @param uErrorChar Error character.
	 * @param uErrorCharEnabled 0 if error character disabled, non-zero otherwise.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function allows for inserting specified characters in the data stream to represent events firing or
	 * errors occurring.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>uErrorChar</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="0d77a036-fcd3-49bd-b12b-7aca2bcffd42">
          <Comments>/** @noop FT_SetChars
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the special characters for the device.
	 * @param ftHandle Handle of the device.
	 * @param uEventChar Event character.
	 * @param uEventCharEnabled 0 if event character disabled, non-zero otherwise.
	 * @param uErrorChar Error character.
	 * @param uErrorCharEnabled 0 if error character disabled, non-zero otherwise.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function allows for inserting specified characters in the data stream to represent events firing or
	 * errors occurring.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>uErrorCharEnabled</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="af430125-dcf1-4952-9bd7-d1da94e6d771"/>
        <Name>FT_SetChars</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="b746c577-6f93-4fb9-bf35-a96bff9f5f53">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="9c387d62-827e-4087-a3d4-5e6635bfba85">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="fc55f8fe-357d-4fe4-b123-5472e59851b0">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1152</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f4882104-4bc9-42e3-b5d1-08db7a7b9076">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="fc883601-ace0-49e0-bd0f-a67655ca4b7d">
        <Comments>/** @noop FT_SetBreakOn
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Sets the BREAK condition for the device.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code	
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="d236766b-9e8e-4f33-a263-9147ea2d1df6">
          <Comments>/** @noop FT_SetBreakOn
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Sets the BREAK condition for the device.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code	
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f4882104-4bc9-42e3-b5d1-08db7a7b9076"/>
        <Name>FT_SetBreakOn</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="a86d7cde-e239-4b90-bb9f-6bdc2430c2e6">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d5be0bcf-14e3-4029-88cf-ecbef74620f1">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="85f6935c-0961-43cb-8a85-09e095a0d1fd">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1172</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="dd5fb5db-fd65-46b7-b75f-1d36d534f028">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="25d5e0a9-1535-409a-926c-ba35d6331cfe">
        <Comments>/** @noop FT_SetBreakOff
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Resets the BREAK condition for the device.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="7ad8aea5-04f8-4269-96f9-e94188f9aeab">
          <Comments>/** @noop FT_SetBreakOff
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Resets the BREAK condition for the device.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="dd5fb5db-fd65-46b7-b75f-1d36d534f028"/>
        <Name>FT_SetBreakOff</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="b3b50974-304b-4cf9-b419-95aa57ac3736">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="ba94cdbc-93a3-4f44-a981-aea3f836a6fa">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="85b5d631-796a-41af-bc6f-cae934cc1596">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1188</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="771168a0-c23c-4051-ab79-57a9b50cf161">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="1e2838c4-f29c-4916-a70f-2b7143ac59f7">
        <Comments>/** @noop FT_Purge
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function purges receive and transmit buffers in the device.
	 * @param ftHandle Handle of the device.
	 * @param ulMask Combination of FT_PURGE_RX and FT_PURGE_TX.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="3b208aaf-f156-46d8-be79-3c3f9da5635d">
          <Comments>/** @noop FT_Purge
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function purges receive and transmit buffers in the device.
	 * @param ftHandle Handle of the device.
	 * @param ulMask Combination of FT_PURGE_RX and FT_PURGE_TX.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="3dabe7a7-1133-4c32-be1e-213d3a364f96">
          <Comments>/** @noop FT_Purge
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function purges receive and transmit buffers in the device.
	 * @param ftHandle Handle of the device.
	 * @param ulMask Combination of FT_PURGE_RX and FT_PURGE_TX.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>ulMask</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="771168a0-c23c-4051-ab79-57a9b50cf161"/>
        <Name>FT_Purge</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="4262ee2a-5092-4514-a861-e753512b398d">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="fca69388-4828-4f4a-b1da-bd2709aa69f7">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="8e31bd99-8c00-4469-ae9f-78773a08ee2d">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1205</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="071e3d48-7d50-4e65-9a58-f603b0242ee1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="0ae53b44-ea72-4846-8c9f-6ed09530170f">
        <Comments>/** @noop FT_ResetDevice
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function sends a reset command to the device.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="c1befae4-da4a-4c9f-b24e-aa5834225c45">
          <Comments>/** @noop FT_ResetDevice
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later) 
	 * @par Summary
	 * This function sends a reset command to the device.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="071e3d48-7d50-4e65-9a58-f603b0242ee1"/>
        <Name>FT_ResetDevice</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="258b1ad5-966c-448a-b2f0-b5e9c02506f7">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="cee740f8-b2a8-4c34-915f-f71a7750ea14">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="35edfa75-f8c1-44f3-bd09-0a7c818e4c05">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1222</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="cf264110-ddfa-4700-bece-c6629828e1e5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="299eeac0-df15-42cf-852e-b8a9f760b49a">
        <Comments>/** @noop FT_ResetPort
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * Send a reset command to the port.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to attempt to recover the port after a failure. It is not equivalent 
	 * to an unplug-replug event. For the equivalent of an unplug-replug event, use FT_CyclePort.
	 * @see FT_CyclePort
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="2f6b1a6e-1d57-4ad4-9cf7-967381f6180a">
          <Comments>/** @noop FT_ResetPort
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * Send a reset command to the port.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to attempt to recover the port after a failure. It is not equivalent 
	 * to an unplug-replug event. For the equivalent of an unplug-replug event, use FT_CyclePort.
	 * @see FT_CyclePort
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="cf264110-ddfa-4700-bece-c6629828e1e5"/>
        <Name>FT_ResetPort</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="8c3bf9bf-08b8-492a-86e9-8507e6dd9c87">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c3de7b9e-b9f6-4ae2-a2a2-c73349b2b5df">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="aa3d2575-e4d9-40d2-ad8b-4e8a86080a77">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1239</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="707740fa-8624-4518-bf8c-a223809f2277">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="64a6966a-0263-49ee-9aba-745eb10a3477">
        <Comments>/** @noop FT_CyclePort
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * Send a cycle command to the USB port.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The effect of this function is the same as disconnecting then reconnecting the device from 
	 * USB. Possible use of this function is situations where a fatal error has occurred and it is 
	 * difficult, or not possible, to recover without unplugging and replugging the USB cable. 
	 * This function can also be used after reprogramming the EEPROM to force the FTDI device to 
	 * read the new EEPROM contents which would	otherwise require a physical disconnect-reconnect.
	 * @n As the current session is not restored when the driver is reloaded, the application must 
	 * be able to recover after calling this function. It is ithe responisbility of the application 
	 * to close the handle after successfully calling FT_CyclePort.
	 * @n For FT4232H, FT2232H and FT2232 devices, FT_CyclePort will only work under Windows XP and later.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="78737689-527c-445b-97a2-9daab57a3e71">
          <Comments>/** @noop FT_CyclePort
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * Send a cycle command to the USB port.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The effect of this function is the same as disconnecting then reconnecting the device from 
	 * USB. Possible use of this function is situations where a fatal error has occurred and it is 
	 * difficult, or not possible, to recover without unplugging and replugging the USB cable. 
	 * This function can also be used after reprogramming the EEPROM to force the FTDI device to 
	 * read the new EEPROM contents which would	otherwise require a physical disconnect-reconnect.
	 * @n As the current session is not restored when the driver is reloaded, the application must 
	 * be able to recover after calling this function. It is ithe responisbility of the application 
	 * to close the handle after successfully calling FT_CyclePort.
	 * @n For FT4232H, FT2232H and FT2232 devices, FT_CyclePort will only work under Windows XP and later.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="707740fa-8624-4518-bf8c-a223809f2277"/>
        <Name>FT_CyclePort</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="f755439f-1243-45f8-a99c-5e7ec525473b">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="3dd3f5cd-d58b-4ba6-8715-9c495a40c44d">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="663deeec-c342-47b1-adfa-c73575b08688">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1262</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="22d52135-7c26-4a64-a15a-d34995d157f4">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="4646b3bf-9b44-4f25-9b56-3eb58910b75d">
        <Comments>/** @noop FT_Rescan
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * This function can be of use when trying to recover devices programatically.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * Calling FT_Rescan is equivalent to clicking the &quot;Scan for hardware changes&quot; button in the Device
	 * Manager. Only USB hardware is checked for new devices. All USB devices are scanned, not just FTDI
	 * devices.
	 */</Comments>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="22d52135-7c26-4a64-a15a-d34995d157f4"/>
        <Name>FT_Rescan</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="beaffde9-6bec-4fbd-a8eb-a2a15549e720">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="83aeabf4-3adb-48a4-8556-267e74f4ab35">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="8d0f0b9e-12b5-494b-a8aa-c5de7b9dca40">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1278</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="a2c259b5-bbec-4f05-aef9-425285ed949f">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="85c78396-9245-4721-8c3c-f49fc5d71fba">
        <Comments>/** @noop FT_Reload
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * This function forces a reload of the driver for devices with a specific VID and PID combination.
	 * @param wVID Vendor ID of the devices to reload the driver for.
	 * @param wPID Product ID of the devices to reload the driver for.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * Calling FT_Reload forces the operating system to unload and reload the driver for the specified device
	 * IDs. If the VID and PID parameters are null, the drivers for USB root hubs will be reloaded, causing all
	 * USB devices connected to reload their drivers. Please note that this function will not work correctly on
	 * 64-bit Windows when called from a 32-bit application.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="13711917-e6b3-4c6f-b606-dc8edf8e19db">
          <Comments>/** @noop FT_Reload
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * This function forces a reload of the driver for devices with a specific VID and PID combination.
	 * @param wVID Vendor ID of the devices to reload the driver for.
	 * @param wPID Product ID of the devices to reload the driver for.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * Calling FT_Reload forces the operating system to unload and reload the driver for the specified device
	 * IDs. If the VID and PID parameters are null, the drivers for USB root hubs will be reloaded, causing all
	 * USB devices connected to reload their drivers. Please note that this function will not work correctly on
	 * 64-bit Windows when called from a 32-bit application.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>wVID</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="56f7bf35-358d-48d3-bdb1-4ccc57b0e5e8">
          <Comments>/** @noop FT_Reload
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * This function forces a reload of the driver for devices with a specific VID and PID combination.
	 * @param wVID Vendor ID of the devices to reload the driver for.
	 * @param wPID Product ID of the devices to reload the driver for.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * Calling FT_Reload forces the operating system to unload and reload the driver for the specified device
	 * IDs. If the VID and PID parameters are null, the drivers for USB root hubs will be reloaded, causing all
	 * USB devices connected to reload their drivers. Please note that this function will not work correctly on
	 * 64-bit Windows when called from a 32-bit application.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>wPID</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="a2c259b5-bbec-4f05-aef9-425285ed949f"/>
        <Name>FT_Reload</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="abd3a331-a826-4bba-a711-52d00f341544">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="1856cb88-38e0-4fd5-a9a2-3efbf647baf0">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="ea2d4ad2-29ea-4156-b951-5be3b3b7d92a">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1297</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6cf2f9b7-5541-4839-bcc9-82c6fc06a8e0">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="579eebcb-5c3d-442f-8511-d9c2d1b8ddc0">
        <Comments>/** @noop FT_SetResetPipeRetryCount
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Set the ResetPipeRetryCount value.
	 * @param ftHandle Handle of the device.
	 * @param dwCount Unsigned long containing required ResetPipeRetryCount.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to set the ResetPipeRetryCount. ResetPipeRetryCount controls the maximum
	 * number of times that the driver tries to reset a pipe on which an error has occurred.
	 * ResetPipeRequestRetryCount defaults to 50. It may be necessary to increase this value in noisy
	 * environments where a lot of USB errors occur.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="a3c90652-99db-4b95-8df1-d1c4862578f5">
          <Comments>/** @noop FT_SetResetPipeRetryCount
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Set the ResetPipeRetryCount value.
	 * @param ftHandle Handle of the device.
	 * @param dwCount Unsigned long containing required ResetPipeRetryCount.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to set the ResetPipeRetryCount. ResetPipeRetryCount controls the maximum
	 * number of times that the driver tries to reset a pipe on which an error has occurred.
	 * ResetPipeRequestRetryCount defaults to 50. It may be necessary to increase this value in noisy
	 * environments where a lot of USB errors occur.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="f657dbdd-ef0b-4359-af55-7d5e46cdf431">
          <Comments>/** @noop FT_SetResetPipeRetryCount
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Set the ResetPipeRetryCount value.
	 * @param ftHandle Handle of the device.
	 * @param dwCount Unsigned long containing required ResetPipeRetryCount.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to set the ResetPipeRetryCount. ResetPipeRetryCount controls the maximum
	 * number of times that the driver tries to reset a pipe on which an error has occurred.
	 * ResetPipeRequestRetryCount defaults to 50. It may be necessary to increase this value in noisy
	 * environments where a lot of USB errors occur.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwCount</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="6cf2f9b7-5541-4839-bcc9-82c6fc06a8e0"/>
        <Name>FT_SetResetPipeRetryCount</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="7485b22b-06fe-4aa5-8aee-a47df80c3d04">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="073caada-f1bf-4337-ad04-7aca37ddf718">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="114a801f-4dc8-4b91-90a9-55268dfac71e">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1318</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="3e542a29-a836-4d21-b227-b92d6f81cd13">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="30103544-8ee6-4671-bbf1-b3ce0c79a13f">
        <Comments>/** @noop FT_StopInTask
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Stops the driver&apos;s IN task.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to put the driver&apos;s IN task (read) into a wait state. It can be used in situations
	 * where data is being received continuously, so that the device can be purged without more data being
	 * received. It is used together with FT_RestartInTask which sets the IN task running again.
	 * @see FT_RestartInTask
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="be728a61-8814-49ab-8afb-4511551c0378">
          <Comments>/** @noop FT_StopInTask
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Stops the driver&apos;s IN task.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to put the driver&apos;s IN task (read) into a wait state. It can be used in situations
	 * where data is being received continuously, so that the device can be purged without more data being
	 * received. It is used together with FT_RestartInTask which sets the IN task running again.
	 * @see FT_RestartInTask
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="3e542a29-a836-4d21-b227-b92d6f81cd13"/>
        <Name>FT_StopInTask</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="bce2e1d6-208d-4511-a637-f276351788ab">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="a434ee62-4399-4d68-82d2-74e1d7e777b2">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="83d84b50-4b16-4aef-9ebd-65588131e44b">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1340</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="320b1e50-ca29-450f-9231-78164b692665">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="1b2d759c-7694-45f1-a49f-7d5dd0d6e671">
        <Comments>/** @noop FT_RestartInTask
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Restart the driver&apos;s IN task.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to restart the driver&apos;s IN task (read) after it has been stopped by a call to
	 * FT_StopInTask.
	 * @see FT_StopInTask
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="5ee039be-a9b3-4fec-ae39-e745dc7f65cd">
          <Comments>/** @noop FT_RestartInTask
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Restart the driver&apos;s IN task.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function is used to restart the driver&apos;s IN task (read) after it has been stopped by a call to
	 * FT_StopInTask.
	 * @see FT_StopInTask
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="320b1e50-ca29-450f-9231-78164b692665"/>
        <Name>FT_RestartInTask</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="e60704ae-d83d-4d8f-8111-365459c7e4e8">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="900dc4ca-9872-4036-b50f-70040792c071">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="aca74f98-a371-4119-93b5-e71b095b1cb6">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1360</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="131b658b-473c-4a20-a601-d72ddcbf7f7a">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="b7478ff7-c18a-4105-a2d5-76c52f8d5275">
        <Comments>/** @noop FT_SetDeadmanTimeout
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function allows the maximum time in milliseconds that a USB request can remain outstanding to 
	 * be set.
	 * @param ftHandle Handle of the device.
	 * @param ulDeadmanTimeout Deadman timeout value in milliseconds. Default value is 5000.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The deadman timeout is referred to in application note AN232B-10 Advanced Driver Options from the
	 * FTDI web site as the USB timeout. It is unlikely that this function will be required by most users.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="215bd05e-246d-46ba-ae86-20af0e40357d">
          <Comments>/** @noop FT_SetDeadmanTimeout
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function allows the maximum time in milliseconds that a USB request can remain outstanding to 
	 * be set.
	 * @param ftHandle Handle of the device.
	 * @param ulDeadmanTimeout Deadman timeout value in milliseconds. Default value is 5000.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The deadman timeout is referred to in application note AN232B-10 Advanced Driver Options from the
	 * FTDI web site as the USB timeout. It is unlikely that this function will be required by most users.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="534988fc-3b5e-4149-b3a6-5a59c99c5c70">
          <Comments>/** @noop FT_SetDeadmanTimeout
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function allows the maximum time in milliseconds that a USB request can remain outstanding to 
	 * be set.
	 * @param ftHandle Handle of the device.
	 * @param ulDeadmanTimeout Deadman timeout value in milliseconds. Default value is 5000.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The deadman timeout is referred to in application note AN232B-10 Advanced Driver Options from the
	 * FTDI web site as the USB timeout. It is unlikely that this function will be required by most users.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>ulDeadmanTimeout</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="131b658b-473c-4a20-a601-d72ddcbf7f7a"/>
        <Name>FT_SetDeadmanTimeout</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="13f33139-076a-43f0-9675-f2080fd1b88e">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="e05ca075-cabd-470b-a3fb-f6a4063479ed">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="26073bb1-ebae-42e2-917b-40099131f4b5">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1381</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="716b3af7-fe74-4a97-910e-2bb8cb86def1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="6c9b54c0-7278-41c3-aea0-648553c4912b">
        <Comments>/** @noop FT_IoCtl
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="57306dcd-e6cd-497c-8c20-74de42ed9dea">
          <Comments>/** @noop FT_IoCtl
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5a3fe398-2e8c-4a13-b3be-2f4982f9164d">
          <Comments>/** @noop FT_IoCtl
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwIoControlCode</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="58769bf8-ef72-4371-a200-2d54660fd81e">
          <Comments>/** @noop FT_IoCtl
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
          <Name>lpInBuf</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="741b6b4d-c948-4905-b608-9204a8bc43eb">
          <Comments>/** @noop FT_IoCtl
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>nInBufSize</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="bc35c345-3587-45a0-94b4-1bc3fee0231a">
          <Comments>/** @noop FT_IoCtl
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
          <Name>lpOutBuf</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="bb5d91ee-f60a-45d3-bda2-44b314832f75">
          <Comments>/** @noop FT_IoCtl
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>nOutBufSize</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8a11a2ab-e484-4025-8470-57e50af2bdeb">
          <Comments>/** @noop FT_IoCtl
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpBytesReturned</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="b5fc5387-cde9-4994-9a15-a63fb0217eea">
          <Comments>/** @noop FT_IoCtl
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d"/>
          <Name>lpOverlapped</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="716b3af7-fe74-4a97-910e-2bb8cb86def1"/>
        <Name>FT_IoCtl</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="c2ca50f1-c750-4372-9db2-128542b130d1">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="bafabc29-b322-447a-9ad5-3ca813059a9f">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="3b4255c6-f2ca-46aa-8f94-da5118d08dfe">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1389</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0442c32a-a387-49ef-9140-61e327884815">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="89410d44-4118-4dcb-b1e1-0c221ad54838">
        <Comments>/** @noop FT_SetWaitMask
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="bc5ed8d5-5559-4800-820b-c410c26224d0">
          <Comments>/** @noop FT_SetWaitMask
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="e43df725-242c-43a9-aeea-bc551f2712d5">
          <Comments>/** @noop FT_SetWaitMask
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>Mask</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="0442c32a-a387-49ef-9140-61e327884815"/>
        <Name>FT_SetWaitMask</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="718fdb47-7de8-42d3-b0c0-5794de31ea3e">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="9e68611f-3030-444a-9547-b75450f487c4">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="68366ca5-a122-4c7e-bb54-268d9c96495a">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1403</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="55204387-eb2d-4464-85fc-3b327e811de0">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="37325b5d-e00d-40d7-a51e-1e66eaa668dd">
        <Comments>/** @noop FT_WaitOnMask
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="4b482f77-7bff-40ef-b30e-0fe2c12adb0d">
          <Comments>/** @noop FT_WaitOnMask
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="513eeec8-42dd-4395-9f70-1048159fa71b">
          <Comments>/** @noop FT_WaitOnMask
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
          <Name>Mask</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="55204387-eb2d-4464-85fc-3b327e811de0"/>
        <Name>FT_WaitOnMask</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="17b33536-60cd-4e23-8f80-d849ee34e83b">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="640f0392-5ea7-4083-9f2b-c94b547cc1ce">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="d51b70e0-4292-4952-9a8c-7c35ecec2845">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1411</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="54bdf9a1-7743-4624-a962-78cbd4867a6e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="297d128c-a514-4c61-b84f-b546592f9fe2">
        <Comments>/** @noop FT_GetEventStatus
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="11d1538c-b1e9-4747-a0d2-1bc62380cef5">
          <Comments>/** @noop FT_GetEventStatus
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c5a0c742-2cde-44f3-b0ba-946de25dd402">
          <Comments>/** @noop FT_GetEventStatus
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
          <Name>dwEventDWord</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="54bdf9a1-7743-4624-a962-78cbd4867a6e"/>
        <Name>FT_GetEventStatus</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ae0ff5df-3242-4cd4-96ef-d4e70af12c6e">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="92226e29-b3a8-456e-bea4-c238302b4818">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="26957a3a-9c04-49e4-89a4-2f2eb3a8fd7e">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1419</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="dcd0421d-485c-4d0a-b5fc-6d7e57b28ffe">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="25c077e6-5596-47a4-b56d-0aef537e6ed7"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="6a0b91a2-742e-4b0e-b32f-14676d61e5d7">
        <Comments>/** @noop FT_ReadEE
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read a value from an EEPROM location.
	 * @param ftHandle Handle of the device.
	 * @param dwWordOffset EEPROM location to read from.
	 * @param lpwValue Pointer to the WORD value read from the EEPROM.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * EEPROMs for FTDI devices are organised by WORD, so each value returned is 16-bits wide.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="6d5f4fe3-462f-48e7-b104-2871c1523d74">
          <Comments>/** @noop FT_ReadEE
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read a value from an EEPROM location.
	 * @param ftHandle Handle of the device.
	 * @param dwWordOffset EEPROM location to read from.
	 * @param lpwValue Pointer to the WORD value read from the EEPROM.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * EEPROMs for FTDI devices are organised by WORD, so each value returned is 16-bits wide.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="52c22fdf-02a4-4d60-8083-4cca78f091db">
          <Comments>/** @noop FT_ReadEE
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read a value from an EEPROM location.
	 * @param ftHandle Handle of the device.
	 * @param dwWordOffset EEPROM location to read from.
	 * @param lpwValue Pointer to the WORD value read from the EEPROM.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * EEPROMs for FTDI devices are organised by WORD, so each value returned is 16-bits wide.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwWordOffset</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d2efe1da-6ac1-4a42-82f7-fefaed9209e1">
          <Comments>/** @noop FT_ReadEE
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read a value from an EEPROM location.
	 * @param ftHandle Handle of the device.
	 * @param dwWordOffset EEPROM location to read from.
	 * @param lpwValue Pointer to the WORD value read from the EEPROM.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * EEPROMs for FTDI devices are organised by WORD, so each value returned is 16-bits wide.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="25c077e6-5596-47a4-b56d-0aef537e6ed7"/>
          <Name>lpwValue</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="dcd0421d-485c-4d0a-b5fc-6d7e57b28ffe"/>
        <Name>FT_ReadEE</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="995c326b-c1b2-4b5a-9179-8672ffadeed3">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="543728b7-da70-4791-8719-133c30ed9600">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="6ac04be1-a439-4c2d-801e-a909ab60d30f">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1464</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="8019bbba-2a4d-42ec-9bd2-419c21379140">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="c048b616-af7a-44c6-abf8-0d0518529318">
        <Comments>/** @noop FT_WriteEE
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write a value to an EEPROM location.
	 * @param ftHandle Handle of the device.
	 * @param dwWordOffset EEPROM location to read from.
	 * @param wValue The WORD value write to the EEPROM.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * EEPROMs for FTDI devices are organised by WORD, so each value written to the EEPROM is 
	 * 16-bits wide.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="cd567d6e-fac3-4aea-855e-4227dc15d89d">
          <Comments>/** @noop FT_WriteEE
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write a value to an EEPROM location.
	 * @param ftHandle Handle of the device.
	 * @param dwWordOffset EEPROM location to read from.
	 * @param wValue The WORD value write to the EEPROM.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * EEPROMs for FTDI devices are organised by WORD, so each value written to the EEPROM is 
	 * 16-bits wide.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="4e091dc3-237b-4096-815f-a3614762f026">
          <Comments>/** @noop FT_WriteEE
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write a value to an EEPROM location.
	 * @param ftHandle Handle of the device.
	 * @param dwWordOffset EEPROM location to read from.
	 * @param wValue The WORD value write to the EEPROM.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * EEPROMs for FTDI devices are organised by WORD, so each value written to the EEPROM is 
	 * 16-bits wide.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwWordOffset</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8150480d-ebb9-4bc1-8a83-f8414de0efbd">
          <Comments>/** @noop FT_WriteEE
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write a value to an EEPROM location.
	 * @param ftHandle Handle of the device.
	 * @param dwWordOffset EEPROM location to read from.
	 * @param wValue The WORD value write to the EEPROM.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * EEPROMs for FTDI devices are organised by WORD, so each value written to the EEPROM is 
	 * 16-bits wide.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d9b23999-8774-4fd7-8789-ffce80cd6911"/>
          <Name>wValue</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="8019bbba-2a4d-42ec-9bd2-419c21379140"/>
        <Name>FT_WriteEE</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="f3ce1513-2c81-476d-9bbc-d1c014ed8e49">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="a10b3557-650a-4a28-a6ba-3f31b1a47223">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="065de2ce-53e8-48c4-bc93-0575441dc1af">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1487</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="54244788-c802-4fbf-9cea-b8f7b83b3be2">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="fa0eea5a-890e-46c5-a243-627ec7c043ee">
        <Comments>/** @noop FT_EraseEE
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Erases the device EEPROM.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function will erase the entire contents of an EEPROM, including the user area.
	 * Note that the FT232R	and FT245R devices have an internal EEPROM that cannot be erased.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="b0aa0505-0ca6-4e68-8eef-a788e0564bdf">
          <Comments>/** @noop FT_EraseEE
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Erases the device EEPROM.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function will erase the entire contents of an EEPROM, including the user area.
	 * Note that the FT232R	and FT245R devices have an internal EEPROM that cannot be erased.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="54244788-c802-4fbf-9cea-b8f7b83b3be2"/>
        <Name>FT_EraseEE</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="cb256b18-ce9a-4e1f-bc86-bdff2f6e95d5">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="dc70da52-db78-40b6-a30b-a50abad8814e">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="9fd549da-e86e-45c0-89f6-ffc8d2bfab35">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1508</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="eb3a6b95-959e-48f4-bedb-d750d05b27a1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="1f957802-25ac-4d22-8560-48218e9b2f8d"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="fa20ec77-39be-4f2e-a143-7621a5982a07">
        <Comments>/** @noop FT_EE_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that contains storage for the data to be read from the EEPROM.
	 * @n The function does not perform any checks on buffer sizes, so the buffers passed in the
	 * FT_PROGRAM_DATA structure must be big enough to accommodate their respective strings (including
	 * null terminators). The sizes shown in the following example are more than adequate and can be rounded
	 * down if necessary. The restriction is that the Manufacturer string length plus the Description string
	 * length is less than or equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h. 
	 * @see FT_PROGRAM_DATA
	 * */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="195fc6a8-f32e-4706-ab98-3f563d25d880">
          <Comments>/** @noop FT_EE_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that contains storage for the data to be read from the EEPROM.
	 * @n The function does not perform any checks on buffer sizes, so the buffers passed in the
	 * FT_PROGRAM_DATA structure must be big enough to accommodate their respective strings (including
	 * null terminators). The sizes shown in the following example are more than adequate and can be rounded
	 * down if necessary. The restriction is that the Manufacturer string length plus the Description string
	 * length is less than or equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h. 
	 * @see FT_PROGRAM_DATA
	 * */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="3799c3fd-5842-4136-ac90-980357685468">
          <Comments>/** @noop FT_EE_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that contains storage for the data to be read from the EEPROM.
	 * @n The function does not perform any checks on buffer sizes, so the buffers passed in the
	 * FT_PROGRAM_DATA structure must be big enough to accommodate their respective strings (including
	 * null terminators). The sizes shown in the following example are more than adequate and can be rounded
	 * down if necessary. The restriction is that the Manufacturer string length plus the Description string
	 * length is less than or equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h. 
	 * @see FT_PROGRAM_DATA
	 * */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1f957802-25ac-4d22-8560-48218e9b2f8d"/>
          <Name>pData</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="eb3a6b95-959e-48f4-bedb-d750d05b27a1"/>
        <Name>FT_EE_Read</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="b4dd5b12-a618-483e-aa5d-a4a2054aa603">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="aaa502f7-01d8-4f3d-955f-9d797efed47a">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="ab4476c2-ee51-4fff-aa55-1a59e6110380">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1695</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="37dbb460-95c2-459f-b112-15d5d070de7b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="1f957802-25ac-4d22-8560-48218e9b2f8d"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="85fdf4f5-34dc-4620-8eb1-459e5cf5dd92">
        <Comments>/** @noop FT_EE_ReadEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the standard FT_EE_Read function was included to provide support for languages such
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA that
	 * contains storage for the data to be read from the EEPROM.
	 * @n The function does not perform any checks on buffer sizes, so the buffers passed in the
	 * FT_PROGRAM_DATA structure must be big enough to accommodate their respective strings (including
	 * null terminators).
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * @n The string parameters in the FT_PROGRAM_DATA structure should be passed as DWORDs to avoid
	 * overlapping of parameters. All string pointers are passed out separately from the FT_PROGRAM_DATA
	 * structure.
	 * @see FT_PROGRAM_DATA
	 * */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="c6719cfb-c02b-4be1-82e1-592174d0a080">
          <Comments>/** @noop FT_EE_ReadEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the standard FT_EE_Read function was included to provide support for languages such
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA that
	 * contains storage for the data to be read from the EEPROM.
	 * @n The function does not perform any checks on buffer sizes, so the buffers passed in the
	 * FT_PROGRAM_DATA structure must be big enough to accommodate their respective strings (including
	 * null terminators).
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * @n The string parameters in the FT_PROGRAM_DATA structure should be passed as DWORDs to avoid
	 * overlapping of parameters. All string pointers are passed out separately from the FT_PROGRAM_DATA
	 * structure.
	 * @see FT_PROGRAM_DATA
	 * */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="fa13d207-5022-4877-a591-a2c80ddff3b2">
          <Comments>/** @noop FT_EE_ReadEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the standard FT_EE_Read function was included to provide support for languages such
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA that
	 * contains storage for the data to be read from the EEPROM.
	 * @n The function does not perform any checks on buffer sizes, so the buffers passed in the
	 * FT_PROGRAM_DATA structure must be big enough to accommodate their respective strings (including
	 * null terminators).
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * @n The string parameters in the FT_PROGRAM_DATA structure should be passed as DWORDs to avoid
	 * overlapping of parameters. All string pointers are passed out separately from the FT_PROGRAM_DATA
	 * structure.
	 * @see FT_PROGRAM_DATA
	 * */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1f957802-25ac-4d22-8560-48218e9b2f8d"/>
          <Name>pData</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="2312ee26-e8ba-49a5-afe0-788a09249bae">
          <Comments>/** @noop FT_EE_ReadEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the standard FT_EE_Read function was included to provide support for languages such
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA that
	 * contains storage for the data to be read from the EEPROM.
	 * @n The function does not perform any checks on buffer sizes, so the buffers passed in the
	 * FT_PROGRAM_DATA structure must be big enough to accommodate their respective strings (including
	 * null terminators).
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * @n The string parameters in the FT_PROGRAM_DATA structure should be passed as DWORDs to avoid
	 * overlapping of parameters. All string pointers are passed out separately from the FT_PROGRAM_DATA
	 * structure.
	 * @see FT_PROGRAM_DATA
	 * */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>Manufacturer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="067f4682-d7bc-4e31-8e2f-7fdc6a7f766d">
          <Comments>/** @noop FT_EE_ReadEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the standard FT_EE_Read function was included to provide support for languages such
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA that
	 * contains storage for the data to be read from the EEPROM.
	 * @n The function does not perform any checks on buffer sizes, so the buffers passed in the
	 * FT_PROGRAM_DATA structure must be big enough to accommodate their respective strings (including
	 * null terminators).
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * @n The string parameters in the FT_PROGRAM_DATA structure should be passed as DWORDs to avoid
	 * overlapping of parameters. All string pointers are passed out separately from the FT_PROGRAM_DATA
	 * structure.
	 * @see FT_PROGRAM_DATA
	 * */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>ManufacturerId</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="551f5cb4-ee22-4852-9588-b13085c92a59">
          <Comments>/** @noop FT_EE_ReadEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the standard FT_EE_Read function was included to provide support for languages such
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA that
	 * contains storage for the data to be read from the EEPROM.
	 * @n The function does not perform any checks on buffer sizes, so the buffers passed in the
	 * FT_PROGRAM_DATA structure must be big enough to accommodate their respective strings (including
	 * null terminators).
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * @n The string parameters in the FT_PROGRAM_DATA structure should be passed as DWORDs to avoid
	 * overlapping of parameters. All string pointers are passed out separately from the FT_PROGRAM_DATA
	 * structure.
	 * @see FT_PROGRAM_DATA
	 * */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>Description</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8952176c-a7be-4b8d-9b83-2368cb3980e6">
          <Comments>/** @noop FT_EE_ReadEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the standard FT_EE_Read function was included to provide support for languages such
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA that
	 * contains storage for the data to be read from the EEPROM.
	 * @n The function does not perform any checks on buffer sizes, so the buffers passed in the
	 * FT_PROGRAM_DATA structure must be big enough to accommodate their respective strings (including
	 * null terminators).
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * @n The string parameters in the FT_PROGRAM_DATA structure should be passed as DWORDs to avoid
	 * overlapping of parameters. All string pointers are passed out separately from the FT_PROGRAM_DATA
	 * structure.
	 * @see FT_PROGRAM_DATA
	 * */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>SerialNumber</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="37dbb460-95c2-459f-b112-15d5d070de7b"/>
        <Name>FT_EE_ReadEx</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="e6892725-e58f-45b5-a95d-90e647e80576">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="da3e92f8-5547-4c7d-8c7b-05c1ee52768f">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="2d1dce90-e344-42b6-a8ec-547441e71512">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1734</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="296d7b89-36c5-4ed4-af12-baffa33b3051">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="1f957802-25ac-4d22-8560-48218e9b2f8d"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="62f06ce9-e6f8-481a-8c1a-555796415fd3">
        <Comments>/** @noop FT_EE_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Program the EEPROM.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that	contains the data to write to the EEPROM. The data is written to EEPROM, then read back and 
	 * verified.
	 * @n If the SerialNumber field in FT_PROGRAM_DATA is NULL, or SerialNumber points to a NULL string, 
	 * a serial number based on the ManufacturerId and the current date and time will be generated. The
	 * Manufacturer string length plus the Description string length must be less than or equal to 40 
	 * characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being 
	 * used. This is done through the Signature1, Signature2 and Version elements of the structure. 
	 * Signature1 should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be 
	 * set to use whichever version is required. For compatibility with all current devices Version 
	 * should be set to the latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * If pData is NULL, the structure version will default to 0 (original BM series) and the device will 
	 * be programmed with the default data.
	 * @see FT_PROGRAM_DATA
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="00a9df4c-3f59-4bb4-954d-48ec4287f9f8">
          <Comments>/** @noop FT_EE_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Program the EEPROM.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that	contains the data to write to the EEPROM. The data is written to EEPROM, then read back and 
	 * verified.
	 * @n If the SerialNumber field in FT_PROGRAM_DATA is NULL, or SerialNumber points to a NULL string, 
	 * a serial number based on the ManufacturerId and the current date and time will be generated. The
	 * Manufacturer string length plus the Description string length must be less than or equal to 40 
	 * characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being 
	 * used. This is done through the Signature1, Signature2 and Version elements of the structure. 
	 * Signature1 should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be 
	 * set to use whichever version is required. For compatibility with all current devices Version 
	 * should be set to the latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * If pData is NULL, the structure version will default to 0 (original BM series) and the device will 
	 * be programmed with the default data.
	 * @see FT_PROGRAM_DATA
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="33c8351a-ec61-45bd-860a-b97dbd4ea4fd">
          <Comments>/** @noop FT_EE_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Program the EEPROM.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that	contains the data to write to the EEPROM. The data is written to EEPROM, then read back and 
	 * verified.
	 * @n If the SerialNumber field in FT_PROGRAM_DATA is NULL, or SerialNumber points to a NULL string, 
	 * a serial number based on the ManufacturerId and the current date and time will be generated. The
	 * Manufacturer string length plus the Description string length must be less than or equal to 40 
	 * characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being 
	 * used. This is done through the Signature1, Signature2 and Version elements of the structure. 
	 * Signature1 should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be 
	 * set to use whichever version is required. For compatibility with all current devices Version 
	 * should be set to the latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * If pData is NULL, the structure version will default to 0 (original BM series) and the device will 
	 * be programmed with the default data.
	 * @see FT_PROGRAM_DATA
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1f957802-25ac-4d22-8560-48218e9b2f8d"/>
          <Name>pData</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="296d7b89-36c5-4ed4-af12-baffa33b3051"/>
        <Name>FT_EE_Program</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="4b0e7898-dc62-4903-839a-abdc256c4e96">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="7b120a54-f440-4dda-89b6-35f18b878d76">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="88c54541-e8ed-4c82-891e-7fe9280cfed6">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1772</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="465cfabc-ee67-405b-a5cb-eaae58759cab">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="1f957802-25ac-4d22-8560-48218e9b2f8d"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="1412e7e8-3526-4cf0-841f-ba2cf30662fc">
        <Comments>/** @noop FT_EE_ProgramEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Program the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the FT_EE_Program function was included to provide support for languages such 
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that contains the data to write to the EEPROM. The data is written to EEPROM, then read back and 
	 * verified. The string pointer parameters in the FT_PROGRAM_DATA structure should be allocated as 
	 * DWORDs to avoid overlapping of parameters. The string parameters are then passed in separately.
	 * @n If the SerialNumber field is NULL, or SerialNumber points to a NULL string, a serial number based 
	 * on the ManufacturerId and the current date and time will be generated. The Manufacturer string 
	 * length plus the Description string length must be less than or equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * If pData is NULL, the structure version will default to 0 (original BM series) and the device will be
	 * programmed with the default data.
	 * @see FT_PROGRAM_DATA
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="c15a603b-472e-46c7-949c-d22493cfdb33">
          <Comments>/** @noop FT_EE_ProgramEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Program the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the FT_EE_Program function was included to provide support for languages such 
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that contains the data to write to the EEPROM. The data is written to EEPROM, then read back and 
	 * verified. The string pointer parameters in the FT_PROGRAM_DATA structure should be allocated as 
	 * DWORDs to avoid overlapping of parameters. The string parameters are then passed in separately.
	 * @n If the SerialNumber field is NULL, or SerialNumber points to a NULL string, a serial number based 
	 * on the ManufacturerId and the current date and time will be generated. The Manufacturer string 
	 * length plus the Description string length must be less than or equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * If pData is NULL, the structure version will default to 0 (original BM series) and the device will be
	 * programmed with the default data.
	 * @see FT_PROGRAM_DATA
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="78f4b33f-c463-48dc-aae6-c0a4ce08b26b">
          <Comments>/** @noop FT_EE_ProgramEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Program the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the FT_EE_Program function was included to provide support for languages such 
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that contains the data to write to the EEPROM. The data is written to EEPROM, then read back and 
	 * verified. The string pointer parameters in the FT_PROGRAM_DATA structure should be allocated as 
	 * DWORDs to avoid overlapping of parameters. The string parameters are then passed in separately.
	 * @n If the SerialNumber field is NULL, or SerialNumber points to a NULL string, a serial number based 
	 * on the ManufacturerId and the current date and time will be generated. The Manufacturer string 
	 * length plus the Description string length must be less than or equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * If pData is NULL, the structure version will default to 0 (original BM series) and the device will be
	 * programmed with the default data.
	 * @see FT_PROGRAM_DATA
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="1f957802-25ac-4d22-8560-48218e9b2f8d"/>
          <Name>pData</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="13ae98a1-348c-48cd-83c7-83beff07a94c">
          <Comments>/** @noop FT_EE_ProgramEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Program the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the FT_EE_Program function was included to provide support for languages such 
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that contains the data to write to the EEPROM. The data is written to EEPROM, then read back and 
	 * verified. The string pointer parameters in the FT_PROGRAM_DATA structure should be allocated as 
	 * DWORDs to avoid overlapping of parameters. The string parameters are then passed in separately.
	 * @n If the SerialNumber field is NULL, or SerialNumber points to a NULL string, a serial number based 
	 * on the ManufacturerId and the current date and time will be generated. The Manufacturer string 
	 * length plus the Description string length must be less than or equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * If pData is NULL, the structure version will default to 0 (original BM series) and the device will be
	 * programmed with the default data.
	 * @see FT_PROGRAM_DATA
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>Manufacturer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="b7135458-c3e0-4b9d-982b-03fd93058714">
          <Comments>/** @noop FT_EE_ProgramEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Program the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the FT_EE_Program function was included to provide support for languages such 
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that contains the data to write to the EEPROM. The data is written to EEPROM, then read back and 
	 * verified. The string pointer parameters in the FT_PROGRAM_DATA structure should be allocated as 
	 * DWORDs to avoid overlapping of parameters. The string parameters are then passed in separately.
	 * @n If the SerialNumber field is NULL, or SerialNumber points to a NULL string, a serial number based 
	 * on the ManufacturerId and the current date and time will be generated. The Manufacturer string 
	 * length plus the Description string length must be less than or equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * If pData is NULL, the structure version will default to 0 (original BM series) and the device will be
	 * programmed with the default data.
	 * @see FT_PROGRAM_DATA
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>ManufacturerId</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="9421b8e3-16c4-4fe5-8b8d-2c595abc71e4">
          <Comments>/** @noop FT_EE_ProgramEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Program the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the FT_EE_Program function was included to provide support for languages such 
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that contains the data to write to the EEPROM. The data is written to EEPROM, then read back and 
	 * verified. The string pointer parameters in the FT_PROGRAM_DATA structure should be allocated as 
	 * DWORDs to avoid overlapping of parameters. The string parameters are then passed in separately.
	 * @n If the SerialNumber field is NULL, or SerialNumber points to a NULL string, a serial number based 
	 * on the ManufacturerId and the current date and time will be generated. The Manufacturer string 
	 * length plus the Description string length must be less than or equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * If pData is NULL, the structure version will default to 0 (original BM series) and the device will be
	 * programmed with the default data.
	 * @see FT_PROGRAM_DATA
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>Description</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="02097860-386b-44aa-bd1b-574888cd277b">
          <Comments>/** @noop FT_EE_ProgramEx
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Program the EEPROM and pass strings separately.
	 * @param ftHandle Handle of the device.
	 * @param pData Pointer to structure of type FT_PROGRAM_DATA.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This variation of the FT_EE_Program function was included to provide support for languages such 
	 * as LabVIEW where problems can occur when string pointers are contained in a structure.
	 * @n This function interprets the parameter pData as a pointer to a structure of type FT_PROGRAM_DATA 
	 * that contains the data to write to the EEPROM. The data is written to EEPROM, then read back and 
	 * verified. The string pointer parameters in the FT_PROGRAM_DATA structure should be allocated as 
	 * DWORDs to avoid overlapping of parameters. The string parameters are then passed in separately.
	 * @n If the SerialNumber field is NULL, or SerialNumber points to a NULL string, a serial number based 
	 * on the ManufacturerId and the current date and time will be generated. The Manufacturer string 
	 * length plus the Description string length must be less than or equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the FT_PROGRAM_DATA structure is being used.
	 * This is done through the Signature1, Signature2 and Version elements of the structure. Signature1
	 * should always be 0x00000000, Signature2 should always be 0xFFFFFFFF and Version can be set to use
	 * whichever version is required. For compatibility with all current devices Version should be set to the
	 * latest version of the FT_PROGRAM_DATA structure which is defined in FTD2XX.h.
	 * If pData is NULL, the structure version will default to 0 (original BM series) and the device will be
	 * programmed with the default data.
	 * @see FT_PROGRAM_DATA
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>SerialNumber</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="465cfabc-ee67-405b-a5cb-eaae58759cab"/>
        <Name>FT_EE_ProgramEx</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="49024f3c-93fe-42e5-9bc4-53bfb5ce5622">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="bd5b7578-e69d-45db-9139-0d0988202cf9">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="87954c9d-4488-49b6-9a3e-dab6cdd48a39">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1812</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c2a2c6f0-0e23-471f-9bd7-63c2dffe8902">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="b15db1e6-225f-41d6-87c7-2a7792df85a2">
        <Comments>/** @noop FT_EE_UASize
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get the available size of the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param lpdwSize Pointer to a DWORD that receives the available size, in bytes, of the EEPROM 
	 * user area.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The user area of an FTDI device EEPROM is the total area of the EEPROM that is unused by device
	 * configuration information and descriptors. This area is available to the user to store information 
	 * specific	to their application. The size of the user area depends on the length of the Manufacturer,
	 * ManufacturerId, Description and SerialNumber strings programmed into the EEPROM.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="a21a8738-284f-40fd-a232-247b085aa5d3">
          <Comments>/** @noop FT_EE_UASize
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get the available size of the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param lpdwSize Pointer to a DWORD that receives the available size, in bytes, of the EEPROM 
	 * user area.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The user area of an FTDI device EEPROM is the total area of the EEPROM that is unused by device
	 * configuration information and descriptors. This area is available to the user to store information 
	 * specific	to their application. The size of the user area depends on the length of the Manufacturer,
	 * ManufacturerId, Description and SerialNumber strings programmed into the EEPROM.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="214adb9d-5af6-476b-9998-5508388aab30">
          <Comments>/** @noop FT_EE_UASize
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get the available size of the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param lpdwSize Pointer to a DWORD that receives the available size, in bytes, of the EEPROM 
	 * user area.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * The user area of an FTDI device EEPROM is the total area of the EEPROM that is unused by device
	 * configuration information and descriptors. This area is available to the user to store information 
	 * specific	to their application. The size of the user area depends on the length of the Manufacturer,
	 * ManufacturerId, Description and SerialNumber strings programmed into the EEPROM.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwSize</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="c2a2c6f0-0e23-471f-9bd7-63c2dffe8902"/>
        <Name>FT_EE_UASize</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="1786c86e-96e1-46f0-b057-a95c86ec0534">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="fdea8e84-15c4-44c0-a00e-d1d0c6cccc86">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="50b3e100-c548-4d4e-8f7e-38f818cbd308">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1840</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="20ad5db2-4635-4d4b-a239-b98027432506">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="7bb9d57b-16ea-45ec-a2c8-c200bbe9c70d">
        <Comments>/** @noop FT_EE_UARead
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param pucData Pointer to a buffer that contains storage for data to be read.
	 * @param dwDataLen Size, in bytes, of buffer that contains storage for the data to be read.
	 * @param lpdwBytesRead Pointer to a DWORD that receives the number of bytes read.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pucData as a pointer to an array of bytes of size 
	 * dwDataLen that contains storage for the data to be read from the EEPROM user area. The actual 
	 * number of bytes read is stored in the DWORD referenced by lpdwBytesRead.
	 * @n If dwDataLen is less than the size of the EEPROM user area, then dwDataLen bytes are read 
	 * into the buffer. Otherwise, the whole of the EEPROM user area is read into the buffer. The 
	 * available user area size can be determined by calling FT_EE_UASize.
	 * @n An application should check the function return value and lpdwBytesRead when FT_EE_UARead 
	 * returns.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="8ed5e096-b878-42d1-bd3b-f966cb3f530e">
          <Comments>/** @noop FT_EE_UARead
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param pucData Pointer to a buffer that contains storage for data to be read.
	 * @param dwDataLen Size, in bytes, of buffer that contains storage for the data to be read.
	 * @param lpdwBytesRead Pointer to a DWORD that receives the number of bytes read.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pucData as a pointer to an array of bytes of size 
	 * dwDataLen that contains storage for the data to be read from the EEPROM user area. The actual 
	 * number of bytes read is stored in the DWORD referenced by lpdwBytesRead.
	 * @n If dwDataLen is less than the size of the EEPROM user area, then dwDataLen bytes are read 
	 * into the buffer. Otherwise, the whole of the EEPROM user area is read into the buffer. The 
	 * available user area size can be determined by calling FT_EE_UASize.
	 * @n An application should check the function return value and lpdwBytesRead when FT_EE_UARead 
	 * returns.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="02aab5a6-f30d-490c-99f7-b893c75f2894">
          <Comments>/** @noop FT_EE_UARead
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param pucData Pointer to a buffer that contains storage for data to be read.
	 * @param dwDataLen Size, in bytes, of buffer that contains storage for the data to be read.
	 * @param lpdwBytesRead Pointer to a DWORD that receives the number of bytes read.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pucData as a pointer to an array of bytes of size 
	 * dwDataLen that contains storage for the data to be read from the EEPROM user area. The actual 
	 * number of bytes read is stored in the DWORD referenced by lpdwBytesRead.
	 * @n If dwDataLen is less than the size of the EEPROM user area, then dwDataLen bytes are read 
	 * into the buffer. Otherwise, the whole of the EEPROM user area is read into the buffer. The 
	 * available user area size can be determined by calling FT_EE_UASize.
	 * @n An application should check the function return value and lpdwBytesRead when FT_EE_UARead 
	 * returns.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8"/>
          <Name>pucData</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="014ff479-82a1-47fa-9249-7613efeb224a">
          <Comments>/** @noop FT_EE_UARead
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param pucData Pointer to a buffer that contains storage for data to be read.
	 * @param dwDataLen Size, in bytes, of buffer that contains storage for the data to be read.
	 * @param lpdwBytesRead Pointer to a DWORD that receives the number of bytes read.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pucData as a pointer to an array of bytes of size 
	 * dwDataLen that contains storage for the data to be read from the EEPROM user area. The actual 
	 * number of bytes read is stored in the DWORD referenced by lpdwBytesRead.
	 * @n If dwDataLen is less than the size of the EEPROM user area, then dwDataLen bytes are read 
	 * into the buffer. Otherwise, the whole of the EEPROM user area is read into the buffer. The 
	 * available user area size can be determined by calling FT_EE_UASize.
	 * @n An application should check the function return value and lpdwBytesRead when FT_EE_UARead 
	 * returns.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwDataLen</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="a3272fd9-5cba-44a2-9401-47f37fc1c47c">
          <Comments>/** @noop FT_EE_UARead
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read the contents of the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param pucData Pointer to a buffer that contains storage for data to be read.
	 * @param dwDataLen Size, in bytes, of buffer that contains storage for the data to be read.
	 * @param lpdwBytesRead Pointer to a DWORD that receives the number of bytes read.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pucData as a pointer to an array of bytes of size 
	 * dwDataLen that contains storage for the data to be read from the EEPROM user area. The actual 
	 * number of bytes read is stored in the DWORD referenced by lpdwBytesRead.
	 * @n If dwDataLen is less than the size of the EEPROM user area, then dwDataLen bytes are read 
	 * into the buffer. Otherwise, the whole of the EEPROM user area is read into the buffer. The 
	 * available user area size can be determined by calling FT_EE_UASize.
	 * @n An application should check the function return value and lpdwBytesRead when FT_EE_UARead 
	 * returns.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwBytesRead</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="20ad5db2-4635-4d4b-a239-b98027432506"/>
        <Name>FT_EE_UARead</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="73e503c7-70cc-4884-af03-16e4683e62d9">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="b134e3e8-1d9b-45c4-b361-d8223b5bf457">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="958e948d-6f15-46ac-b12b-592dc271dfc8">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1869</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0fde3f3c-ee65-4c72-8428-0f2b0e49247b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="3f756fe9-6b70-445c-abc2-720073d8ae70">
        <Comments>/** @noop FT_EE_UAWrite
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data into the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param pucData Pointer to a buffer that contains the data to be written.
	 * @param dwDataLen Size, in bytes, of buffer that contains storage for the data to be read.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pucData as a pointer to an array of bytes of size 
	 * dwDataLen that contains the data to be written to the EEPROM user area. It is a programming 
	 * error for dwDataLen to be greater than the size of the EEPROM user area. The available user 
	 * area size can be determined by calling FT_EE_UASize.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="76afe166-b415-41b2-8ca3-efd50664526f">
          <Comments>/** @noop FT_EE_UAWrite
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data into the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param pucData Pointer to a buffer that contains the data to be written.
	 * @param dwDataLen Size, in bytes, of buffer that contains storage for the data to be read.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pucData as a pointer to an array of bytes of size 
	 * dwDataLen that contains the data to be written to the EEPROM user area. It is a programming 
	 * error for dwDataLen to be greater than the size of the EEPROM user area. The available user 
	 * area size can be determined by calling FT_EE_UASize.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="a44e9d4d-efe1-4ddb-99af-5f2e327a58f8">
          <Comments>/** @noop FT_EE_UAWrite
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data into the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param pucData Pointer to a buffer that contains the data to be written.
	 * @param dwDataLen Size, in bytes, of buffer that contains storage for the data to be read.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pucData as a pointer to an array of bytes of size 
	 * dwDataLen that contains the data to be written to the EEPROM user area. It is a programming 
	 * error for dwDataLen to be greater than the size of the EEPROM user area. The available user 
	 * area size can be determined by calling FT_EE_UASize.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8"/>
          <Name>pucData</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="b7c340de-b272-4f80-a95c-e645e0e6fff2">
          <Comments>/** @noop FT_EE_UAWrite
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data into the EEPROM user area.
	 * @param ftHandle Handle of the device.
	 * @param pucData Pointer to a buffer that contains the data to be written.
	 * @param dwDataLen Size, in bytes, of buffer that contains storage for the data to be read.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter pucData as a pointer to an array of bytes of size 
	 * dwDataLen that contains the data to be written to the EEPROM user area. It is a programming 
	 * error for dwDataLen to be greater than the size of the EEPROM user area. The available user 
	 * area size can be determined by calling FT_EE_UASize.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwDataLen</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="0fde3f3c-ee65-4c72-8428-0f2b0e49247b"/>
        <Name>FT_EE_UAWrite</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="df07723e-d24a-4b8a-8cc9-3bf66ffd8514">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="3f6c08cf-b33b-418c-a68a-673790777e37">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="47f56e8d-c759-4931-9d27-1d7ee80f0cc9">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>1895</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="24f865ae-f359-47c6-9096-12a1e33bee30">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="a5bbdefc-ac01-49e1-ac58-b9569dbf90bd">
        <Comments>/** @noop FT_EEPROM_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary 
	 * Read data from the EEPROM, this command will work for all existing FTDI chipset, and must be 
	 * used for the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be read.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be read.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer	name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="3432cc9d-c965-4c23-8b39-7228ab7df5cf">
          <Comments>/** @noop FT_EEPROM_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary 
	 * Read data from the EEPROM, this command will work for all existing FTDI chipset, and must be 
	 * used for the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be read.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be read.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer	name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="16cc6c75-ea54-4df9-af2e-1f9451d2d7fa">
          <Comments>/** @noop FT_EEPROM_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary 
	 * Read data from the EEPROM, this command will work for all existing FTDI chipset, and must be 
	 * used for the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be read.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be read.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer	name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
          <Name>eepromData</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="f5244541-719b-4886-8d1e-25f58cb4496f">
          <Comments>/** @noop FT_EEPROM_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary 
	 * Read data from the EEPROM, this command will work for all existing FTDI chipset, and must be 
	 * used for the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be read.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be read.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer	name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>eepromDataSize</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="840d9521-92c6-43f8-9fbb-f1aaf3d49408">
          <Comments>/** @noop FT_EEPROM_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary 
	 * Read data from the EEPROM, this command will work for all existing FTDI chipset, and must be 
	 * used for the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be read.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be read.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer	name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>Manufacturer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="70110557-800b-4e6c-b017-ad0c974f345f">
          <Comments>/** @noop FT_EEPROM_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary 
	 * Read data from the EEPROM, this command will work for all existing FTDI chipset, and must be 
	 * used for the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be read.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be read.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer	name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>ManufacturerId</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="dfc50649-0bfd-47c1-b1a1-50aa770d00f0">
          <Comments>/** @noop FT_EEPROM_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary 
	 * Read data from the EEPROM, this command will work for all existing FTDI chipset, and must be 
	 * used for the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be read.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be read.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer	name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>Description</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="00c45385-f3cb-4a60-acf8-6e6e9ff9498d">
          <Comments>/** @noop FT_EEPROM_Read
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary 
	 * Read data from the EEPROM, this command will work for all existing FTDI chipset, and must be 
	 * used for the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be read.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be read.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer	name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>SerialNumber</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="24f865ae-f359-47c6-9096-12a1e33bee30"/>
        <Name>FT_EEPROM_Read</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="b216fc7a-bc93-4dda-b0ba-566dbd3e6a81">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="1ed74d4e-5ff5-4bb1-bad8-d07a3b89e7d3">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="146dcdcd-c253-4841-8b3a-0082d78b77bf">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2419</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="4c6d66b8-dae7-4a6f-9daa-44b4591ee6d0">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="8a60ac39-5db1-4b71-909f-05e623f2f3f3">
        <Comments>/** @noop FT_EEPROM_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary
	 * Write data into the EEPROM, this command will work for all existing FTDI chipset, and must be used for
	 * the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be written.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be written.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * @n The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="83d1d067-20e8-4239-9d13-c83986d6beeb">
          <Comments>/** @noop FT_EEPROM_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary
	 * Write data into the EEPROM, this command will work for all existing FTDI chipset, and must be used for
	 * the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be written.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be written.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * @n The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d6299278-19d2-4557-9101-3058675a834e">
          <Comments>/** @noop FT_EEPROM_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary
	 * Write data into the EEPROM, this command will work for all existing FTDI chipset, and must be used for
	 * the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be written.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be written.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * @n The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="35c006cc-80d0-45d9-afb9-17c55d1ecd65"/>
          <Name>eepromData</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="2ff3afb1-6929-4816-9a39-0829569d8068">
          <Comments>/** @noop FT_EEPROM_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary
	 * Write data into the EEPROM, this command will work for all existing FTDI chipset, and must be used for
	 * the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be written.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be written.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * @n The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>eepromDataSize</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="996d2256-87c4-42ea-94ca-6470391f30ea">
          <Comments>/** @noop FT_EEPROM_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary
	 * Write data into the EEPROM, this command will work for all existing FTDI chipset, and must be used for
	 * the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be written.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be written.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * @n The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>Manufacturer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="19d643cf-eb55-4f18-98db-5235a7066ee7">
          <Comments>/** @noop FT_EEPROM_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary
	 * Write data into the EEPROM, this command will work for all existing FTDI chipset, and must be used for
	 * the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be written.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be written.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * @n The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>ManufacturerId</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d1df2e92-8b89-4410-85a4-3c935967e830">
          <Comments>/** @noop FT_EEPROM_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary
	 * Write data into the EEPROM, this command will work for all existing FTDI chipset, and must be used for
	 * the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be written.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be written.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * @n The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>Description</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="57ca0260-900f-467f-9017-df617ae92955">
          <Comments>/** @noop FT_EEPROM_Program
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (XP and later)
	 * @par Summary
	 * Write data into the EEPROM, this command will work for all existing FTDI chipset, and must be used for
	 * the FT-X series.
	 * @param ftHandle Handle of the device.
	 * @param *eepromData Pointer to a buffer that contains the data to be written.
	 * Note: This structure is different for each device type.
	 * @param eepromDataSize Size of the eepromData buffer that contains storage for the data to be written.
	 * @param *Manufacturer Pointer to a null-terminated string containing the manufacturer name.
	 * @param *ManufacturerId Pointer to a null-terminated string containing the manufacturer ID.
	 * @param *Description Pointer to a null-terminated string containing the device description.
	 * @param *SerialNumber Pointer to a null-terminated string containing the device serial number.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function interprets the parameter *eepromDATA as a pointer to a structure matching the device
	 * type being accessed e.g.
	 * @li PFT_EEPROM_232B is the structure for FT2xxB devices.
	 * @li PFT_EEPROM_2232 is the structure for FT2232D devices.
	 * @li PFT_EEPROM_232R is the structure for FT232R devices.
	 * @li PFT_EEPROM_2232H is the structure for FT2232H devices.
	 * @li PFT_EEPROM_4232H is the structure for FT4232H devices.
	 * @li PFT_EEPROM_232H is the structure for FT232H devices.
	 * @li PFT_EEPROM_X_SERIES is the structure for FT2xxX devices.
	 * 
	 * The function does not perform any checks on buffer sizes, so the buffers passed in the eepromDATA
	 * structure must be big enough to accommodate their respective strings (including null terminators).
	 * @n The sizes shown in the following example are more than adequate and can be rounded down if necessary.
	 * The restriction is that the Manufacturer string length plus the Description string length is less than or
	 * equal to 40 characters.
	 * @note Note that the DLL must be informed which version of the eepromDATA structure is being used. This is
	 * done through the PFT_EEPROM_HEADER structure. The first element of this structure is deviceType and
	 * may be FT_DEVICE_BM, FT_DEVICE_AM, FT_DEVICE_2232C, FT_DEVICE_232R, FT_DEVICE_2232H,
	 * FT_DEVICE_4232H, FT_DEVICE_232H, or FT_DEVICE_X_SERIES as defined in FTD2XX.h.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="651d031b-5da2-41bd-b566-5c052bfe874b"/>
          <Name>SerialNumber</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="4c6d66b8-dae7-4a6f-9daa-44b4591ee6d0"/>
        <Name>FT_EEPROM_Program</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="e266850c-a61e-4ba3-9351-e048be5b0be2">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="bac27e25-4108-41dc-b1f4-249ea6de72c2">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="cb47b2b7-d02b-4ec6-9fec-8cf794110b5a">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2468</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6bd0f932-6697-4cad-9441-f8072e804202">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="2a74b663-2e0f-411c-9208-6c112a8b3358">
        <Comments>/** @noop FT_SetLatencyTimer
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Set the latency timer value.
	 * @param ftHandle Handle of the device.
	 * @param ucLatency Required value, in milliseconds, of latency timer. Valid range is 2 - 255.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * In the FT8U232AM and FT8U245AM devices, the receive buffer timeout that is used to flush remaining
	 * data from the receive buffer was fixed at 16 ms. In all other FTDI devices, this timeout is 
	 * programmable and can be set at 1 ms intervals between 2ms and 255 ms. This allows the device to 
	 * be better optimize for protocols requiring faster response times from short data packets.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="e1dbbf37-aa4a-48c3-ba6c-547f47528007">
          <Comments>/** @noop FT_SetLatencyTimer
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Set the latency timer value.
	 * @param ftHandle Handle of the device.
	 * @param ucLatency Required value, in milliseconds, of latency timer. Valid range is 2 - 255.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * In the FT8U232AM and FT8U245AM devices, the receive buffer timeout that is used to flush remaining
	 * data from the receive buffer was fixed at 16 ms. In all other FTDI devices, this timeout is 
	 * programmable and can be set at 1 ms intervals between 2ms and 255 ms. This allows the device to 
	 * be better optimize for protocols requiring faster response times from short data packets.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="7d6b8337-c4cb-4f1a-afc0-4ba67f47c7c9">
          <Comments>/** @noop FT_SetLatencyTimer
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Set the latency timer value.
	 * @param ftHandle Handle of the device.
	 * @param ucLatency Required value, in milliseconds, of latency timer. Valid range is 2 - 255.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * In the FT8U232AM and FT8U245AM devices, the receive buffer timeout that is used to flush remaining
	 * data from the receive buffer was fixed at 16 ms. In all other FTDI devices, this timeout is 
	 * programmable and can be set at 1 ms intervals between 2ms and 255 ms. This allows the device to 
	 * be better optimize for protocols requiring faster response times from short data packets.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ucLatency</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="6bd0f932-6697-4cad-9441-f8072e804202"/>
        <Name>FT_SetLatencyTimer</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="9892e61a-9242-4297-9b69-c766c9bef3a9">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="add96c82-9d15-4562-a236-917872e4bf51">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="8cda48e9-4478-40e6-8b77-eecdde1bc057">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2505</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="bcefdaec-94eb-4a0d-8551-5f499ff5b82a">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="543e67a1-d5e0-4698-8dfc-e7115390385b">
        <Comments>/** @noop FT_GetLatencyTimer
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get the current value of the latency timer.
	 * @param ftHandle Handle of the device.
	 * @param pucLatency Pointer to unsigned char to store latency timer value.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * In the FT8U232AM and FT8U245AM devices, the receive buffer timeout that is used to flush remaining
	 * data from the receive buffer was fixed at 16 ms. In all other FTDI devices, this timeout is 
	 * programmable and can be set at 1 ms intervals between 2ms and 255 ms. This allows the device to  
	 * be better optimized for protocols requiring faster response times from short data packets.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="13d87be4-6e08-4056-a443-0758ee3edbc6">
          <Comments>/** @noop FT_GetLatencyTimer
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get the current value of the latency timer.
	 * @param ftHandle Handle of the device.
	 * @param pucLatency Pointer to unsigned char to store latency timer value.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * In the FT8U232AM and FT8U245AM devices, the receive buffer timeout that is used to flush remaining
	 * data from the receive buffer was fixed at 16 ms. In all other FTDI devices, this timeout is 
	 * programmable and can be set at 1 ms intervals between 2ms and 255 ms. This allows the device to  
	 * be better optimized for protocols requiring faster response times from short data packets.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="54d3e6e2-b392-45e4-84f8-bb2a24806d9d">
          <Comments>/** @noop FT_GetLatencyTimer
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Get the current value of the latency timer.
	 * @param ftHandle Handle of the device.
	 * @param pucLatency Pointer to unsigned char to store latency timer value.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * In the FT8U232AM and FT8U245AM devices, the receive buffer timeout that is used to flush remaining
	 * data from the receive buffer was fixed at 16 ms. In all other FTDI devices, this timeout is 
	 * programmable and can be set at 1 ms intervals between 2ms and 255 ms. This allows the device to  
	 * be better optimized for protocols requiring faster response times from short data packets.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8"/>
          <Name>pucLatency</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="bcefdaec-94eb-4a0d-8551-5f499ff5b82a"/>
        <Name>FT_GetLatencyTimer</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="25d01669-1f1f-430b-bae7-ef6983e4e488">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="39aca5b0-de5e-4304-b178-7a575775f813">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="727c4ffb-0a04-458d-81cd-51ca7391687b">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2528</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="02084d51-2091-43c5-a690-81dab89d0311">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="1a227cba-516c-466a-acec-4fd5825f3db3">
        <Comments>/** @noop FT_SetBitMode
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Enables different chip modes.
	 * @param ftHandle Handle of the device.
	 * @param ucMask Required value for bit mode mask. This sets up which bits are inputs and outputs.
	 * A bit value of 0 sets the corresponding pin to an input, a bit value of 1 sets the corresponding 
	 * pin to an output.
	 * @n In the case of CBUS Bit Bang, the upper nibble of this value controls which pins are inputs 
	 * and outputs,	while the lower nibble controls which of the outputs are high and low.
	 * @param ucEnable Mode value. Can be one of the following:
	 * @li 0x0 = Reset
	 * @li 0x1 = Asynchronous Bit Bang
	 * @li 0x2 = MPSSE (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x4 = Synchronous Bit Bang (FT232R, FT245R, FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x8 = MCU Host Bus Emulation Mode (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x10 = Fast Opto-Isolated Serial Mode (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x20 = CBUS Bit Bang Mode (FT232R and FT232H devices only)
	 * @li 0x40 = Single Channel Synchronous 245 FIFO Mode (FT2232H and FT232H devices only)
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For a description of available bit modes for the FT232R, see the application note &quot;Bit Bang Modes 
	 * for the FT232R and FT245R&quot;.
	 * @n For a description of available bit modes for the FT2232, see the application note &quot;Bit Mode
	 * Functions for the FT2232&quot;.
	 * @n For a description of Bit Bang Mode for the FT232B and FT245B, see the application note 
	 * &quot;FT232B/FT245B Bit Bang Mode&quot;.
	 * @n Application notes are available for download from the FTDI website.
	 * Note that to use CBUS Bit Bang for the FT232R, the CBUS must be configured for CBUS Bit Bang in the
	 * EEPROM.
	 * @note Note that to use Single Channel Synchronous 245 FIFO mode for the FT2232H, channel A must be
	 * configured for FT245 FIFO mode in the EEPROM.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="3f5d3049-dd26-4ca0-b573-122be15ec207">
          <Comments>/** @noop FT_SetBitMode
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Enables different chip modes.
	 * @param ftHandle Handle of the device.
	 * @param ucMask Required value for bit mode mask. This sets up which bits are inputs and outputs.
	 * A bit value of 0 sets the corresponding pin to an input, a bit value of 1 sets the corresponding 
	 * pin to an output.
	 * @n In the case of CBUS Bit Bang, the upper nibble of this value controls which pins are inputs 
	 * and outputs,	while the lower nibble controls which of the outputs are high and low.
	 * @param ucEnable Mode value. Can be one of the following:
	 * @li 0x0 = Reset
	 * @li 0x1 = Asynchronous Bit Bang
	 * @li 0x2 = MPSSE (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x4 = Synchronous Bit Bang (FT232R, FT245R, FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x8 = MCU Host Bus Emulation Mode (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x10 = Fast Opto-Isolated Serial Mode (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x20 = CBUS Bit Bang Mode (FT232R and FT232H devices only)
	 * @li 0x40 = Single Channel Synchronous 245 FIFO Mode (FT2232H and FT232H devices only)
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For a description of available bit modes for the FT232R, see the application note &quot;Bit Bang Modes 
	 * for the FT232R and FT245R&quot;.
	 * @n For a description of available bit modes for the FT2232, see the application note &quot;Bit Mode
	 * Functions for the FT2232&quot;.
	 * @n For a description of Bit Bang Mode for the FT232B and FT245B, see the application note 
	 * &quot;FT232B/FT245B Bit Bang Mode&quot;.
	 * @n Application notes are available for download from the FTDI website.
	 * Note that to use CBUS Bit Bang for the FT232R, the CBUS must be configured for CBUS Bit Bang in the
	 * EEPROM.
	 * @note Note that to use Single Channel Synchronous 245 FIFO mode for the FT2232H, channel A must be
	 * configured for FT245 FIFO mode in the EEPROM.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="eb88eba8-47f6-45bf-8440-8f58c7db2d37">
          <Comments>/** @noop FT_SetBitMode
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Enables different chip modes.
	 * @param ftHandle Handle of the device.
	 * @param ucMask Required value for bit mode mask. This sets up which bits are inputs and outputs.
	 * A bit value of 0 sets the corresponding pin to an input, a bit value of 1 sets the corresponding 
	 * pin to an output.
	 * @n In the case of CBUS Bit Bang, the upper nibble of this value controls which pins are inputs 
	 * and outputs,	while the lower nibble controls which of the outputs are high and low.
	 * @param ucEnable Mode value. Can be one of the following:
	 * @li 0x0 = Reset
	 * @li 0x1 = Asynchronous Bit Bang
	 * @li 0x2 = MPSSE (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x4 = Synchronous Bit Bang (FT232R, FT245R, FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x8 = MCU Host Bus Emulation Mode (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x10 = Fast Opto-Isolated Serial Mode (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x20 = CBUS Bit Bang Mode (FT232R and FT232H devices only)
	 * @li 0x40 = Single Channel Synchronous 245 FIFO Mode (FT2232H and FT232H devices only)
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For a description of available bit modes for the FT232R, see the application note &quot;Bit Bang Modes 
	 * for the FT232R and FT245R&quot;.
	 * @n For a description of available bit modes for the FT2232, see the application note &quot;Bit Mode
	 * Functions for the FT2232&quot;.
	 * @n For a description of Bit Bang Mode for the FT232B and FT245B, see the application note 
	 * &quot;FT232B/FT245B Bit Bang Mode&quot;.
	 * @n Application notes are available for download from the FTDI website.
	 * Note that to use CBUS Bit Bang for the FT232R, the CBUS must be configured for CBUS Bit Bang in the
	 * EEPROM.
	 * @note Note that to use Single Channel Synchronous 245 FIFO mode for the FT2232H, channel A must be
	 * configured for FT245 FIFO mode in the EEPROM.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ucMask</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="b19e0a07-8c6c-4746-b918-2d12980333be">
          <Comments>/** @noop FT_SetBitMode
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Enables different chip modes.
	 * @param ftHandle Handle of the device.
	 * @param ucMask Required value for bit mode mask. This sets up which bits are inputs and outputs.
	 * A bit value of 0 sets the corresponding pin to an input, a bit value of 1 sets the corresponding 
	 * pin to an output.
	 * @n In the case of CBUS Bit Bang, the upper nibble of this value controls which pins are inputs 
	 * and outputs,	while the lower nibble controls which of the outputs are high and low.
	 * @param ucEnable Mode value. Can be one of the following:
	 * @li 0x0 = Reset
	 * @li 0x1 = Asynchronous Bit Bang
	 * @li 0x2 = MPSSE (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x4 = Synchronous Bit Bang (FT232R, FT245R, FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x8 = MCU Host Bus Emulation Mode (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x10 = Fast Opto-Isolated Serial Mode (FT2232, FT2232H, FT4232H and FT232H devices only)
	 * @li 0x20 = CBUS Bit Bang Mode (FT232R and FT232H devices only)
	 * @li 0x40 = Single Channel Synchronous 245 FIFO Mode (FT2232H and FT232H devices only)
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For a description of available bit modes for the FT232R, see the application note &quot;Bit Bang Modes 
	 * for the FT232R and FT245R&quot;.
	 * @n For a description of available bit modes for the FT2232, see the application note &quot;Bit Mode
	 * Functions for the FT2232&quot;.
	 * @n For a description of Bit Bang Mode for the FT232B and FT245B, see the application note 
	 * &quot;FT232B/FT245B Bit Bang Mode&quot;.
	 * @n Application notes are available for download from the FTDI website.
	 * Note that to use CBUS Bit Bang for the FT232R, the CBUS must be configured for CBUS Bit Bang in the
	 * EEPROM.
	 * @note Note that to use Single Channel Synchronous 245 FIFO mode for the FT2232H, channel A must be
	 * configured for FT245 FIFO mode in the EEPROM.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ucEnable</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="02084d51-2091-43c5-a690-81dab89d0311"/>
        <Name>FT_SetBitMode</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="88a938ed-8db6-4c94-9972-7691713e9642">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="86904911-fb92-4e55-ae9c-af1dca685c24">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="777a5304-4b43-4048-96ef-5e8c39718643">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2571</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="a34a39ea-cd60-4d13-92b0-d700ecdcc44a">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="20908d58-bfba-4f8a-8c18-ffb890adaa87">
        <Comments>/** @noop FT_GetBitMode
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the instantaneous value of the data bus.
	 * @param ftHandle Handle of the device.
	 * @param pucMode Pointer to unsigned char to store the instantaneous data bus value.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For a description of available bit modes for the FT232R, see the application note &quot;Bit Bang Modes 
	 * for the FT232R and FT245R&quot;.
	 * @n For a description of available bit modes for the FT2232, see the application note &quot;Bit Mode 
	 * Functions for the FT2232&quot;.
	 * @n For a description of bit bang modes for the FT232B and FT245B, see the application note
	 * &quot;FT232B/FT245B Bit Bang Mode&quot;.
	 * @n For a description of bit modes supported by the FT4232H and FT2232H devices, please see the 
	 * IC data sheets.
	 * @n These application notes are available for download from the FTDI website.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="44777951-9b94-4ead-972d-6db3e87cb6ac">
          <Comments>/** @noop FT_GetBitMode
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the instantaneous value of the data bus.
	 * @param ftHandle Handle of the device.
	 * @param pucMode Pointer to unsigned char to store the instantaneous data bus value.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For a description of available bit modes for the FT232R, see the application note &quot;Bit Bang Modes 
	 * for the FT232R and FT245R&quot;.
	 * @n For a description of available bit modes for the FT2232, see the application note &quot;Bit Mode 
	 * Functions for the FT2232&quot;.
	 * @n For a description of bit bang modes for the FT232B and FT245B, see the application note
	 * &quot;FT232B/FT245B Bit Bang Mode&quot;.
	 * @n For a description of bit modes supported by the FT4232H and FT2232H devices, please see the 
	 * IC data sheets.
	 * @n These application notes are available for download from the FTDI website.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="b7ec99dc-d0e8-4f22-8936-0010ff766d86">
          <Comments>/** @noop FT_GetBitMode
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the instantaneous value of the data bus.
	 * @param ftHandle Handle of the device.
	 * @param pucMode Pointer to unsigned char to store the instantaneous data bus value.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * For a description of available bit modes for the FT232R, see the application note &quot;Bit Bang Modes 
	 * for the FT232R and FT245R&quot;.
	 * @n For a description of available bit modes for the FT2232, see the application note &quot;Bit Mode 
	 * Functions for the FT2232&quot;.
	 * @n For a description of bit bang modes for the FT232B and FT245B, see the application note
	 * &quot;FT232B/FT245B Bit Bang Mode&quot;.
	 * @n For a description of bit modes supported by the FT4232H and FT2232H devices, please see the 
	 * IC data sheets.
	 * @n These application notes are available for download from the FTDI website.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8"/>
          <Name>pucMode</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="a34a39ea-cd60-4d13-92b0-d700ecdcc44a"/>
        <Name>FT_GetBitMode</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="9e617801-ed6d-403e-9096-eb69daaf1570">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="aecea3e0-89e0-4415-9c68-b698c7ec2d5c">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="b0b897f0-0216-4f48-bdf0-736af23d469a">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2600</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="3d5f6df3-c7e4-4724-87d1-efac4c715918">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="98507caa-441d-4030-a1ae-c97ec07c90a2">
        <Comments>/** @noop FT_SetUSBParameters
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Set the USB request transfer size.
	 * @param ftHandle Handle of the device.
	 * @param ulInTransferSize Transfer size for USB IN request.
	 * @param ulOutTransferSize Transfer size for USB OUT request.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function can be used to change the transfer sizes from the default transfer size of 4096 
	 * bytes to	better suit the application requirements. Transfer sizes must be set to a multiple 
	 * of 64 bytes between 64 bytes and 64k bytes.
	 * @n When FT_SetUSBParameters is called, the change comes into effect immediately and any data 
	 * that was	held in the driver at the time of the change is lost.
	 * @note Note that, at present, only ulInTransferSize is supported.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="314565d3-cf15-40f4-bf34-41ee9d116d0d">
          <Comments>/** @noop FT_SetUSBParameters
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Set the USB request transfer size.
	 * @param ftHandle Handle of the device.
	 * @param ulInTransferSize Transfer size for USB IN request.
	 * @param ulOutTransferSize Transfer size for USB OUT request.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function can be used to change the transfer sizes from the default transfer size of 4096 
	 * bytes to	better suit the application requirements. Transfer sizes must be set to a multiple 
	 * of 64 bytes between 64 bytes and 64k bytes.
	 * @n When FT_SetUSBParameters is called, the change comes into effect immediately and any data 
	 * that was	held in the driver at the time of the change is lost.
	 * @note Note that, at present, only ulInTransferSize is supported.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="7ae8afbf-9d78-4373-967c-b6307cc2aa8c">
          <Comments>/** @noop FT_SetUSBParameters
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Set the USB request transfer size.
	 * @param ftHandle Handle of the device.
	 * @param ulInTransferSize Transfer size for USB IN request.
	 * @param ulOutTransferSize Transfer size for USB OUT request.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function can be used to change the transfer sizes from the default transfer size of 4096 
	 * bytes to	better suit the application requirements. Transfer sizes must be set to a multiple 
	 * of 64 bytes between 64 bytes and 64k bytes.
	 * @n When FT_SetUSBParameters is called, the change comes into effect immediately and any data 
	 * that was	held in the driver at the time of the change is lost.
	 * @note Note that, at present, only ulInTransferSize is supported.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>ulInTransferSize</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="a985c1a3-abc5-4f0b-a4cb-858c684e66fc">
          <Comments>/** @noop FT_SetUSBParameters
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Set the USB request transfer size.
	 * @param ftHandle Handle of the device.
	 * @param ulInTransferSize Transfer size for USB IN request.
	 * @param ulOutTransferSize Transfer size for USB OUT request.
	 * @returns
	 * FT_OK if successful, otherwise the return value is an FT error code.
	 * @remarks
	 * This function can be used to change the transfer sizes from the default transfer size of 4096 
	 * bytes to	better suit the application requirements. Transfer sizes must be set to a multiple 
	 * of 64 bytes between 64 bytes and 64k bytes.
	 * @n When FT_SetUSBParameters is called, the change comes into effect immediately and any data 
	 * that was	held in the driver at the time of the change is lost.
	 * @note Note that, at present, only ulInTransferSize is supported.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>ulOutTransferSize</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="3d5f6df3-c7e4-4724-87d1-efac4c715918"/>
        <Name>FT_SetUSBParameters</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ab13e1b9-2a64-46fb-a86f-3d0cdf7885f2">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="a58f56b0-1241-407c-b46f-d060dfbeb21b">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="df6d6173-9671-4159-a48f-a41b0e62211d">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2626</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="beecb5d7-511d-4f5e-aea7-8e81659823b3">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="a50dee62-8629-4c30-8133-cd47a12cf74e"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="6c1b2ed3-8410-458b-8d99-15b99384cd69"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="bea86721-abbf-4265-ad2e-4a4a5e6ed61f"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="125b78d4-eb40-4134-923f-8c0085f93095">
        <Comments>/** @noop FT_W32_CreateFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Opens the specified device and return a handle which will be used for subsequent accesses. 
	 * The device can be specified by its serial number, device description, or location.
	 * @n This function must be used if overlapped I/O is required.
	 * @param lpszName Meaning depends on the value of dwAttrsAndFlags. Can be a pointer to a null 
	 * terminated string that contains the description or serial number of the device, or can be 
	 * the location of the device. These values can be obtained from the FT_CreateDeviceInfoList, 
	 * FT_GetDeviceInfoDetail or FT_ListDevices	functions.
	 * @param dwAccess Type of access to the device. Access can be GENERIC_READ,
	 * GENERIC_WRITE or both. Ignored in Linux.
	 * @param dwShareMode How the device is shared. This value must be set to 0.
	 * @param lpSecurityAttributes This parameter has no effect and should be set to NULL.
	 * @param dwCreate This parameter must be set to OPEN_EXISTING. Ignored in Linux.
	 * @param dwAttrsAndFlags File attributes and flags. This parameter is a combination of
	 * FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER if lpszName is the device’s serial number, and
	 * FT_OPEN_BY_DESCRIPTION if lpszName is the device’s description.
	 * @param hTemplate This parameter must be NULL.
	 * @returns
	 * If the function is successful, the return value is a handle.
	 * If the function is unsuccessful, the return value is the Win32 error code INVALID_HANDLE_VALUE.
	 * @remarks
	 * The meaning of lpszName depends on dwAttrsAndFlags: if FT_OPEN_BY_SERIAL_NUMBER or
	 * FT_OPEN_BY_DESCRIPTION is set in dwAttrsAndFlags, lpszName contains a pointer to a null terminated
	 * string that contains the device&apos;s serial number or description; if FT_OPEN_BY_LOCATION is set in
	 * dwAttrsAndFlags, lpszName is interpreted as a value of type long that contains the location ID of 
	 * the device. dwAccess can be GENERIC_READ, GENERIC_WRITE or both; dwShareMode must be set to 0;
	 * lpSecurityAttributes must be set to NULL; dwCreate must be set to OPEN_EXISTING; dwAttrsAndFlags 
	 * is a combination of FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION; hTemplate
	 * must be NULL.
	 * @note Note that Linux, Mac OS X and Windows CE do not support overlapped IO. Windows CE
	 * does not support location IDs.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="5259cd8c-bbf4-4d7a-9bd6-5a668592f56c">
          <Comments>/** @noop FT_W32_CreateFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Opens the specified device and return a handle which will be used for subsequent accesses. 
	 * The device can be specified by its serial number, device description, or location.
	 * @n This function must be used if overlapped I/O is required.
	 * @param lpszName Meaning depends on the value of dwAttrsAndFlags. Can be a pointer to a null 
	 * terminated string that contains the description or serial number of the device, or can be 
	 * the location of the device. These values can be obtained from the FT_CreateDeviceInfoList, 
	 * FT_GetDeviceInfoDetail or FT_ListDevices	functions.
	 * @param dwAccess Type of access to the device. Access can be GENERIC_READ,
	 * GENERIC_WRITE or both. Ignored in Linux.
	 * @param dwShareMode How the device is shared. This value must be set to 0.
	 * @param lpSecurityAttributes This parameter has no effect and should be set to NULL.
	 * @param dwCreate This parameter must be set to OPEN_EXISTING. Ignored in Linux.
	 * @param dwAttrsAndFlags File attributes and flags. This parameter is a combination of
	 * FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER if lpszName is the device’s serial number, and
	 * FT_OPEN_BY_DESCRIPTION if lpszName is the device’s description.
	 * @param hTemplate This parameter must be NULL.
	 * @returns
	 * If the function is successful, the return value is a handle.
	 * If the function is unsuccessful, the return value is the Win32 error code INVALID_HANDLE_VALUE.
	 * @remarks
	 * The meaning of lpszName depends on dwAttrsAndFlags: if FT_OPEN_BY_SERIAL_NUMBER or
	 * FT_OPEN_BY_DESCRIPTION is set in dwAttrsAndFlags, lpszName contains a pointer to a null terminated
	 * string that contains the device&apos;s serial number or description; if FT_OPEN_BY_LOCATION is set in
	 * dwAttrsAndFlags, lpszName is interpreted as a value of type long that contains the location ID of 
	 * the device. dwAccess can be GENERIC_READ, GENERIC_WRITE or both; dwShareMode must be set to 0;
	 * lpSecurityAttributes must be set to NULL; dwCreate must be set to OPEN_EXISTING; dwAttrsAndFlags 
	 * is a combination of FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION; hTemplate
	 * must be NULL.
	 * @note Note that Linux, Mac OS X and Windows CE do not support overlapped IO. Windows CE
	 * does not support location IDs.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="a50dee62-8629-4c30-8133-cd47a12cf74e"/>
          <Name>lpszName</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="189f6cfb-65f6-4422-b8c4-5d3252fc5ecc">
          <Comments>/** @noop FT_W32_CreateFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Opens the specified device and return a handle which will be used for subsequent accesses. 
	 * The device can be specified by its serial number, device description, or location.
	 * @n This function must be used if overlapped I/O is required.
	 * @param lpszName Meaning depends on the value of dwAttrsAndFlags. Can be a pointer to a null 
	 * terminated string that contains the description or serial number of the device, or can be 
	 * the location of the device. These values can be obtained from the FT_CreateDeviceInfoList, 
	 * FT_GetDeviceInfoDetail or FT_ListDevices	functions.
	 * @param dwAccess Type of access to the device. Access can be GENERIC_READ,
	 * GENERIC_WRITE or both. Ignored in Linux.
	 * @param dwShareMode How the device is shared. This value must be set to 0.
	 * @param lpSecurityAttributes This parameter has no effect and should be set to NULL.
	 * @param dwCreate This parameter must be set to OPEN_EXISTING. Ignored in Linux.
	 * @param dwAttrsAndFlags File attributes and flags. This parameter is a combination of
	 * FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER if lpszName is the device’s serial number, and
	 * FT_OPEN_BY_DESCRIPTION if lpszName is the device’s description.
	 * @param hTemplate This parameter must be NULL.
	 * @returns
	 * If the function is successful, the return value is a handle.
	 * If the function is unsuccessful, the return value is the Win32 error code INVALID_HANDLE_VALUE.
	 * @remarks
	 * The meaning of lpszName depends on dwAttrsAndFlags: if FT_OPEN_BY_SERIAL_NUMBER or
	 * FT_OPEN_BY_DESCRIPTION is set in dwAttrsAndFlags, lpszName contains a pointer to a null terminated
	 * string that contains the device&apos;s serial number or description; if FT_OPEN_BY_LOCATION is set in
	 * dwAttrsAndFlags, lpszName is interpreted as a value of type long that contains the location ID of 
	 * the device. dwAccess can be GENERIC_READ, GENERIC_WRITE or both; dwShareMode must be set to 0;
	 * lpSecurityAttributes must be set to NULL; dwCreate must be set to OPEN_EXISTING; dwAttrsAndFlags 
	 * is a combination of FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION; hTemplate
	 * must be NULL.
	 * @note Note that Linux, Mac OS X and Windows CE do not support overlapped IO. Windows CE
	 * does not support location IDs.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwAccess</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c8f0c848-121e-45be-ae45-da7c056ca349">
          <Comments>/** @noop FT_W32_CreateFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Opens the specified device and return a handle which will be used for subsequent accesses. 
	 * The device can be specified by its serial number, device description, or location.
	 * @n This function must be used if overlapped I/O is required.
	 * @param lpszName Meaning depends on the value of dwAttrsAndFlags. Can be a pointer to a null 
	 * terminated string that contains the description or serial number of the device, or can be 
	 * the location of the device. These values can be obtained from the FT_CreateDeviceInfoList, 
	 * FT_GetDeviceInfoDetail or FT_ListDevices	functions.
	 * @param dwAccess Type of access to the device. Access can be GENERIC_READ,
	 * GENERIC_WRITE or both. Ignored in Linux.
	 * @param dwShareMode How the device is shared. This value must be set to 0.
	 * @param lpSecurityAttributes This parameter has no effect and should be set to NULL.
	 * @param dwCreate This parameter must be set to OPEN_EXISTING. Ignored in Linux.
	 * @param dwAttrsAndFlags File attributes and flags. This parameter is a combination of
	 * FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER if lpszName is the device’s serial number, and
	 * FT_OPEN_BY_DESCRIPTION if lpszName is the device’s description.
	 * @param hTemplate This parameter must be NULL.
	 * @returns
	 * If the function is successful, the return value is a handle.
	 * If the function is unsuccessful, the return value is the Win32 error code INVALID_HANDLE_VALUE.
	 * @remarks
	 * The meaning of lpszName depends on dwAttrsAndFlags: if FT_OPEN_BY_SERIAL_NUMBER or
	 * FT_OPEN_BY_DESCRIPTION is set in dwAttrsAndFlags, lpszName contains a pointer to a null terminated
	 * string that contains the device&apos;s serial number or description; if FT_OPEN_BY_LOCATION is set in
	 * dwAttrsAndFlags, lpszName is interpreted as a value of type long that contains the location ID of 
	 * the device. dwAccess can be GENERIC_READ, GENERIC_WRITE or both; dwShareMode must be set to 0;
	 * lpSecurityAttributes must be set to NULL; dwCreate must be set to OPEN_EXISTING; dwAttrsAndFlags 
	 * is a combination of FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION; hTemplate
	 * must be NULL.
	 * @note Note that Linux, Mac OS X and Windows CE do not support overlapped IO. Windows CE
	 * does not support location IDs.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwShareMode</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="4dd37019-3b42-4201-bf11-260851a7c421">
          <Comments>/** @noop FT_W32_CreateFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Opens the specified device and return a handle which will be used for subsequent accesses. 
	 * The device can be specified by its serial number, device description, or location.
	 * @n This function must be used if overlapped I/O is required.
	 * @param lpszName Meaning depends on the value of dwAttrsAndFlags. Can be a pointer to a null 
	 * terminated string that contains the description or serial number of the device, or can be 
	 * the location of the device. These values can be obtained from the FT_CreateDeviceInfoList, 
	 * FT_GetDeviceInfoDetail or FT_ListDevices	functions.
	 * @param dwAccess Type of access to the device. Access can be GENERIC_READ,
	 * GENERIC_WRITE or both. Ignored in Linux.
	 * @param dwShareMode How the device is shared. This value must be set to 0.
	 * @param lpSecurityAttributes This parameter has no effect and should be set to NULL.
	 * @param dwCreate This parameter must be set to OPEN_EXISTING. Ignored in Linux.
	 * @param dwAttrsAndFlags File attributes and flags. This parameter is a combination of
	 * FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER if lpszName is the device’s serial number, and
	 * FT_OPEN_BY_DESCRIPTION if lpszName is the device’s description.
	 * @param hTemplate This parameter must be NULL.
	 * @returns
	 * If the function is successful, the return value is a handle.
	 * If the function is unsuccessful, the return value is the Win32 error code INVALID_HANDLE_VALUE.
	 * @remarks
	 * The meaning of lpszName depends on dwAttrsAndFlags: if FT_OPEN_BY_SERIAL_NUMBER or
	 * FT_OPEN_BY_DESCRIPTION is set in dwAttrsAndFlags, lpszName contains a pointer to a null terminated
	 * string that contains the device&apos;s serial number or description; if FT_OPEN_BY_LOCATION is set in
	 * dwAttrsAndFlags, lpszName is interpreted as a value of type long that contains the location ID of 
	 * the device. dwAccess can be GENERIC_READ, GENERIC_WRITE or both; dwShareMode must be set to 0;
	 * lpSecurityAttributes must be set to NULL; dwCreate must be set to OPEN_EXISTING; dwAttrsAndFlags 
	 * is a combination of FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION; hTemplate
	 * must be NULL.
	 * @note Note that Linux, Mac OS X and Windows CE do not support overlapped IO. Windows CE
	 * does not support location IDs.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="6c1b2ed3-8410-458b-8d99-15b99384cd69"/>
          <Name>lpSecurityAttributes</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="951234fa-9475-48ea-8951-9b98753e1d54">
          <Comments>/** @noop FT_W32_CreateFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Opens the specified device and return a handle which will be used for subsequent accesses. 
	 * The device can be specified by its serial number, device description, or location.
	 * @n This function must be used if overlapped I/O is required.
	 * @param lpszName Meaning depends on the value of dwAttrsAndFlags. Can be a pointer to a null 
	 * terminated string that contains the description or serial number of the device, or can be 
	 * the location of the device. These values can be obtained from the FT_CreateDeviceInfoList, 
	 * FT_GetDeviceInfoDetail or FT_ListDevices	functions.
	 * @param dwAccess Type of access to the device. Access can be GENERIC_READ,
	 * GENERIC_WRITE or both. Ignored in Linux.
	 * @param dwShareMode How the device is shared. This value must be set to 0.
	 * @param lpSecurityAttributes This parameter has no effect and should be set to NULL.
	 * @param dwCreate This parameter must be set to OPEN_EXISTING. Ignored in Linux.
	 * @param dwAttrsAndFlags File attributes and flags. This parameter is a combination of
	 * FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER if lpszName is the device’s serial number, and
	 * FT_OPEN_BY_DESCRIPTION if lpszName is the device’s description.
	 * @param hTemplate This parameter must be NULL.
	 * @returns
	 * If the function is successful, the return value is a handle.
	 * If the function is unsuccessful, the return value is the Win32 error code INVALID_HANDLE_VALUE.
	 * @remarks
	 * The meaning of lpszName depends on dwAttrsAndFlags: if FT_OPEN_BY_SERIAL_NUMBER or
	 * FT_OPEN_BY_DESCRIPTION is set in dwAttrsAndFlags, lpszName contains a pointer to a null terminated
	 * string that contains the device&apos;s serial number or description; if FT_OPEN_BY_LOCATION is set in
	 * dwAttrsAndFlags, lpszName is interpreted as a value of type long that contains the location ID of 
	 * the device. dwAccess can be GENERIC_READ, GENERIC_WRITE or both; dwShareMode must be set to 0;
	 * lpSecurityAttributes must be set to NULL; dwCreate must be set to OPEN_EXISTING; dwAttrsAndFlags 
	 * is a combination of FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION; hTemplate
	 * must be NULL.
	 * @note Note that Linux, Mac OS X and Windows CE do not support overlapped IO. Windows CE
	 * does not support location IDs.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwCreate</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d0224741-a575-406b-8d6e-489e9e4df1f4">
          <Comments>/** @noop FT_W32_CreateFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Opens the specified device and return a handle which will be used for subsequent accesses. 
	 * The device can be specified by its serial number, device description, or location.
	 * @n This function must be used if overlapped I/O is required.
	 * @param lpszName Meaning depends on the value of dwAttrsAndFlags. Can be a pointer to a null 
	 * terminated string that contains the description or serial number of the device, or can be 
	 * the location of the device. These values can be obtained from the FT_CreateDeviceInfoList, 
	 * FT_GetDeviceInfoDetail or FT_ListDevices	functions.
	 * @param dwAccess Type of access to the device. Access can be GENERIC_READ,
	 * GENERIC_WRITE or both. Ignored in Linux.
	 * @param dwShareMode How the device is shared. This value must be set to 0.
	 * @param lpSecurityAttributes This parameter has no effect and should be set to NULL.
	 * @param dwCreate This parameter must be set to OPEN_EXISTING. Ignored in Linux.
	 * @param dwAttrsAndFlags File attributes and flags. This parameter is a combination of
	 * FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER if lpszName is the device’s serial number, and
	 * FT_OPEN_BY_DESCRIPTION if lpszName is the device’s description.
	 * @param hTemplate This parameter must be NULL.
	 * @returns
	 * If the function is successful, the return value is a handle.
	 * If the function is unsuccessful, the return value is the Win32 error code INVALID_HANDLE_VALUE.
	 * @remarks
	 * The meaning of lpszName depends on dwAttrsAndFlags: if FT_OPEN_BY_SERIAL_NUMBER or
	 * FT_OPEN_BY_DESCRIPTION is set in dwAttrsAndFlags, lpszName contains a pointer to a null terminated
	 * string that contains the device&apos;s serial number or description; if FT_OPEN_BY_LOCATION is set in
	 * dwAttrsAndFlags, lpszName is interpreted as a value of type long that contains the location ID of 
	 * the device. dwAccess can be GENERIC_READ, GENERIC_WRITE or both; dwShareMode must be set to 0;
	 * lpSecurityAttributes must be set to NULL; dwCreate must be set to OPEN_EXISTING; dwAttrsAndFlags 
	 * is a combination of FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION; hTemplate
	 * must be NULL.
	 * @note Note that Linux, Mac OS X and Windows CE do not support overlapped IO. Windows CE
	 * does not support location IDs.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwAttrsAndFlags</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="3952ad23-7fb4-4050-a540-73135533811b">
          <Comments>/** @noop FT_W32_CreateFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Opens the specified device and return a handle which will be used for subsequent accesses. 
	 * The device can be specified by its serial number, device description, or location.
	 * @n This function must be used if overlapped I/O is required.
	 * @param lpszName Meaning depends on the value of dwAttrsAndFlags. Can be a pointer to a null 
	 * terminated string that contains the description or serial number of the device, or can be 
	 * the location of the device. These values can be obtained from the FT_CreateDeviceInfoList, 
	 * FT_GetDeviceInfoDetail or FT_ListDevices	functions.
	 * @param dwAccess Type of access to the device. Access can be GENERIC_READ,
	 * GENERIC_WRITE or both. Ignored in Linux.
	 * @param dwShareMode How the device is shared. This value must be set to 0.
	 * @param lpSecurityAttributes This parameter has no effect and should be set to NULL.
	 * @param dwCreate This parameter must be set to OPEN_EXISTING. Ignored in Linux.
	 * @param dwAttrsAndFlags File attributes and flags. This parameter is a combination of
	 * FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER if lpszName is the device’s serial number, and
	 * FT_OPEN_BY_DESCRIPTION if lpszName is the device’s description.
	 * @param hTemplate This parameter must be NULL.
	 * @returns
	 * If the function is successful, the return value is a handle.
	 * If the function is unsuccessful, the return value is the Win32 error code INVALID_HANDLE_VALUE.
	 * @remarks
	 * The meaning of lpszName depends on dwAttrsAndFlags: if FT_OPEN_BY_SERIAL_NUMBER or
	 * FT_OPEN_BY_DESCRIPTION is set in dwAttrsAndFlags, lpszName contains a pointer to a null terminated
	 * string that contains the device&apos;s serial number or description; if FT_OPEN_BY_LOCATION is set in
	 * dwAttrsAndFlags, lpszName is interpreted as a value of type long that contains the location ID of 
	 * the device. dwAccess can be GENERIC_READ, GENERIC_WRITE or both; dwShareMode must be set to 0;
	 * lpSecurityAttributes must be set to NULL; dwCreate must be set to OPEN_EXISTING; dwAttrsAndFlags 
	 * is a combination of FILE_ATTRIBUTE_NORMAL, FILE_FLAG_OVERLAPPED if overlapped I/O is used,
	 * FT_OPEN_BY_SERIAL_NUMBER or FT_OPEN_BY_DESCRIPTION or FT_OPEN_BY_LOCATION; hTemplate
	 * must be NULL.
	 * @note Note that Linux, Mac OS X and Windows CE do not support overlapped IO. Windows CE
	 * does not support location IDs.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="bea86721-abbf-4265-ad2e-4a4a5e6ed61f"/>
          <Name>hTemplate</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="beecb5d7-511d-4f5e-aea7-8e81659823b3"/>
        <Name>FT_W32_CreateFile</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ca8f9610-cc18-4566-aea6-77626e53622f">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="bf8c59e8-c81b-4878-a17d-d30170980011">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="0239b17b-aeb6-4959-986f-fe6341c22825">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2682</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="59d35491-06d9-4b85-bf42-d63d392c0213">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="3070a15a-37fa-4f51-b59c-11cbac54e774">
        <Comments>/** @noop FT_W32_CloseHandle
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Close the specified device handle.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="724117a7-bc1a-411b-b96c-93008398d39e">
          <Comments>/** @noop FT_W32_CloseHandle
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Close the specified device handle.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="59d35491-06d9-4b85-bf42-d63d392c0213"/>
        <Name>FT_W32_CloseHandle</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="f3d0397b-0f73-4761-9a90-4319bf40e516">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="515241bb-a193-4be3-9a1e-03995ad81664">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="3228e7db-c08e-4a5a-acd8-d7e6e45b90b3">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2705</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="5310ba62-5e6b-4bf9-8280-42ed3e7f1701">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="bf251cc0-c98a-48ce-9089-dc4ce7bcebde">
        <Comments>/** @noop FT_W32_ReadFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to a buffer that receives the data from the device.
	 * @param nBufferSize Number of bytes to read from the device.
	 * @param lpdwBytesReturned Pointer to a variable that receives the number of bytes read from
	 * the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns 
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X 
	 * and Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes read in lpdwBytesReturned.
	 * This function does not return until dwBytesToRead have been read into the buffer. The number of 
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed as dwBytesToRead so that the function reads the device and returns immediately.
	 * @n When a read timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToRead have been read, whichever occurs first. If a 
	 * timeout occurred, any available data is read into lpBuffer and the function returns a non-zero value.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the 
	 * buffer. If the return value is non-zero and lpdwBytesReturned is equal to dwBytesToRead then the 
	 * function has	completed normally. If the return value is non-zero and lpdwBytesReturned is less 
	 * then dwBytesToRead then a timeout has occurred, and the read request has been partially completed. 
	 * @note Note that if a timeout	occurred and no data was read, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and 
	 * perform some additional work while the request is pending. This contrasts with the case 
	 * of non-overlapped I/O in	which the application issues a request and receives control again only 
	 * after the request has been completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure. If there is 
	 * enough data in the receive queue to satisfy the request, the request completes immediately and 
	 * the return code is non-zero. The number of bytes read is returned in lpdwBytesReturned.
	 * @n If there is not enough data in the receive queue to satisfy the request, the request completes
	 * immediately, and the return code is zero, signifying an error. An application should call
	 * FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING, the
	 * overlapped operation is still in progress, and the application can perform other processing. 
	 * Eventually, the application checks the result of the overlapped request by calling 
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes read is returned in lpdwBytesReturned.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="564243e8-37a1-4715-9010-f27bcd28d746">
          <Comments>/** @noop FT_W32_ReadFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to a buffer that receives the data from the device.
	 * @param nBufferSize Number of bytes to read from the device.
	 * @param lpdwBytesReturned Pointer to a variable that receives the number of bytes read from
	 * the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns 
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X 
	 * and Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes read in lpdwBytesReturned.
	 * This function does not return until dwBytesToRead have been read into the buffer. The number of 
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed as dwBytesToRead so that the function reads the device and returns immediately.
	 * @n When a read timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToRead have been read, whichever occurs first. If a 
	 * timeout occurred, any available data is read into lpBuffer and the function returns a non-zero value.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the 
	 * buffer. If the return value is non-zero and lpdwBytesReturned is equal to dwBytesToRead then the 
	 * function has	completed normally. If the return value is non-zero and lpdwBytesReturned is less 
	 * then dwBytesToRead then a timeout has occurred, and the read request has been partially completed. 
	 * @note Note that if a timeout	occurred and no data was read, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and 
	 * perform some additional work while the request is pending. This contrasts with the case 
	 * of non-overlapped I/O in	which the application issues a request and receives control again only 
	 * after the request has been completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure. If there is 
	 * enough data in the receive queue to satisfy the request, the request completes immediately and 
	 * the return code is non-zero. The number of bytes read is returned in lpdwBytesReturned.
	 * @n If there is not enough data in the receive queue to satisfy the request, the request completes
	 * immediately, and the return code is zero, signifying an error. An application should call
	 * FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING, the
	 * overlapped operation is still in progress, and the application can perform other processing. 
	 * Eventually, the application checks the result of the overlapped request by calling 
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes read is returned in lpdwBytesReturned.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="de4c270f-7142-4727-ace8-5ea690bdd3a1">
          <Comments>/** @noop FT_W32_ReadFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to a buffer that receives the data from the device.
	 * @param nBufferSize Number of bytes to read from the device.
	 * @param lpdwBytesReturned Pointer to a variable that receives the number of bytes read from
	 * the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns 
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X 
	 * and Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes read in lpdwBytesReturned.
	 * This function does not return until dwBytesToRead have been read into the buffer. The number of 
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed as dwBytesToRead so that the function reads the device and returns immediately.
	 * @n When a read timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToRead have been read, whichever occurs first. If a 
	 * timeout occurred, any available data is read into lpBuffer and the function returns a non-zero value.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the 
	 * buffer. If the return value is non-zero and lpdwBytesReturned is equal to dwBytesToRead then the 
	 * function has	completed normally. If the return value is non-zero and lpdwBytesReturned is less 
	 * then dwBytesToRead then a timeout has occurred, and the read request has been partially completed. 
	 * @note Note that if a timeout	occurred and no data was read, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and 
	 * perform some additional work while the request is pending. This contrasts with the case 
	 * of non-overlapped I/O in	which the application issues a request and receives control again only 
	 * after the request has been completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure. If there is 
	 * enough data in the receive queue to satisfy the request, the request completes immediately and 
	 * the return code is non-zero. The number of bytes read is returned in lpdwBytesReturned.
	 * @n If there is not enough data in the receive queue to satisfy the request, the request completes
	 * immediately, and the return code is zero, signifying an error. An application should call
	 * FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING, the
	 * overlapped operation is still in progress, and the application can perform other processing. 
	 * Eventually, the application checks the result of the overlapped request by calling 
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes read is returned in lpdwBytesReturned.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
          <Name>lpBuffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8117527b-79e1-4b0f-8175-87f191bd59cd">
          <Comments>/** @noop FT_W32_ReadFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to a buffer that receives the data from the device.
	 * @param nBufferSize Number of bytes to read from the device.
	 * @param lpdwBytesReturned Pointer to a variable that receives the number of bytes read from
	 * the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns 
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X 
	 * and Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes read in lpdwBytesReturned.
	 * This function does not return until dwBytesToRead have been read into the buffer. The number of 
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed as dwBytesToRead so that the function reads the device and returns immediately.
	 * @n When a read timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToRead have been read, whichever occurs first. If a 
	 * timeout occurred, any available data is read into lpBuffer and the function returns a non-zero value.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the 
	 * buffer. If the return value is non-zero and lpdwBytesReturned is equal to dwBytesToRead then the 
	 * function has	completed normally. If the return value is non-zero and lpdwBytesReturned is less 
	 * then dwBytesToRead then a timeout has occurred, and the read request has been partially completed. 
	 * @note Note that if a timeout	occurred and no data was read, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and 
	 * perform some additional work while the request is pending. This contrasts with the case 
	 * of non-overlapped I/O in	which the application issues a request and receives control again only 
	 * after the request has been completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure. If there is 
	 * enough data in the receive queue to satisfy the request, the request completes immediately and 
	 * the return code is non-zero. The number of bytes read is returned in lpdwBytesReturned.
	 * @n If there is not enough data in the receive queue to satisfy the request, the request completes
	 * immediately, and the return code is zero, signifying an error. An application should call
	 * FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING, the
	 * overlapped operation is still in progress, and the application can perform other processing. 
	 * Eventually, the application checks the result of the overlapped request by calling 
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes read is returned in lpdwBytesReturned.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>nBufferSize</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="39a06952-a25e-4c80-9bb5-9da191e12a2f">
          <Comments>/** @noop FT_W32_ReadFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to a buffer that receives the data from the device.
	 * @param nBufferSize Number of bytes to read from the device.
	 * @param lpdwBytesReturned Pointer to a variable that receives the number of bytes read from
	 * the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns 
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X 
	 * and Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes read in lpdwBytesReturned.
	 * This function does not return until dwBytesToRead have been read into the buffer. The number of 
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed as dwBytesToRead so that the function reads the device and returns immediately.
	 * @n When a read timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToRead have been read, whichever occurs first. If a 
	 * timeout occurred, any available data is read into lpBuffer and the function returns a non-zero value.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the 
	 * buffer. If the return value is non-zero and lpdwBytesReturned is equal to dwBytesToRead then the 
	 * function has	completed normally. If the return value is non-zero and lpdwBytesReturned is less 
	 * then dwBytesToRead then a timeout has occurred, and the read request has been partially completed. 
	 * @note Note that if a timeout	occurred and no data was read, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and 
	 * perform some additional work while the request is pending. This contrasts with the case 
	 * of non-overlapped I/O in	which the application issues a request and receives control again only 
	 * after the request has been completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure. If there is 
	 * enough data in the receive queue to satisfy the request, the request completes immediately and 
	 * the return code is non-zero. The number of bytes read is returned in lpdwBytesReturned.
	 * @n If there is not enough data in the receive queue to satisfy the request, the request completes
	 * immediately, and the return code is zero, signifying an error. An application should call
	 * FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING, the
	 * overlapped operation is still in progress, and the application can perform other processing. 
	 * Eventually, the application checks the result of the overlapped request by calling 
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes read is returned in lpdwBytesReturned.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwBytesReturned</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="fddb8bfa-63d3-4ccd-8553-27be557903bb">
          <Comments>/** @noop FT_W32_ReadFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Read data from the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to a buffer that receives the data from the device.
	 * @param nBufferSize Number of bytes to read from the device.
	 * @param lpdwBytesReturned Pointer to a variable that receives the number of bytes read from
	 * the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns 
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X 
	 * and Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes read in lpdwBytesReturned.
	 * This function does not return until dwBytesToRead have been read into the buffer. The number of 
	 * bytes in the receive queue can be determined by calling FT_GetStatus or FT_GetQueueStatus, and
	 * passed as dwBytesToRead so that the function reads the device and returns immediately.
	 * @n When a read timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToRead have been read, whichever occurs first. If a 
	 * timeout occurred, any available data is read into lpBuffer and the function returns a non-zero value.
	 * @n An application should use the function return value and lpdwBytesReturned when processing the 
	 * buffer. If the return value is non-zero and lpdwBytesReturned is equal to dwBytesToRead then the 
	 * function has	completed normally. If the return value is non-zero and lpdwBytesReturned is less 
	 * then dwBytesToRead then a timeout has occurred, and the read request has been partially completed. 
	 * @note Note that if a timeout	occurred and no data was read, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and 
	 * perform some additional work while the request is pending. This contrasts with the case 
	 * of non-overlapped I/O in	which the application issues a request and receives control again only 
	 * after the request has been completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure. If there is 
	 * enough data in the receive queue to satisfy the request, the request completes immediately and 
	 * the return code is non-zero. The number of bytes read is returned in lpdwBytesReturned.
	 * @n If there is not enough data in the receive queue to satisfy the request, the request completes
	 * immediately, and the return code is zero, signifying an error. An application should call
	 * FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING, the
	 * overlapped operation is still in progress, and the application can perform other processing. 
	 * Eventually, the application checks the result of the overlapped request by calling 
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes read is returned in lpdwBytesReturned.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d"/>
          <Name>lpOverlapped</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="5310ba62-5e6b-4bf9-8280-42ed3e7f1701"/>
        <Name>FT_W32_ReadFile</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="8125dacd-40cd-43c3-b940-3f4056b92a0b">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="db70171b-15fb-4775-9e26-b6d8afeb9166">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="d8d74ca6-95b0-4e9a-b89e-d66ceb1dd916">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2759</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="dc756237-6e6a-450a-b844-7e31f71fb2d6">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="fe4a779b-ac92-4f9c-b8a2-51543aeccb5b">
        <Comments>/** @noop FT_W32_WriteFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to write to the device.
	 * @param nBufferSize Number of bytes to be written to the device.
	 * @param lpdwBytesWritten Pointer to a variable that receives the number of bytes written to the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X and
	 * Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes written in lpdwBytesWritten.
	 * This function does not return until dwBytesToWrite have been written to the device.
	 * When a write timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToWrite have been written, whichever occurs first. If a 
	 * timeout occurred, lpdwBytesWritten contains the number of bytes actually written, and the function 
	 * returns a non-zero value.
	 * @n An application should always use the function return value and lpdwBytesWritten. If the return 
	 * value is	non-zero and lpdwBytesWritten is equal to dwBytesToWrite then the function has completed 
	 * normally. If	the return value is non-zero and lpdwBytesWritten is less then dwBytesToWrite then a 
	 * timeout has occurred, and the write request has been partially completed. 
	 * @note Note that if a timeout occurred and no data was written, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and perform
	 * some additional work while the request is pending. This contrasts with the case of non-overlapped 
	 * I/O in which the application issues a request and receives control again only after the request has 
	 * been	completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure.
	 * This function completes immediately, and the return code is zero, signifying an error. An application
	 * should call FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING,
	 * the overlapped operation is still in progress, and the application can perform other processing.
	 * Eventually, the application checks the result of the overlapped request by calling
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes written is returned in lpdwBytesWritten.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="5eeaa457-2348-47e1-ae08-1ad1ef6a9f8f">
          <Comments>/** @noop FT_W32_WriteFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to write to the device.
	 * @param nBufferSize Number of bytes to be written to the device.
	 * @param lpdwBytesWritten Pointer to a variable that receives the number of bytes written to the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X and
	 * Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes written in lpdwBytesWritten.
	 * This function does not return until dwBytesToWrite have been written to the device.
	 * When a write timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToWrite have been written, whichever occurs first. If a 
	 * timeout occurred, lpdwBytesWritten contains the number of bytes actually written, and the function 
	 * returns a non-zero value.
	 * @n An application should always use the function return value and lpdwBytesWritten. If the return 
	 * value is	non-zero and lpdwBytesWritten is equal to dwBytesToWrite then the function has completed 
	 * normally. If	the return value is non-zero and lpdwBytesWritten is less then dwBytesToWrite then a 
	 * timeout has occurred, and the write request has been partially completed. 
	 * @note Note that if a timeout occurred and no data was written, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and perform
	 * some additional work while the request is pending. This contrasts with the case of non-overlapped 
	 * I/O in which the application issues a request and receives control again only after the request has 
	 * been	completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure.
	 * This function completes immediately, and the return code is zero, signifying an error. An application
	 * should call FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING,
	 * the overlapped operation is still in progress, and the application can perform other processing.
	 * Eventually, the application checks the result of the overlapped request by calling
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes written is returned in lpdwBytesWritten.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c20507de-d044-4dcf-bb34-b633b0a4f3c3">
          <Comments>/** @noop FT_W32_WriteFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to write to the device.
	 * @param nBufferSize Number of bytes to be written to the device.
	 * @param lpdwBytesWritten Pointer to a variable that receives the number of bytes written to the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X and
	 * Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes written in lpdwBytesWritten.
	 * This function does not return until dwBytesToWrite have been written to the device.
	 * When a write timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToWrite have been written, whichever occurs first. If a 
	 * timeout occurred, lpdwBytesWritten contains the number of bytes actually written, and the function 
	 * returns a non-zero value.
	 * @n An application should always use the function return value and lpdwBytesWritten. If the return 
	 * value is	non-zero and lpdwBytesWritten is equal to dwBytesToWrite then the function has completed 
	 * normally. If	the return value is non-zero and lpdwBytesWritten is less then dwBytesToWrite then a 
	 * timeout has occurred, and the write request has been partially completed. 
	 * @note Note that if a timeout occurred and no data was written, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and perform
	 * some additional work while the request is pending. This contrasts with the case of non-overlapped 
	 * I/O in which the application issues a request and receives control again only after the request has 
	 * been	completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure.
	 * This function completes immediately, and the return code is zero, signifying an error. An application
	 * should call FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING,
	 * the overlapped operation is still in progress, and the application can perform other processing.
	 * Eventually, the application checks the result of the overlapped request by calling
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes written is returned in lpdwBytesWritten.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="837dfaf0-5278-4947-afa7-b86c53729289"/>
          <Name>lpBuffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="4dd61978-96dc-4519-8cd3-0c6134e0baf6">
          <Comments>/** @noop FT_W32_WriteFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to write to the device.
	 * @param nBufferSize Number of bytes to be written to the device.
	 * @param lpdwBytesWritten Pointer to a variable that receives the number of bytes written to the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X and
	 * Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes written in lpdwBytesWritten.
	 * This function does not return until dwBytesToWrite have been written to the device.
	 * When a write timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToWrite have been written, whichever occurs first. If a 
	 * timeout occurred, lpdwBytesWritten contains the number of bytes actually written, and the function 
	 * returns a non-zero value.
	 * @n An application should always use the function return value and lpdwBytesWritten. If the return 
	 * value is	non-zero and lpdwBytesWritten is equal to dwBytesToWrite then the function has completed 
	 * normally. If	the return value is non-zero and lpdwBytesWritten is less then dwBytesToWrite then a 
	 * timeout has occurred, and the write request has been partially completed. 
	 * @note Note that if a timeout occurred and no data was written, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and perform
	 * some additional work while the request is pending. This contrasts with the case of non-overlapped 
	 * I/O in which the application issues a request and receives control again only after the request has 
	 * been	completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure.
	 * This function completes immediately, and the return code is zero, signifying an error. An application
	 * should call FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING,
	 * the overlapped operation is still in progress, and the application can perform other processing.
	 * Eventually, the application checks the result of the overlapped request by calling
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes written is returned in lpdwBytesWritten.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>nBufferSize</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5ae3d887-3ad8-4b59-82e5-da70afadfcfd">
          <Comments>/** @noop FT_W32_WriteFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to write to the device.
	 * @param nBufferSize Number of bytes to be written to the device.
	 * @param lpdwBytesWritten Pointer to a variable that receives the number of bytes written to the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X and
	 * Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes written in lpdwBytesWritten.
	 * This function does not return until dwBytesToWrite have been written to the device.
	 * When a write timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToWrite have been written, whichever occurs first. If a 
	 * timeout occurred, lpdwBytesWritten contains the number of bytes actually written, and the function 
	 * returns a non-zero value.
	 * @n An application should always use the function return value and lpdwBytesWritten. If the return 
	 * value is	non-zero and lpdwBytesWritten is equal to dwBytesToWrite then the function has completed 
	 * normally. If	the return value is non-zero and lpdwBytesWritten is less then dwBytesToWrite then a 
	 * timeout has occurred, and the write request has been partially completed. 
	 * @note Note that if a timeout occurred and no data was written, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and perform
	 * some additional work while the request is pending. This contrasts with the case of non-overlapped 
	 * I/O in which the application issues a request and receives control again only after the request has 
	 * been	completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure.
	 * This function completes immediately, and the return code is zero, signifying an error. An application
	 * should call FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING,
	 * the overlapped operation is still in progress, and the application can perform other processing.
	 * Eventually, the application checks the result of the overlapped request by calling
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes written is returned in lpdwBytesWritten.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwBytesWritten</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="b4e09796-41aa-42b6-bff5-684e988abc15">
          <Comments>/** @noop FT_W32_WriteFile
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Write data to the device.
	 * @param ftHandle Handle of the device.
	 * @param lpBuffer Pointer to the buffer that contains the data to write to the device.
	 * @param nBufferSize Number of bytes to be written to the device.
	 * @param lpdwBytesWritten Pointer to a variable that receives the number of bytes written to the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Linux, Mac OS X and
	 * Windows CE where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * @n The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function always returns the number of bytes written in lpdwBytesWritten.
	 * This function does not return until dwBytesToWrite have been written to the device.
	 * When a write timeout has been setup in a previous call to FT_W32_SetCommTimeouts, this function
	 * returns when the timer expires or dwBytesToWrite have been written, whichever occurs first. If a 
	 * timeout occurred, lpdwBytesWritten contains the number of bytes actually written, and the function 
	 * returns a non-zero value.
	 * @n An application should always use the function return value and lpdwBytesWritten. If the return 
	 * value is	non-zero and lpdwBytesWritten is equal to dwBytesToWrite then the function has completed 
	 * normally. If	the return value is non-zero and lpdwBytesWritten is less then dwBytesToWrite then a 
	 * timeout has occurred, and the write request has been partially completed. 
	 * @note Note that if a timeout occurred and no data was written, the return value is still non-zero.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and perform
	 * some additional work while the request is pending. This contrasts with the case of non-overlapped 
	 * I/O in which the application issues a request and receives control again only after the request has 
	 * been	completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure.
	 * This function completes immediately, and the return code is zero, signifying an error. An application
	 * should call FT_W32_GetLastError to get the cause of the error. If the error code is ERROR_IO_PENDING,
	 * the overlapped operation is still in progress, and the application can perform other processing.
	 * Eventually, the application checks the result of the overlapped request by calling
	 * FT_W32_GetOverlappedResult.
	 * @n If successful, the number of bytes written is returned in lpdwBytesWritten.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d"/>
          <Name>lpOverlapped</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="dc756237-6e6a-450a-b844-7e31f71fb2d6"/>
        <Name>FT_W32_WriteFile</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="0aa14882-7366-4ebe-ae05-21941608ca43">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="a823235a-691e-460e-8790-10ab6b61f339">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="95efce12-dcb8-4b63-90e6-ef8be6769a5a">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2812</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f13ec2c2-551f-420a-b69f-70766923c09b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="11ca3b4d-2d54-4bb8-b7ce-68de3dfa0daf">
        <Comments>/** @noop FT_W32_GetOverlappedResult
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the result of an overlapped operation.
	 * @param ftHandle Handle of the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @param lpdwBytesTransferred Pointer to a variable that receives the number of bytes transferred
	 * during the overlapped operation.
	 * @param bWait Set to TRUE if the function does not return until the operation has been completed.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function is used with overlapped I/O and so is not supported in Linux, Mac OS X or Windows CE. For
	 * a description of its use, see FT_W32_ReadFile and FT_W32_WriteFile.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="e3ae61b2-02f7-46fd-858f-6bf7d6c3d78c">
          <Comments>/** @noop FT_W32_GetOverlappedResult
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the result of an overlapped operation.
	 * @param ftHandle Handle of the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @param lpdwBytesTransferred Pointer to a variable that receives the number of bytes transferred
	 * during the overlapped operation.
	 * @param bWait Set to TRUE if the function does not return until the operation has been completed.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function is used with overlapped I/O and so is not supported in Linux, Mac OS X or Windows CE. For
	 * a description of its use, see FT_W32_ReadFile and FT_W32_WriteFile.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5f7aa9fe-594c-4335-b03e-3f42d8d30d09">
          <Comments>/** @noop FT_W32_GetOverlappedResult
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the result of an overlapped operation.
	 * @param ftHandle Handle of the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @param lpdwBytesTransferred Pointer to a variable that receives the number of bytes transferred
	 * during the overlapped operation.
	 * @param bWait Set to TRUE if the function does not return until the operation has been completed.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function is used with overlapped I/O and so is not supported in Linux, Mac OS X or Windows CE. For
	 * a description of its use, see FT_W32_ReadFile and FT_W32_WriteFile.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d"/>
          <Name>lpOverlapped</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c2ddf47f-4850-4e47-a353-f6cb83808f70">
          <Comments>/** @noop FT_W32_GetOverlappedResult
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the result of an overlapped operation.
	 * @param ftHandle Handle of the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @param lpdwBytesTransferred Pointer to a variable that receives the number of bytes transferred
	 * during the overlapped operation.
	 * @param bWait Set to TRUE if the function does not return until the operation has been completed.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function is used with overlapped I/O and so is not supported in Linux, Mac OS X or Windows CE. For
	 * a description of its use, see FT_W32_ReadFile and FT_W32_WriteFile.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwBytesTransferred</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="ea628e05-dabb-4247-bc56-a4a6b3ef9d7e">
          <Comments>/** @noop FT_W32_GetOverlappedResult
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the result of an overlapped operation.
	 * @param ftHandle Handle of the device.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @param lpdwBytesTransferred Pointer to a variable that receives the number of bytes transferred
	 * during the overlapped operation.
	 * @param bWait Set to TRUE if the function does not return until the operation has been completed.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function is used with overlapped I/O and so is not supported in Linux, Mac OS X or Windows CE. For
	 * a description of its use, see FT_W32_ReadFile and FT_W32_WriteFile.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
          <Name>bWait</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f13ec2c2-551f-420a-b69f-70766923c09b"/>
        <Name>FT_W32_GetOverlappedResult</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="95a57b88-e6f1-4084-9659-e020155c6606">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="96f3a869-04f4-4a98-9e6c-ff04838a2d3c">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="34f71b39-18d6-48a6-8bc2-20871a6bee8d">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2840</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="8bb057b8-57cd-499f-bb8f-4b68de9aaf38">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="1cd3a7f0-11c0-4e51-a281-94af9b168032">
        <Comments>/** @noop FT_W32_EscapeCommFunction
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Perform an extended function.
	 * @param ftHandle Handle of the device.
	 * @param dwFunc The extended function to perform can be one of the following values:
	 * @li CLRDTR - Clear the DTR signal
	 * @li CLRRTS - Clear the RTS signal
	 * @li SETDTR - Set the DTR signal
	 * @li SETRTS - Set the RTS signal
	 * @li SETBREAK - Set the BREAK condition
	 * @li CLRBREAK - Clear the BREAK condition
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="b08546fe-90fa-4c1b-bc97-5ef55ff9e307">
          <Comments>/** @noop FT_W32_EscapeCommFunction
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Perform an extended function.
	 * @param ftHandle Handle of the device.
	 * @param dwFunc The extended function to perform can be one of the following values:
	 * @li CLRDTR - Clear the DTR signal
	 * @li CLRRTS - Clear the RTS signal
	 * @li SETDTR - Set the DTR signal
	 * @li SETRTS - Set the RTS signal
	 * @li SETBREAK - Set the BREAK condition
	 * @li CLRBREAK - Clear the BREAK condition
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="cb513287-1020-4c1d-b218-583a17448957">
          <Comments>/** @noop FT_W32_EscapeCommFunction
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Perform an extended function.
	 * @param ftHandle Handle of the device.
	 * @param dwFunc The extended function to perform can be one of the following values:
	 * @li CLRDTR - Clear the DTR signal
	 * @li CLRRTS - Clear the RTS signal
	 * @li SETDTR - Set the DTR signal
	 * @li SETRTS - Set the RTS signal
	 * @li SETBREAK - Set the BREAK condition
	 * @li CLRBREAK - Clear the BREAK condition
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwFunc</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="8bb057b8-57cd-499f-bb8f-4b68de9aaf38"/>
        <Name>FT_W32_EscapeCommFunction</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="2fe792e3-df65-4e16-94b8-ddc47c648bab">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="664d44ee-3a44-4781-a87b-ab3900dd0cc8">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="a00cf087-3613-4443-93f1-c94ee1d443c0">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2867</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f3f1c46b-2e58-4646-8612-e98a3176a0c2">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="056c1503-c1d0-47a2-9d9d-9d6610913da8">
        <Comments>/** @noop FT_W32_GetCommModemStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function gets the current modem control value.
	 * @param ftHandle Handle of the device.
	 * @param lpdwModemStatus Pointer to a variable to contain modem control value. The modem
	 * control value can be a combination of the following:
	 * @li MS_CTS_ON - Clear To Send (CTS) is on
	 * @li MS_DSR_ON - Data Set Ready (DSR) is on
	 * @li MS_RING_ON - Ring Indicator (RI) is on
	 * @li MS_RLSD_ON - Receive Line Signal Detect (RLSD) is on
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="e3e52dec-4b1a-40f2-8ccb-6206268859ba">
          <Comments>/** @noop FT_W32_GetCommModemStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function gets the current modem control value.
	 * @param ftHandle Handle of the device.
	 * @param lpdwModemStatus Pointer to a variable to contain modem control value. The modem
	 * control value can be a combination of the following:
	 * @li MS_CTS_ON - Clear To Send (CTS) is on
	 * @li MS_DSR_ON - Data Set Ready (DSR) is on
	 * @li MS_RING_ON - Ring Indicator (RI) is on
	 * @li MS_RLSD_ON - Receive Line Signal Detect (RLSD) is on
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="0268e326-5ead-46f3-a054-223c9c8b0b05">
          <Comments>/** @noop FT_W32_GetCommModemStatus
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function gets the current modem control value.
	 * @param ftHandle Handle of the device.
	 * @param lpdwModemStatus Pointer to a variable to contain modem control value. The modem
	 * control value can be a combination of the following:
	 * @li MS_CTS_ON - Clear To Send (CTS) is on
	 * @li MS_DSR_ON - Data Set Ready (DSR) is on
	 * @li MS_RING_ON - Ring Indicator (RI) is on
	 * @li MS_RLSD_ON - Receive Line Signal Detect (RLSD) is on
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwModemStatus</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f3f1c46b-2e58-4646-8612-e98a3176a0c2"/>
        <Name>FT_W32_GetCommModemStatus</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="f449be32-ad31-48cd-92db-c65064cb6298">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="e439e0df-d837-4706-92fd-c4e0d6a5ed2a">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="e98d0b16-edb6-411c-a3bd-340d01cb76e4">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2891</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="55759f17-930f-4c89-b977-9a8b158c95c7">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="ff960adf-72ce-4beb-b4fe-87a0f3feca0f">
        <Comments>/** @noop FT_W32_SetupComm
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the read and write buffers.
	 * @param ftHandle Handle of the device.
	 * @param dwReadBufferSize Length, in bytes, of the read buffer.
	 * @param dwWriteBufferSize Length, in bytes, of the write buffer.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function has no effect. It is the responsibility of the driver to allocate sufficient 
	 * storage for I/O requests.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="6ae2ba92-8c20-4029-ad97-c9c545756d9e">
          <Comments>/** @noop FT_W32_SetupComm
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the read and write buffers.
	 * @param ftHandle Handle of the device.
	 * @param dwReadBufferSize Length, in bytes, of the read buffer.
	 * @param dwWriteBufferSize Length, in bytes, of the write buffer.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function has no effect. It is the responsibility of the driver to allocate sufficient 
	 * storage for I/O requests.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="3ab94fc5-eb73-4ebe-ab71-4d3806e11e8c">
          <Comments>/** @noop FT_W32_SetupComm
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the read and write buffers.
	 * @param ftHandle Handle of the device.
	 * @param dwReadBufferSize Length, in bytes, of the read buffer.
	 * @param dwWriteBufferSize Length, in bytes, of the write buffer.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function has no effect. It is the responsibility of the driver to allocate sufficient 
	 * storage for I/O requests.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwReadBufferSize</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="0bfbb733-aea3-4909-ad52-242d70c88024">
          <Comments>/** @noop FT_W32_SetupComm
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the read and write buffers.
	 * @param ftHandle Handle of the device.
	 * @param dwReadBufferSize Length, in bytes, of the read buffer.
	 * @param dwWriteBufferSize Length, in bytes, of the write buffer.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function has no effect. It is the responsibility of the driver to allocate sufficient 
	 * storage for I/O requests.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwWriteBufferSize</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="55759f17-930f-4c89-b977-9a8b158c95c7"/>
        <Name>FT_W32_SetupComm</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="bb6cf090-05dc-4616-b68f-f13bb276abb7">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c1fddd8e-7b92-4f23-884e-6f92485d0a26">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="4c9d92a2-4fc8-45b3-aa8a-bcc9552e81bf">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2914</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="1ada42a8-69db-4595-9768-0cbbe45b8323">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="ffe65872-172f-46dc-a5d6-2f9ae0a8172d"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="ff94c092-fbba-4d5c-beb8-dcaf2a5e4be4">
        <Comments>/** @noop FT_W32_SetCommState
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the state of the device according to the contents of a device control block (DCB).
	 * @param ftHandle Handle of the device.
	 * @param lpftDcb Pointer to an FTDCB structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="f77ffd56-85fe-4dee-b448-bd09ec2a66f1">
          <Comments>/** @noop FT_W32_SetCommState
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the state of the device according to the contents of a device control block (DCB).
	 * @param ftHandle Handle of the device.
	 * @param lpftDcb Pointer to an FTDCB structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="7dc4155e-1531-40f3-aa48-1443524bbfd0">
          <Comments>/** @noop FT_W32_SetCommState
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the state of the device according to the contents of a device control block (DCB).
	 * @param ftHandle Handle of the device.
	 * @param lpftDcb Pointer to an FTDCB structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="ffe65872-172f-46dc-a5d6-2f9ae0a8172d"/>
          <Name>lpftDcb</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="1ada42a8-69db-4595-9768-0cbbe45b8323"/>
        <Name>FT_W32_SetCommState</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="05d91384-b068-4a17-8be6-68228256cf5a">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="0364bec7-cf4c-41ca-bc88-d8b1461ddf3b">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="c50a3970-0032-42ce-8bfe-3b2227efdf92">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>2998</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="7112f38c-fec2-4ae1-be07-fa6283d366de">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="ffe65872-172f-46dc-a5d6-2f9ae0a8172d"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="bf45d394-fcf7-4647-8a39-4a0da907d4d0">
        <Comments>/** @noop FT_W32_GetCommState
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function gets the current device state.
	 * @param ftHandle Handle of the device.
	 * @param lpftDcb Pointer to an FTDCB structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * The current state of the device is returned in a device control block.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="3714c251-859f-4376-848f-98068d8e61d9">
          <Comments>/** @noop FT_W32_GetCommState
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function gets the current device state.
	 * @param ftHandle Handle of the device.
	 * @param lpftDcb Pointer to an FTDCB structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * The current state of the device is returned in a device control block.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="343a9459-a1cc-4857-98c1-cccbe9f4825c">
          <Comments>/** @noop FT_W32_GetCommState
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function gets the current device state.
	 * @param ftHandle Handle of the device.
	 * @param lpftDcb Pointer to an FTDCB structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * The current state of the device is returned in a device control block.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="ffe65872-172f-46dc-a5d6-2f9ae0a8172d"/>
          <Name>lpftDcb</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="7112f38c-fec2-4ae1-be07-fa6283d366de"/>
        <Name>FT_W32_GetCommState</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="346856c4-3878-4adb-b0a8-4c907e839fa0">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="fa73ef43-51ff-43a1-9b4d-534aa2beb278">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="b2c3dcfb-239b-4db1-b31e-519c5f6dbd83">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3019</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d4831eeb-b441-40d8-837c-e755b27dbdc3">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="9e7fa2f2-4ba2-4c9e-b7e8-a5a3a3c177f0"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="9e7fa2f2-4ba2-4c9e-b7e8-a5a3a3c177f0">
        <Type type="cxxfe.ast.types.TypedefType" uuid="c328e11e-6714-4130-997f-639f0885a670"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="261fdbe7-f69b-44f4-9476-7dbd01e10357">
        <Comments>/** @noop FT_W32_SetCommTimeouts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the timeout parameters for I/O requests.
	 * @param ftHandle Handle of the device.
	 * @param pftTimeouts Pointer to an FTTIMEOUTS structure to store timeout information.
	 * @returns
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * Timeouts are calculated using the information in the FTTIMEOUTS structure.
	 * @n For read requests, the number of bytes to be read is multiplied by the total timeout 
	 * multiplier, and added to the total timeout constant. So, if TS is an FTTIMEOUTS structure 
	 * and the number of bytes to read is dwToRead, the read timeout, rdTO, is calculated as follows.
	 * @n rdTO = (dwToRead * TS.ReadTotalTimeoutMultiplier) + TS.ReadTotalTimeoutConstant
	 * @n For write requests, the number of bytes to be written is multiplied by the total timeout 
	 * multiplier, and added to the total timeout constant. So, if TS is an FTTIMEOUTS structure 
	 * and the number of bytes to write is dwToWrite, the write timeout, wrTO, is calculated as follows.
	 * @n wrTO = (dwToWrite * TS.WriteTotalTimeoutMultiplier) + TS.WriteTotalTimeoutConstant
	 * @n Linux and Mac OS X currently ignore the ReadIntervalTimeout, ReadTotalTimeoutMultiplier and
	 * WriteTotalTimeoutMultiplier.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="77f49e79-2f26-49c4-bf91-c1d0995e0d14">
          <Comments>/** @noop FT_W32_SetCommTimeouts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the timeout parameters for I/O requests.
	 * @param ftHandle Handle of the device.
	 * @param pftTimeouts Pointer to an FTTIMEOUTS structure to store timeout information.
	 * @returns
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * Timeouts are calculated using the information in the FTTIMEOUTS structure.
	 * @n For read requests, the number of bytes to be read is multiplied by the total timeout 
	 * multiplier, and added to the total timeout constant. So, if TS is an FTTIMEOUTS structure 
	 * and the number of bytes to read is dwToRead, the read timeout, rdTO, is calculated as follows.
	 * @n rdTO = (dwToRead * TS.ReadTotalTimeoutMultiplier) + TS.ReadTotalTimeoutConstant
	 * @n For write requests, the number of bytes to be written is multiplied by the total timeout 
	 * multiplier, and added to the total timeout constant. So, if TS is an FTTIMEOUTS structure 
	 * and the number of bytes to write is dwToWrite, the write timeout, wrTO, is calculated as follows.
	 * @n wrTO = (dwToWrite * TS.WriteTotalTimeoutMultiplier) + TS.WriteTotalTimeoutConstant
	 * @n Linux and Mac OS X currently ignore the ReadIntervalTimeout, ReadTotalTimeoutMultiplier and
	 * WriteTotalTimeoutMultiplier.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="7b49efcc-9c38-4146-81d2-f238627f8621">
          <Comments>/** @noop FT_W32_SetCommTimeouts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function sets the timeout parameters for I/O requests.
	 * @param ftHandle Handle of the device.
	 * @param pftTimeouts Pointer to an FTTIMEOUTS structure to store timeout information.
	 * @returns
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * Timeouts are calculated using the information in the FTTIMEOUTS structure.
	 * @n For read requests, the number of bytes to be read is multiplied by the total timeout 
	 * multiplier, and added to the total timeout constant. So, if TS is an FTTIMEOUTS structure 
	 * and the number of bytes to read is dwToRead, the read timeout, rdTO, is calculated as follows.
	 * @n rdTO = (dwToRead * TS.ReadTotalTimeoutMultiplier) + TS.ReadTotalTimeoutConstant
	 * @n For write requests, the number of bytes to be written is multiplied by the total timeout 
	 * multiplier, and added to the total timeout constant. So, if TS is an FTTIMEOUTS structure 
	 * and the number of bytes to write is dwToWrite, the write timeout, wrTO, is calculated as follows.
	 * @n wrTO = (dwToWrite * TS.WriteTotalTimeoutMultiplier) + TS.WriteTotalTimeoutConstant
	 * @n Linux and Mac OS X currently ignore the ReadIntervalTimeout, ReadTotalTimeoutMultiplier and
	 * WriteTotalTimeoutMultiplier.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="9e7fa2f2-4ba2-4c9e-b7e8-a5a3a3c177f0"/>
          <Name>pftTimeouts</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="d4831eeb-b441-40d8-837c-e755b27dbdc3"/>
        <Name>FT_W32_SetCommTimeouts</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="010c0e07-58f3-4499-ba0e-9409d7e66127">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="b31ad1d1-4728-404f-b49e-aeb8accade40">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="96914542-4274-438e-9a1a-a046513522bb">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3049</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fc39ac9a-8445-4a7a-abe4-9ed2ef4c24b4">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="9e7fa2f2-4ba2-4c9e-b7e8-a5a3a3c177f0"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="1142b48c-d9a7-4006-86ad-ba0fd508a6e1">
        <Comments>/** @noop FT_W32_GetCommTimeouts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function gets the current read and write request timeout parameters for the specified device.
	 * @param ftHandle Handle of the device.
	 * @param pftTimeouts Pointer to an FTTIMEOUTS structure to store timeout information.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * For an explanation of how timeouts are used, see FT_W32_SetCommTimeouts.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="49fccc10-b1e8-4a48-a038-4d2f6ef2c060">
          <Comments>/** @noop FT_W32_GetCommTimeouts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function gets the current read and write request timeout parameters for the specified device.
	 * @param ftHandle Handle of the device.
	 * @param pftTimeouts Pointer to an FTTIMEOUTS structure to store timeout information.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * For an explanation of how timeouts are used, see FT_W32_SetCommTimeouts.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="912e986e-9dbb-4c26-be91-461323cf3f2f">
          <Comments>/** @noop FT_W32_GetCommTimeouts
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function gets the current read and write request timeout parameters for the specified device.
	 * @param ftHandle Handle of the device.
	 * @param pftTimeouts Pointer to an FTTIMEOUTS structure to store timeout information.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * For an explanation of how timeouts are used, see FT_W32_SetCommTimeouts.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="9e7fa2f2-4ba2-4c9e-b7e8-a5a3a3c177f0"/>
          <Name>pftTimeouts</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="fc39ac9a-8445-4a7a-abe4-9ed2ef4c24b4"/>
        <Name>FT_W32_GetCommTimeouts</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="976ac885-88be-4c0c-b9d7-2c9bc3c58160">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="2517f2f8-784e-42f9-bc2f-a9906dc6f3e0">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="9fad98d5-440b-4ad7-90f2-bff84e9cd2e8">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3070</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fc34b3a9-80a8-474b-8a77-92f41c19fbf0">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="a2026b4e-f8a2-45fb-bcad-1535d983396c">
        <Comments>/** @noop FT_W32_SetCommBreak
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Puts the communications line in the BREAK state.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="60e9fb1a-064b-4b0a-9502-a0fcfea6dc05">
          <Comments>/** @noop FT_W32_SetCommBreak
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Puts the communications line in the BREAK state.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="fc34b3a9-80a8-474b-8a77-92f41c19fbf0"/>
        <Name>FT_W32_SetCommBreak</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="560e8250-7bd8-4165-b38a-9b68207b3ed3">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="bb0419a9-7e75-46d7-b176-7957ea2c2cfa">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="c82ba484-d4c9-4d09-a89f-c8ab69d64e97">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3088</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="aa859912-f8f0-407a-83d9-5dd51befa136">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="312909d0-31d2-4edc-8c5a-2403e5c80888">
        <Comments>/** @noop FT_W32_ClearCommBreak
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Puts the communications line in the non-BREAK state.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="2cbb9c57-cc24-4d8e-817e-c18c9324cdec">
          <Comments>/** @noop FT_W32_ClearCommBreak
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Puts the communications line in the non-BREAK state.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="aa859912-f8f0-407a-83d9-5dd51befa136"/>
        <Name>FT_W32_ClearCommBreak</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="c9cdf7f4-041e-4dc2-8cec-82202d06b4df">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d8e75ffa-afee-49b9-a403-82824bc8c65e">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="b762b4e1-665c-4fdb-869a-8552faad2748">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3105</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="79295e33-1915-45f6-9ec5-52d04d89e519">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="442dfe5e-c6dc-44c5-8a9b-663cfb531b37">
        <Comments>/** @noop FT_W32_SetCommMask
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function specifies events that the device has to monitor.
	 * @param ftHandle Handle of the device.
	 * @param ulEventMask Mask containing events that the device has to monitor. This can be a combination of 
	 * the following:
	 * @li EV_BREAK - BREAK condition detected
	 * @li EV_CTS - Change in Clear To Send (CTS)
	 * @li EV_DSR - Change in Data Set Ready (DSR)
	 * @li EV_ERR - Error in line status
	 * @li EV_RING - Change in Ring Indicator (RI)
	 * @li EV_RLSD - Change in Receive Line Signal Detect (RLSD)
	 * @li EV_RXCHAR - Character received
	 * @li EV_RXFLAG - Event character received
	 * @li EV_TXEMPTY - Transmitter empty
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function specifies the events that the device should monitor. An application can call the 
	 * function FT_W32_WaitCommEvent to wait for an event to occur.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="14ed8f02-7a09-4566-92a7-9bcfd552ada6">
          <Comments>/** @noop FT_W32_SetCommMask
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function specifies events that the device has to monitor.
	 * @param ftHandle Handle of the device.
	 * @param ulEventMask Mask containing events that the device has to monitor. This can be a combination of 
	 * the following:
	 * @li EV_BREAK - BREAK condition detected
	 * @li EV_CTS - Change in Clear To Send (CTS)
	 * @li EV_DSR - Change in Data Set Ready (DSR)
	 * @li EV_ERR - Error in line status
	 * @li EV_RING - Change in Ring Indicator (RI)
	 * @li EV_RLSD - Change in Receive Line Signal Detect (RLSD)
	 * @li EV_RXCHAR - Character received
	 * @li EV_RXFLAG - Event character received
	 * @li EV_TXEMPTY - Transmitter empty
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function specifies the events that the device should monitor. An application can call the 
	 * function FT_W32_WaitCommEvent to wait for an event to occur.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="a72a6a15-4335-49d4-8aea-153d0a73fbf1">
          <Comments>/** @noop FT_W32_SetCommMask
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function specifies events that the device has to monitor.
	 * @param ftHandle Handle of the device.
	 * @param ulEventMask Mask containing events that the device has to monitor. This can be a combination of 
	 * the following:
	 * @li EV_BREAK - BREAK condition detected
	 * @li EV_CTS - Change in Clear To Send (CTS)
	 * @li EV_DSR - Change in Data Set Ready (DSR)
	 * @li EV_ERR - Error in line status
	 * @li EV_RING - Change in Ring Indicator (RI)
	 * @li EV_RLSD - Change in Receive Line Signal Detect (RLSD)
	 * @li EV_RXCHAR - Character received
	 * @li EV_RXFLAG - Event character received
	 * @li EV_TXEMPTY - Transmitter empty
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function specifies the events that the device should monitor. An application can call the 
	 * function FT_W32_WaitCommEvent to wait for an event to occur.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2bf2aaf3-cec8-4ab9-a8ca-8721a35f2d1c"/>
          <Name>ulEventMask</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="79295e33-1915-45f6-9ec5-52d04d89e519"/>
        <Name>FT_W32_SetCommMask</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="b3d8b855-0961-42d4-9e72-f813fa1a6513">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="ba8433ab-6210-42fb-87e0-4019b18b8182">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="0231f37b-f225-44df-8ee9-d47fea3bb041">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3136</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="7c569ef2-8fc1-412e-a198-be31cfbc80dc">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="c1cae383-34cc-471c-91dc-cfabc744b809">
        <Comments>/** @noop 6 FT_W32_GetCommMask
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * Retrieves the events that are currently being monitored by a device.
	 * @param ftHandle Handle of the device.
	 * @param lpdwEventMask Pointer to a location that receives a mask that contains the events that are 
	 * currently enabled. This parameter can be one or more of the following values:
	 * @li EV_BREAK - BREAK condition detected
	 * @li EV_CTS - Change in Clear To Send (CTS)
	 * @li EV_DSR - Change in Data Set Ready (DSR)
	 * @li EV_ERR - Error in line status
	 * @li EV_RING - Change in Ring Indicator (RI)
	 * @li EV_RLSD - Change in Receive Line Signal Detect (RLSD)
	 * @li EV_RXCHAR - Character received
	 * @li EV_RXFLAG - Event character received
	 * @li EV_TXEMPTY - Transmitter empty
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function returns events currently being monitored by the device. Event monitoring for these 
	 * events is enabled by the FT_W32_SetCommMask function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="aca3edd9-61db-4e8c-b5f5-af7d1470d330">
          <Comments>/** @noop 6 FT_W32_GetCommMask
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * Retrieves the events that are currently being monitored by a device.
	 * @param ftHandle Handle of the device.
	 * @param lpdwEventMask Pointer to a location that receives a mask that contains the events that are 
	 * currently enabled. This parameter can be one or more of the following values:
	 * @li EV_BREAK - BREAK condition detected
	 * @li EV_CTS - Change in Clear To Send (CTS)
	 * @li EV_DSR - Change in Data Set Ready (DSR)
	 * @li EV_ERR - Error in line status
	 * @li EV_RING - Change in Ring Indicator (RI)
	 * @li EV_RLSD - Change in Receive Line Signal Detect (RLSD)
	 * @li EV_RXCHAR - Character received
	 * @li EV_RXFLAG - Event character received
	 * @li EV_TXEMPTY - Transmitter empty
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function returns events currently being monitored by the device. Event monitoring for these 
	 * events is enabled by the FT_W32_SetCommMask function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="fe867e78-6337-4dd0-a9c7-d12b242ca5b5">
          <Comments>/** @noop 6 FT_W32_GetCommMask
	 * @par Supported Operating Systems
	 * Windows (2000 and later)
	 * @par Summary
	 * Retrieves the events that are currently being monitored by a device.
	 * @param ftHandle Handle of the device.
	 * @param lpdwEventMask Pointer to a location that receives a mask that contains the events that are 
	 * currently enabled. This parameter can be one or more of the following values:
	 * @li EV_BREAK - BREAK condition detected
	 * @li EV_CTS - Change in Clear To Send (CTS)
	 * @li EV_DSR - Change in Data Set Ready (DSR)
	 * @li EV_ERR - Error in line status
	 * @li EV_RING - Change in Ring Indicator (RI)
	 * @li EV_RLSD - Change in Receive Line Signal Detect (RLSD)
	 * @li EV_RXCHAR - Character received
	 * @li EV_RXFLAG - Event character received
	 * @li EV_TXEMPTY - Transmitter empty
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function returns events currently being monitored by the device. Event monitoring for these 
	 * events is enabled by the FT_W32_SetCommMask function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwEventMask</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="7c569ef2-8fc1-412e-a198-be31cfbc80dc"/>
        <Name>FT_W32_GetCommMask</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="c9f9f5e9-0807-4404-90e3-447a29461881">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="9185d9a6-4869-4305-83d9-4263d66299bc">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="d4121e48-2c66-4bda-8379-5b72851cce03">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3165</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="648d4f7e-048f-4aa0-9b77-579736d992ee">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="82b46303-6926-44de-8c40-63907be5eddf"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="3167393b-6fd5-4f21-a8d6-a58b2a290854">
        <Comments>/** @noop FT_W32_WaitCommEvent
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function waits for an event to occur.
	 * @param ftHandle Handle of the device.
	 * @param pulEvent Pointer to a location that receives a mask that contains the events that occurred.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns 
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Windows CE and Linux
	 * where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function does not return until an event that has been specified in a call to 
	 * FT_W32_SetCommMask has occurred. The events that occurred and resulted in this function returning 
	 * are stored in lpdwEvent.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and perform
	 * some additional work while the request is pending. This contrasts with the case of non-overlapped 
	 * I/O in which the application issues a request and receives control again only after the request has 
	 * been	completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure.
	 * This function does not return until an event that has been specified in a call to FT_W32_SetCommMask
	 * has occurred.
	 * @n If an event has already occurred, the request completes immediately, and the return code is non-zero.
	 * @n The events that occurred are stored in lpdwEvent.
	 * @n If an event has not yet occurred, the request completes immediately, and the return code is zero,
	 * signifying an error. An application should call FT_W32_GetLastError to get the cause of the error. If 
	 * the error code is ERROR_IO_PENDING, the overlapped operation is still in progress, and the application 
	 * can perform other processing. Eventually, the application checks the result of the overlapped request 
	 * by calling FT_W32_GetOverlappedResult. The events that occurred and resulted in this function 
	 * returning are stored in lpdwEvent.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="467561db-6635-4e60-a32b-3fd9b93fe545">
          <Comments>/** @noop FT_W32_WaitCommEvent
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function waits for an event to occur.
	 * @param ftHandle Handle of the device.
	 * @param pulEvent Pointer to a location that receives a mask that contains the events that occurred.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns 
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Windows CE and Linux
	 * where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function does not return until an event that has been specified in a call to 
	 * FT_W32_SetCommMask has occurred. The events that occurred and resulted in this function returning 
	 * are stored in lpdwEvent.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and perform
	 * some additional work while the request is pending. This contrasts with the case of non-overlapped 
	 * I/O in which the application issues a request and receives control again only after the request has 
	 * been	completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure.
	 * This function does not return until an event that has been specified in a call to FT_W32_SetCommMask
	 * has occurred.
	 * @n If an event has already occurred, the request completes immediately, and the return code is non-zero.
	 * @n The events that occurred are stored in lpdwEvent.
	 * @n If an event has not yet occurred, the request completes immediately, and the return code is zero,
	 * signifying an error. An application should call FT_W32_GetLastError to get the cause of the error. If 
	 * the error code is ERROR_IO_PENDING, the overlapped operation is still in progress, and the application 
	 * can perform other processing. Eventually, the application checks the result of the overlapped request 
	 * by calling FT_W32_GetOverlappedResult. The events that occurred and resulted in this function 
	 * returning are stored in lpdwEvent.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="49ebaeea-5d8d-4956-a2f6-47236095f7b7">
          <Comments>/** @noop FT_W32_WaitCommEvent
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function waits for an event to occur.
	 * @param ftHandle Handle of the device.
	 * @param pulEvent Pointer to a location that receives a mask that contains the events that occurred.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns 
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Windows CE and Linux
	 * where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function does not return until an event that has been specified in a call to 
	 * FT_W32_SetCommMask has occurred. The events that occurred and resulted in this function returning 
	 * are stored in lpdwEvent.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and perform
	 * some additional work while the request is pending. This contrasts with the case of non-overlapped 
	 * I/O in which the application issues a request and receives control again only after the request has 
	 * been	completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure.
	 * This function does not return until an event that has been specified in a call to FT_W32_SetCommMask
	 * has occurred.
	 * @n If an event has already occurred, the request completes immediately, and the return code is non-zero.
	 * @n The events that occurred are stored in lpdwEvent.
	 * @n If an event has not yet occurred, the request completes immediately, and the return code is zero,
	 * signifying an error. An application should call FT_W32_GetLastError to get the cause of the error. If 
	 * the error code is ERROR_IO_PENDING, the overlapped operation is still in progress, and the application 
	 * can perform other processing. Eventually, the application checks the result of the overlapped request 
	 * by calling FT_W32_GetOverlappedResult. The events that occurred and resulted in this function 
	 * returning are stored in lpdwEvent.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="82b46303-6926-44de-8c40-63907be5eddf"/>
          <Name>pulEvent</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="04f71f92-6488-4ac3-b7d4-69a3449dd7ed">
          <Comments>/** @noop FT_W32_WaitCommEvent
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function waits for an event to occur.
	 * @param ftHandle Handle of the device.
	 * @param pulEvent Pointer to a location that receives a mask that contains the events that occurred.
	 * @param lpOverlapped Pointer to an overlapped structure.
	 * @returns 
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function supports both non-overlapped and overlapped I/O, except under Windows CE and Linux
	 * where only non-overlapped IO is supported.
	 * @n @b Non-overlapped @b I/O
	 * The parameter, lpOverlapped, must be NULL for non-overlapped I/O.
	 * @n This function does not return until an event that has been specified in a call to 
	 * FT_W32_SetCommMask has occurred. The events that occurred and resulted in this function returning 
	 * are stored in lpdwEvent.
	 * @n @b Overlapped @b I/O
	 * @n When the device has been opened for overlapped I/O, an application can issue a request and perform
	 * some additional work while the request is pending. This contrasts with the case of non-overlapped 
	 * I/O in which the application issues a request and receives control again only after the request has 
	 * been	completed.
	 * @n The parameter, lpOverlapped, must point to an initialized OVERLAPPED structure.
	 * This function does not return until an event that has been specified in a call to FT_W32_SetCommMask
	 * has occurred.
	 * @n If an event has already occurred, the request completes immediately, and the return code is non-zero.
	 * @n The events that occurred are stored in lpdwEvent.
	 * @n If an event has not yet occurred, the request completes immediately, and the return code is zero,
	 * signifying an error. An application should call FT_W32_GetLastError to get the cause of the error. If 
	 * the error code is ERROR_IO_PENDING, the overlapped operation is still in progress, and the application 
	 * can perform other processing. Eventually, the application checks the result of the overlapped request 
	 * by calling FT_W32_GetOverlappedResult. The events that occurred and resulted in this function 
	 * returning are stored in lpdwEvent.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="880e41ef-d065-4c31-8abf-5f653e04cb3d"/>
          <Name>lpOverlapped</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="648d4f7e-048f-4aa0-9b77-579736d992ee"/>
        <Name>FT_W32_WaitCommEvent</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="daf72929-e483-48dc-a442-36a9ef435c2e">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c3292b12-b381-42b7-a528-ad64e00c9236">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="101ea043-89a1-429a-8cac-5913aa0d7570">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3209</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ba70ecae-c2ca-4625-a3ba-06944bde39a1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="9d22c27e-2dbf-425c-aa05-6022d8f83836">
        <Comments>/** @noop FT_W32_PurgeComm
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function purges the device.
	 * @param ftHandle Handle of the device.
	 * @param dwMask Specifies the action to take. The action can be a combination of the following:
	 * @li PURGE_TXABORT - Terminate outstanding overlapped writes
	 * @li PURGE_RXABORT - Terminate outstanding overlapped reads
	 * @li PURGE_TXCLEAR - Clear the transmit buffer
	 * @li PURGE_RXCLEAR - Clear the receive buffer
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="042b06ff-3941-465c-8f4a-7f261866a3ed">
          <Comments>/** @noop FT_W32_PurgeComm
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function purges the device.
	 * @param ftHandle Handle of the device.
	 * @param dwMask Specifies the action to take. The action can be a combination of the following:
	 * @li PURGE_TXABORT - Terminate outstanding overlapped writes
	 * @li PURGE_RXABORT - Terminate outstanding overlapped reads
	 * @li PURGE_TXCLEAR - Clear the transmit buffer
	 * @li PURGE_RXCLEAR - Clear the receive buffer
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d6327c78-d0d6-4d8e-98bc-d71611cf4f2c">
          <Comments>/** @noop FT_W32_PurgeComm
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * This function purges the device.
	 * @param ftHandle Handle of the device.
	 * @param dwMask Specifies the action to take. The action can be a combination of the following:
	 * @li PURGE_TXABORT - Terminate outstanding overlapped writes
	 * @li PURGE_RXABORT - Terminate outstanding overlapped reads
	 * @li PURGE_TXCLEAR - Clear the transmit buffer
	 * @li PURGE_RXCLEAR - Clear the receive buffer
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>dwMask</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="ba70ecae-c2ca-4625-a3ba-06944bde39a1"/>
        <Name>FT_W32_PurgeComm</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="4c72dff0-1522-4b45-8454-ad8c1cf0a4ab">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="abe355da-4798-4123-8434-0f4053d43cb6">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="765d20ed-a4df-4ddf-b1e6-fbcb372c96b4">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3233</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="5d8dda45-a415-4ba8-92a7-1a74046cf01a">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="fa1ec6c8-e39d-4503-a626-385867039bda">
        <Comments>/** @noop FT_W32_GetLastError
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the last error that occurred on the device.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function is normally used with overlapped I/O and so is not supported in Windows CE. For a
	 * description of its use, see FT_W32_ReadFile and FT_W32_WriteFile.
	 * @n In Linux and Mac OS X, this function returns a DWORD that directly maps to the FT Errors (for 
	 * example the FT_INVALID_HANDLE error number).
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="48a4badf-c34c-409b-9e87-fd454532f258">
          <Comments>/** @noop FT_W32_GetLastError
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets the last error that occurred on the device.
	 * @param ftHandle Handle of the device.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 * @remarks
	 * This function is normally used with overlapped I/O and so is not supported in Windows CE. For a
	 * description of its use, see FT_W32_ReadFile and FT_W32_WriteFile.
	 * @n In Linux and Mac OS X, this function returns a DWORD that directly maps to the FT Errors (for 
	 * example the FT_INVALID_HANDLE error number).
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="5d8dda45-a415-4ba8-92a7-1a74046cf01a"/>
        <Name>FT_W32_GetLastError</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="3a491414-f618-419c-abcd-d4c8dd3c7852">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="89efa711-5a1a-488d-a97e-0478b7be6549">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="1bf8c002-57e5-4155-bbf6-8fbb22a3262c">
          <Col>26</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3256</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fa0ad08b-aed7-484e-abb2-ba777d22e2ad">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="adb8f315-4b78-4fe4-b9a4-df80f74d98a4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="131cab62-f04f-4066-b926-dde9bd1679d6">
        <Comments>/** @noop FT_W32_ClearCommError
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets information about a communications error and get current status of the device.
	 * @param ftHandle Handle of the device.
	 * @param lpdwErrors Variable that contains the error mask.
	 * @param lpftComstat Pointer to FTCOMSTAT structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="1751bf18-0434-490c-b631-cd36d9b2050f">
          <Comments>/** @noop FT_W32_ClearCommError
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets information about a communications error and get current status of the device.
	 * @param ftHandle Handle of the device.
	 * @param lpdwErrors Variable that contains the error mask.
	 * @param lpftComstat Pointer to FTCOMSTAT structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="b5a1d5f6-362c-4917-9ece-03ba7ad7f9f4">
          <Comments>/** @noop FT_W32_ClearCommError
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets information about a communications error and get current status of the device.
	 * @param ftHandle Handle of the device.
	 * @param lpdwErrors Variable that contains the error mask.
	 * @param lpftComstat Pointer to FTCOMSTAT structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>lpdwErrors</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d3ce4f36-3ca6-40ac-be9d-80e0a8ce129d">
          <Comments>/** @noop FT_W32_ClearCommError
	 * @par Supported Operating Systems
	 * Linux
	 * Mac OS X (10.4 and later)
	 * Windows (2000 and later)
	 * Windows CE (4.2 and later)
	 * @par Summary
	 * Gets information about a communications error and get current status of the device.
	 * @param ftHandle Handle of the device.
	 * @param lpdwErrors Variable that contains the error mask.
	 * @param lpftComstat Pointer to FTCOMSTAT structure.
	 * @returns
	 * If the function is successful, the return value is nonzero.
	 * If the function is unsuccessful, the return value is zero.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="adb8f315-4b78-4fe4-b9a4-df80f74d98a4"/>
          <Name>lpftComstat</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="fa0ad08b-aed7-484e-abb2-ba777d22e2ad"/>
        <Name>FT_W32_ClearCommError</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="5f5b516a-f7f7-4190-931d-ec98f67dfa52">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c56c28a9-2dc1-4804-a3aa-b4bb483846d3">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="a2ef617e-bddb-46fb-960c-5edd126f816a">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3275</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="af167b31-c2c6-4036-ba27-153fdab0342e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="3a8fce2e-7b2d-46b4-b7cc-68913b59f0f9"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="e52f7785-7d1e-4620-85cc-b6bec6cae959">
        <Comments>/** @noop FT_W32_CancelIo
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="ad53130e-4e18-4c0c-8524-7eb124f2906e">
          <Comments>/** @noop FT_W32_CancelIo
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="af167b31-c2c6-4036-ba27-153fdab0342e"/>
        <Name>FT_W32_CancelIo</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="e4c99ae1-9dca-444c-a24a-b5c545118991">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="afbd6096-e610-4fba-8216-8c8e738215c1">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="46eb3fad-0c12-4b8c-bbd9-c63cc03bc1ca">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3284</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="d3e1807a-59ad-491c-877b-3fa48d89ab89">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="bea4f929-8ef9-4e20-887a-dff63681325c">
        <Comments>/** @noop FT_EE_ReadConfig
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="ffee8e4a-8c5b-4ff1-878d-de3090f14551">
          <Comments>/** @noop FT_EE_ReadConfig
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="6f761e09-c859-4852-b0fd-75181e4475a4">
          <Comments>/** @noop FT_EE_ReadConfig
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ucAddress</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="47ef1cd7-b635-4bf1-99b9-03fae914f102">
          <Comments>/** @noop FT_EE_ReadConfig
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="6d4ba8b7-645f-4152-8abd-f6a1a5a572e8"/>
          <Name>pucValue</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="d3e1807a-59ad-491c-877b-3fa48d89ab89"/>
        <Name>FT_EE_ReadConfig</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="29d028c3-ebab-42e8-b4e4-c53eb74d8387">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="0c7f65e9-290d-4037-a7d1-e822f8f49df5">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="02941c75-f363-4d7e-8097-180396b1066a">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3299</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="a87879d5-3d47-48ac-b278-e58d34cf4715">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="7ba9d75b-8a40-494c-91bf-f168ad6ecabe">
        <Comments>/** @noop FT_EE_WriteConfig
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="9932bb93-2673-4aa6-b5e9-4ea49a5a0fe6">
          <Comments>/** @noop FT_EE_WriteConfig
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="176b2b02-5bf1-4c33-8920-c881851281a6">
          <Comments>/** @noop FT_EE_WriteConfig
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ucAddress</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="6a437ce8-8162-4d20-96ee-2cfa55ebf63a">
          <Comments>/** @noop FT_EE_WriteConfig
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ucValue</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="a87879d5-3d47-48ac-b278-e58d34cf4715"/>
        <Name>FT_EE_WriteConfig</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="24853f8b-cda8-41be-986e-491d9c111655">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="13e83252-d157-4ee1-a855-b4a5b7b73414">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="92a7d49b-ccf7-4f31-9caa-b16df9cf2579">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3308</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f4575ca7-a05d-4739-b117-b776b9c36bb2">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="25c077e6-5596-47a4-b56d-0aef537e6ed7"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="165d3f73-845f-4475-b87f-9568d8e30009">
        <Comments>/** @noop FT_EE_ReadECC
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="dc5f72df-c22f-4568-8bb6-8584379a1cc9">
          <Comments>/** @noop FT_EE_ReadECC
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="40dc2587-f27b-43ac-a8b9-5ee138155cd5">
          <Comments>/** @noop FT_EE_ReadECC
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ucOption</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8f15f78f-5992-4af2-8155-b1887f3efe15">
          <Comments>/** @noop FT_EE_ReadECC
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="25c077e6-5596-47a4-b56d-0aef537e6ed7"/>
          <Name>lpwValue</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f4575ca7-a05d-4739-b117-b776b9c36bb2"/>
        <Name>FT_EE_ReadECC</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="9e8a1a9b-bf89-4763-9263-6ac7be8a3249">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="e5bc0607-15b0-4972-a34e-e68ad0d0284f">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="e5eba2a2-9a5b-41f7-9f15-1a3e84154e2b">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3317</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="05b5e486-cdbe-4635-8ed1-fe47da45beae">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="804ae1d6-b1d0-4692-a447-3349a634ab7c">
        <Comments>/** @noop FT_GetQueueStatusEx
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="8fb39773-05c3-44d3-a887-368e5a6bd144">
          <Comments>/** @noop FT_GetQueueStatusEx
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="bde28d0a-8de6-4f1c-9282-c78268e27333">
          <Comments>/** @noop FT_GetQueueStatusEx
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
          <Name>dwRxBytes</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="05b5e486-cdbe-4635-8ed1-fe47da45beae"/>
        <Name>FT_GetQueueStatusEx</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="05a2b6b2-f324-42d0-b861-01450dd53fa0">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="9e3f2c49-2687-4727-89aa-0b744dc3f065">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="3cdbc166-ccb2-4535-94f5-5148b1dc81ab">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3326</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="18d561cc-1fd0-4c47-a1bc-121146bc31e5">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="54f3cb95-fcd8-424f-b060-9ad4ddce8173">
        <Comments>/** @noop FT_ComPortIdle
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="3ef8c408-9417-4eed-b357-d66e55b651c8">
          <Comments>/** @noop FT_ComPortIdle
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="18d561cc-1fd0-4c47-a1bc-121146bc31e5"/>
        <Name>FT_ComPortIdle</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="9b1a3ca7-766a-451f-942c-4fdc3c1ca31c">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="8e61ee1d-2aac-4f31-8a0b-8feb5b23b0e3">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="1253170b-58a8-4fe2-8c6b-bc9552d62454">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3334</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="10ea2568-577c-4147-8aa4-fd729f6b564d">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="6bc40adc-727c-4b73-899a-bdf4b2904304">
        <Comments>/** @noop FT_ComPortCancelIdle
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="2d77f706-2a1e-4a6a-87fa-736f2b157ddc">
          <Comments>/** @noop FT_ComPortCancelIdle
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="10ea2568-577c-4147-8aa4-fd729f6b564d"/>
        <Name>FT_ComPortCancelIdle</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="bf5eecb9-6b15-4940-9776-e4dfa373fd76">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="86849a4c-b601-4352-b456-f33d95d77f90">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="e549ceb7-eeac-47e5-a3b2-e0c445ccaa2f">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3341</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fd96a367-df74-40d4-9704-c984b88162fa">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="c22a504e-4e0a-4618-9e07-5a7727a688ba">
        <Comments>/** @noop FT_VendorCmdGet
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="687904ff-a349-4a20-862b-1c9b01e347fb">
          <Comments>/** @noop FT_VendorCmdGet
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="2072079e-716f-4755-a59a-5fb9712d5f8e">
          <Comments>/** @noop FT_VendorCmdGet
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Request</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="7e29ab2c-586a-4cb8-a190-eb424047d2ad">
          <Comments>/** @noop FT_VendorCmdGet
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
          <Name>Buf</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="7ba7ed02-2113-41d2-bd5f-63046210c554">
          <Comments>/** @noop FT_VendorCmdGet
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>Len</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="fd96a367-df74-40d4-9704-c984b88162fa"/>
        <Name>FT_VendorCmdGet</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="eebf841d-b4ac-4e35-adbf-28101bc573ba">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="caeaf6c7-ee53-4276-8d39-1af9826402ed">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="4414f12a-e1c4-41f6-9953-192e59276806">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3348</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="bd910e38-a847-4f5c-a26b-8bd9c489e5e1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="198f1ab1-4e89-439e-b03e-e0e819194feb">
        <Comments>/** @noop FT_VendorCmdSet
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="59decf76-a1f0-491b-9769-322523276969">
          <Comments>/** @noop FT_VendorCmdSet
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c8f19147-2888-4204-b4b3-56a77e778886">
          <Comments>/** @noop FT_VendorCmdSet
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>Request</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="0267e261-e1a0-46f0-91a5-79ac1d41d431">
          <Comments>/** @noop FT_VendorCmdSet
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
          <Name>Buf</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="ad3a6d18-6260-4a1c-b7f7-975743d905fb">
          <Comments>/** @noop FT_VendorCmdSet
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>Len</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="bd910e38-a847-4f5c-a26b-8bd9c489e5e1"/>
        <Name>FT_VendorCmdSet</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="dfbdd937-86b8-45b1-8fc3-e1629e972b0e">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="a9b99160-d3f0-4227-b2e4-b8cc7b2e0343">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="66d52169-9180-46fc-ac75-6093b6232e53">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3358</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ce49844d-7e22-4d85-9bb1-81e04f487e32">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="11583c0f-d712-4941-9883-4a69f7708901">
        <Comments>/** @noop FT_VendorCmdGetEx
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="4203bde5-1f3f-493d-914b-688f65b255ab">
          <Comments>/** @noop FT_VendorCmdGetEx
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="7be3e7f8-2a4a-47e8-8bc2-bc5406cb66c9">
          <Comments>/** @noop FT_VendorCmdGetEx
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>wValue</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8f15ed1f-0018-4be1-a055-5e2b32928f53">
          <Comments>/** @noop FT_VendorCmdGetEx
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
          <Name>Buf</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="38245235-d19f-45b2-b0e2-f984501e2268">
          <Comments>/** @noop FT_VendorCmdGetEx
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>Len</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="ce49844d-7e22-4d85-9bb1-81e04f487e32"/>
        <Name>FT_VendorCmdGetEx</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="bb5e4fc4-b38f-4997-a74b-01f26fe556aa">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="984fbb02-f467-44ff-8228-af7b435b22d3">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="fb311ca0-cf82-4f86-b576-030d49191265">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3368</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="932885b1-2c54-4a22-80f8-889c1baf9b5f">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="8fc302a9-9571-4cc2-8a4c-0d2b55b8d19e">
        <Comments>/** @noop FT_VendorCmdSetEx
	 * Undocumented function.
	 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="c61a81f2-c6f9-495e-9bc8-5f420db50b95">
          <Comments>/** @noop FT_VendorCmdSetEx
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>ftHandle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="1487f71a-9f98-4692-b8bc-8eb89d33f698">
          <Comments>/** @noop FT_VendorCmdSetEx
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>wValue</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c09db470-2855-4617-8be5-519e1e2c2bf4">
          <Comments>/** @noop FT_VendorCmdSetEx
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
          <Name>Buf</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8b77e506-99a4-4025-a199-8f6c4e14dadc">
          <Comments>/** @noop FT_VendorCmdSetEx
	 * Undocumented function.
	 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="3d32b16c-17c2-4e21-baba-1b936f7f669e"/>
          <Name>Len</Name>
        </Params>
        <DeclModifierFlags>1</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="932885b1-2c54-4a22-80f8-889c1baf9b5f"/>
        <Name>FT_VendorCmdSetEx</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="09629b12-ef92-4939-9b91-464e83b42f8b">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="80bae0e9-d205-4816-904a-0d7c2414670d">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="cf7b8c72-c5ea-4ad3-abe3-cd079f58800f">
          <Col>30</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
          <Line>3378</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ab044f2e-6c11-461c-90a6-286b46abbae8">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="f146cde8-2aea-4211-be8e-f734a2bacf93">
        <Comments>/******************************************************************************/</Comments>
        <Params type="cxxfe.ast.Variable" uuid="09be50bd-c753-411b-beb9-806666b0f3a3">
          <Comments>/******************************************************************************/</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
          <Name>status</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="ab044f2e-6c11-461c-90a6-286b46abbae8"/>
        <Name>Infra_DbgPrintStatus</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="e8d8a326-2664-437c-ad6e-dfe33b48b25c">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="44db76bb-7513-484f-9c33-ff27e9974582">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="10834a35-0df9-47d1-8560-9b455337ecfe">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>251</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c186cf62-d68c-4522-879f-5ee42177a0ce">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="957827bf-6ce1-43c5-9d15-8e856b7703ee"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="24f3ce9f-ced1-4885-a28e-1c5dd3a0c400">
        <Params type="cxxfe.ast.Variable" uuid="bef56a5e-828a-4f1d-8c5d-4e09c6df601a">
          <Type type="cxxfe.ast.types.TypedefType" uuid="957827bf-6ce1-43c5-9d15-8e856b7703ee"/>
          <Name>delay</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="c186cf62-d68c-4522-879f-5ee42177a0ce"/>
        <Name>Infra_Delay</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="0537984a-7643-4f8c-ad78-89b227426bf4">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="b44b2f59-eb6b-4541-bf4b-1076c5a1cca4">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="d2821352-da2a-4f4e-89a2-1dbc97db744c">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
          <Line>252</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="33980277-6f7c-4a4a-96c1-5c18db21d065">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="87f356b2-d8c4-49ef-b86e-05e839b25e2c">
        <Params type="cxxfe.ast.Variable" uuid="d55deaa6-d57b-440b-8b27-3f234f723c36">
          <Type type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
          <Name>Protocol</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="cfdc4d88-1901-4adc-ae9d-d67cb4650829">
          <Type type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
          <Name>numChans</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="33980277-6f7c-4a4a-96c1-5c18db21d065"/>
        <Name>FT_GetNumChannels</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="5bedf0d0-5342-4e13-a3c4-d2594bef6753">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="b759dcf5-74a9-4189-bd9c-a94694ef0c8e">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="6f21b736-5e21-400d-9c06-ad25ac475857">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>82</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="a516f2a9-5c40-462e-a136-65b1ba5ba52b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c5b4bb0a-84ac-4781-b2e3-91df74117ae8"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="0c3136b0-23d4-4040-88cf-e36f164e3418">
        <Params type="cxxfe.ast.Variable" uuid="305fe327-4cf6-4557-8073-cd768b027820">
          <Type type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
          <Name>Protocol</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="374e1d1e-3836-47ee-8bdf-2f055f63612c">
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>index</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="b98b05c3-12c1-4b38-9ec2-fda9f4275147">
          <Type type="cxxfe.ast.types.PointerType" uuid="c5b4bb0a-84ac-4781-b2e3-91df74117ae8"/>
          <Name>chanInfo</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="a516f2a9-5c40-462e-a136-65b1ba5ba52b"/>
        <Name>FT_GetChannelInfo</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="eecfbd76-e6ba-4357-aec6-af0c4d8f07f7">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="1bc9be6e-46d5-4826-9a18-8f521846d50f">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="d3e81922-9f3a-4631-8073-e94fb8b69ade">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>83</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e882cb7b-c0a6-4b8d-aa78-7f4f5a1a45e6">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="76596352-0d9e-4c7e-b93a-6940226dcd59">
        <Params type="cxxfe.ast.Variable" uuid="e5450418-8d8f-4fe5-b656-d4942af6f645">
          <Type type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
          <Name>Protocol</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="40a78709-359d-45f0-a024-8f5b316b52c6">
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>index</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8e439694-a8b7-4aed-849d-064687c8b368">
          <Type type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
          <Name>handle</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="e882cb7b-c0a6-4b8d-aa78-7f4f5a1a45e6"/>
        <Name>FT_OpenChannel</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="5b2fa233-4217-4170-a1df-ffd2a05ebdd5">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="2f79d232-0194-40c1-b1eb-b3a777c539f9">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="c09125ac-13af-4280-b1a6-7f58f1a0f649">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>85</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f9daae2b-ba27-4069-affc-491e237105f2">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="ddfaa14a-5762-4b58-84f3-902d08dd3b14"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="ddfaa14a-5762-4b58-84f3-902d08dd3b14"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="ddfaa14a-5762-4b58-84f3-902d08dd3b14"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="0350d619-7e3b-42ec-b348-3c9ebb30fae4">
        <Params type="cxxfe.ast.Variable" uuid="c24f3e28-2dfb-46e9-847a-a4ce2efa4ce1">
          <Type type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
          <Name>Protocol</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="6c11d768-3495-4853-8c7c-62c8c9407001">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="4f6400e1-b501-486e-91c5-98db9850253a">
          <Type type="cxxfe.ast.types.TypedefType" uuid="ddfaa14a-5762-4b58-84f3-902d08dd3b14"/>
          <Name>clockRate</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="6c8cf1dc-d5be-419e-a5c4-ffe9febd4f6e">
          <Type type="cxxfe.ast.types.TypedefType" uuid="ddfaa14a-5762-4b58-84f3-902d08dd3b14"/>
          <Name>latencyTimer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="bf2c18af-5d30-40ca-ad2d-3508f2c8e7b5">
          <Type type="cxxfe.ast.types.TypedefType" uuid="ddfaa14a-5762-4b58-84f3-902d08dd3b14"/>
          <Name>configOptions</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="203028ae-627c-4c97-b5d4-62c9dd86e0f8">
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>Pin</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f9daae2b-ba27-4069-affc-491e237105f2"/>
        <Name>FT_InitChannel</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="9492304a-0b82-48ce-8f40-06ad42b087fb">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="71924e6a-b982-4865-b1ef-e743b57df299">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="ad71bfa6-b43a-446a-a644-2e11a607775f">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>89</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="360cb837-3ec1-4a2d-87a1-67f5a3cbcc93">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="7d35fc4b-4ecd-4d7d-bfa2-17f962d4f86b">
        <Params type="cxxfe.ast.Variable" uuid="41ad8d54-1e66-44c7-8267-806235686bac">
          <Type type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
          <Name>Protocol</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="6dd52bca-96d7-45c0-af25-d5bfefdf4207">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="360cb837-3ec1-4a2d-87a1-67f5a3cbcc93"/>
        <Name>FT_CloseChannel</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="c1d220e0-4375-4b75-87a8-ad0d3fbc5216">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="00849078-a202-414c-a4e4-7fea66c354cd">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="c771d29e-3ad3-422e-bb01-f0eaeb84132e">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>97</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="bcb91c34-b97c-4351-a342-e7755daa017e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="16356220-003d-4f08-8fde-229343bb0de7"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="16356220-003d-4f08-8fde-229343bb0de7">
        <Type type="cxxfe.ast.types.TypedefType" uuid="6255196a-5aa5-4282-87b8-a25b71e2fa48"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="36b5c1b6-3bb8-4c9f-92c0-936b5f678dc0">
        <Params type="cxxfe.ast.Variable" uuid="484b27c3-9842-4f05-8b1d-5791fbdc60a3">
          <Type type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
          <Name>Protocol</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="1b5c38f3-3fc0-40b4-9554-d55250e9f2ff">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="97b52dcd-e5a7-498c-ae27-cc796760a3da">
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>noOfBytes</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="889c5eec-2505-4ecf-9063-053bbce87bba">
          <Type type="cxxfe.ast.types.PointerType" uuid="16356220-003d-4f08-8fde-229343bb0de7"/>
          <Name>buffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d0486207-74a7-4a1d-8ef9-a8941ba46341">
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>noOfBytesTransferred</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="bcb91c34-b97c-4351-a342-e7755daa017e"/>
        <Name>FT_Channel_Read</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="3616155b-8709-448e-b801-c5b1ec99b2ea">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="48df30fa-03f6-48f7-a4bf-d9cce413359b">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="05668638-477b-47a8-a834-07756d7fac8e">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>98</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="bb7da912-0053-4fb6-8462-9254a61734dd">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="16356220-003d-4f08-8fde-229343bb0de7"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="1def8c8a-2739-4d52-8820-25220b10f1d8">
        <Params type="cxxfe.ast.Variable" uuid="bdbc7619-967d-49b9-a5b9-7681ac10ef41">
          <Type type="cxxfe.ast.types.TypedefType" uuid="031a45ba-e886-4e24-96bc-5ab2f5f09805"/>
          <Name>Protocol</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="0bbb8219-ca2a-4782-b62f-889b5a15d704">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="072b1221-f41c-4325-8029-2d5f4851d67c">
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>noOfBytes</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="88e7b5a0-f397-48ee-818c-0c9b3341b4b7">
          <Type type="cxxfe.ast.types.PointerType" uuid="16356220-003d-4f08-8fde-229343bb0de7"/>
          <Name>buffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="075302d6-150a-4209-b9f7-afe49d4653fd">
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>noOfBytesTransferred</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="bb7da912-0053-4fb6-8462-9254a61734dd"/>
        <Name>FT_Channel_Write</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="6b62a9a5-168d-4436-9341-471f2560d95e">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="203220db-e562-4338-9545-563089f1e660">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="adbe4a6b-36be-4301-a4c6-74a99fed61f0">
          <Col>11</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>100</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c950afa1-6d0b-444d-8cab-781228b2a3a1">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fadb57b9-0245-4b0a-9d5d-77d4ba343da9"/>
        <RetType type="cxxfe.ast.types.BooleanType" uuid="1038d210-80e0-4bd5-afaa-5762d2a2fcef"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.BooleanType" uuid="1038d210-80e0-4bd5-afaa-5762d2a2fcef"/>
      <Symbols type="cxxfe.ast.Function" uuid="bf9e45cd-851c-4f30-9165-abbaf1edcdcf">
        <Params type="cxxfe.ast.Variable" uuid="876e4569-48cc-48ae-98a1-1d3a49cd2d31">
          <Type type="cxxfe.ast.types.TypedefType" uuid="fadb57b9-0245-4b0a-9d5d-77d4ba343da9"/>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="c950afa1-6d0b-444d-8cab-781228b2a3a1"/>
        <Name>Mid_CheckMPSSEAvailable</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="7a088448-f869-49ba-b7ab-2459e994acd7">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="8d67c9c7-e930-4b98-b7fb-79c8115c27f2">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="454f77fb-6766-4f51-a421-da46e971b446">
          <Col>13</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>102</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="34213b65-a7cf-4f63-b4db-758bf7703a58">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="256b0246-59e7-4ace-a828-8961a27865c8">
        <Params type="cxxfe.ast.Variable" uuid="c0e70d21-f059-42d1-9111-07abd9493243">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="34213b65-a7cf-4f63-b4db-758bf7703a58"/>
        <Name>Mid_ResetDevice</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="42cacd0e-4c8c-4946-b2c6-92eb1622f4c0">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="4ff89a64-9252-4882-ae69-ea35980d1159">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="c29acbec-ab1c-4feb-9bd0-2d2e1a00ba3e">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>104</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="6faf65aa-724d-45aa-9582-2065304047b9">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="78711c50-f332-4f86-8c20-bc9cb77209ad">
        <Params type="cxxfe.ast.Variable" uuid="ecb5f0e5-7ab2-43c7-9546-88cb081ea42c">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="6faf65aa-724d-45aa-9582-2065304047b9"/>
        <Name>Mid_PurgeDevice</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="bc795355-c2ff-428c-aad4-6ff33ac2dba4">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="760dc530-f035-41d7-844d-3cc42f3d0254">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="97e44ed7-a9f4-418d-9e3c-09ca5286201a">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>105</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="1f515937-aca5-4aae-9801-3ae8098b9a79">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="9529ecbf-de6b-4bcc-bbc6-27989928a9f3">
        <Params type="cxxfe.ast.Variable" uuid="6743cd52-f0c3-40fb-9d41-155a80bbe912">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="2b61c3d9-a2f0-4946-a986-329c6a0ab572">
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>inputBufSize</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="50ecfec8-7321-4fbd-8f94-03be2cc7d625">
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>outputBufSize</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="1f515937-aca5-4aae-9801-3ae8098b9a79"/>
        <Name>Mid_SetUSBParameters</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="c3eaf2f7-d012-4fdf-a243-39e2ca24b8bc">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="4417c321-9d64-4744-b17b-9593b72f17d5">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="916d1c9e-9682-46cf-9e2f-e37641b6b7d7">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>106</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="50347aba-4711-4a6f-ac3b-aabd41b01c3e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="6a7bc5dd-7422-43ee-9c70-5d98ca1d3536">
        <Params type="cxxfe.ast.Variable" uuid="46e3d009-b550-4c8f-a9aa-a63589f089af">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d9ab439b-b3dc-4ac2-995a-591327c48d20">
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>eventCh</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="80bc37c1-a85a-4259-b333-2036cb98b1c0">
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>eventStatus</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c9e03ee2-bb34-4de5-9fec-afa1893f1b92">
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>errorCh</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="0e936757-1e3d-40f5-b2ea-394f2c23439b">
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>errorStatus</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="50347aba-4711-4a6f-ac3b-aabd41b01c3e"/>
        <Name>Mid_SetDeviceSpecialChar</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="78e15334-a86b-4d8c-873b-803a2e035678">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="2be0482e-9eb3-4a30-adaa-a01aa36b7351">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="75a573ae-df0a-4e45-b579-2b244b0ddf75">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>108</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="0752adfc-a1af-49c6-845d-b946a36c7f1b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="e32e918f-3e41-40a9-b979-8dbfc3fdcc2c">
        <Params type="cxxfe.ast.Variable" uuid="f2fb2e5c-84ca-4753-af6f-7ad376513515">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="848ca783-e838-4e1b-8664-270a9d85641e">
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>rdTimeOut</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="20cbea57-5dd4-47d5-a564-97d890cbaded">
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>wrTimeOut</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="0752adfc-a1af-49c6-845d-b946a36c7f1b"/>
        <Name>Mid_SetDeviceTimeOut</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="b727f988-7075-4516-99af-2d7437f80446">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d7d34a0c-3df6-439e-899f-d383c027ed2f">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="01280006-cd06-4b27-bc74-fb1167f4d4fe">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>111</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="bc1c8f1b-2b16-4af1-bf2b-49b70f1907ac">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="93b5f10e-9554-4bec-b40e-5d47073373e0">
        <Params type="cxxfe.ast.Variable" uuid="2a7b648d-c17a-4cc7-8b5b-407dc82fc8da">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c479a332-40c2-46e8-a526-f0f17894e2c5">
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>milliSecond</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="bc1c8f1b-2b16-4af1-bf2b-49b70f1907ac"/>
        <Name>Mid_SetLatencyTimer</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="e1984041-d0ce-41a7-817c-b075cbefa51d">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="59c9e1df-867a-42f4-9730-69e3cfa82445">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="97623d26-be61-4930-ba40-240b830c30bb">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>113</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="133f8f8f-b8ba-4948-81de-c668004b3724">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="53eceb08-3091-4490-b7c5-3feaebc609e8">
        <Params type="cxxfe.ast.Variable" uuid="26b7b7f3-bad8-4a89-8663-f7409408dd6c">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="133f8f8f-b8ba-4948-81de-c668004b3724"/>
        <Name>Mid_ResetMPSSE</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="2a75e992-4658-4908-bd2e-85292690a1cc">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="35cc4571-ce16-4a0b-bdd1-90bc13b1a19a">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="d197b6e3-adf2-4e95-b2af-4700e9aed8a1">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>114</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="5d2301af-60ed-421e-b8f6-88a7dca6e5b7">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="1cf6551c-e2ea-463c-89a3-a2568dc6c30d">
        <Params type="cxxfe.ast.Variable" uuid="e3bcc5d3-cddd-4d81-a857-ddadf35f2132">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="5d2301af-60ed-421e-b8f6-88a7dca6e5b7"/>
        <Name>Mid_EnableMPSSEIn</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="82b9d196-d6ff-43b2-930b-2d304f954c3a">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d6cc37a4-04b9-47f1-953e-35501a152cc7">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="b3aed788-fb5a-41da-aa89-ca2ee9c3b331">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>115</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="5652b5ff-7c58-4f6f-afe6-e5b09e030f30">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="02ab8324-62a7-438b-a23b-9601c3eceaf8">
        <Params type="cxxfe.ast.Variable" uuid="94d7f217-9441-4f9f-9d39-77ed12868cad">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="5652b5ff-7c58-4f6f-afe6-e5b09e030f30"/>
        <Name>Mid_SyncMPSSE</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="fd71d4fd-e8ac-4cda-b470-c2306555fded">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="f3bf43dd-fbaa-4d18-8af7-a3d076ce6c5d">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="495b7e2d-523a-415c-9621-3fcc2a01d96c">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>116</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="3c734385-4747-4da8-a79d-6303e53ccb75">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="57803308-6650-45ed-b184-f8884e1f89d1">
        <Params type="cxxfe.ast.Variable" uuid="e0f81d0d-da86-4b5d-ac3b-e60ebc3a8f8c">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="0cdb7959-4f8a-4159-8f86-c719db691b34">
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>echoCmdFlag</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="dda74063-a675-48da-841c-e303943cbf26">
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>ecoCmd</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="af5c1b30-9388-40e9-974e-12d0c96aed91">
          <Type type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
          <Name>cmdEchoed</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="3c734385-4747-4da8-a79d-6303e53ccb75"/>
        <Name>Mid_SendReceiveCmdFromMPSSE</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="d09405f8-4076-44f8-8559-a079c5fc9201">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="41ad7185-ccaa-43b3-b937-aeb6d520ea5c">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="3bfc7f3d-2020-49c8-8822-1dadfc5409b6">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>117</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="1221864c-8d2c-4def-8bdb-2c82f6c0eebf">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="6255196a-5aa5-4282-87b8-a25b71e2fa48"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="6255196a-5aa5-4282-87b8-a25b71e2fa48"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="d01cd7b8-fad2-4dae-901b-32fa0551ca35">
        <Params type="cxxfe.ast.Variable" uuid="21d29e4b-c23a-4ab7-b3ae-2aab7c0347ac">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="595dd399-a294-4362-a012-ed51386b4149">
          <Type type="cxxfe.ast.types.TypedefType" uuid="6255196a-5aa5-4282-87b8-a25b71e2fa48"/>
          <Name>value</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="694980b1-469e-417f-b92e-e59f083ce929">
          <Type type="cxxfe.ast.types.TypedefType" uuid="6255196a-5aa5-4282-87b8-a25b71e2fa48"/>
          <Name>direction</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="1221864c-8d2c-4def-8bdb-2c82f6c0eebf"/>
        <Name>Mid_SetGPIOLow</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="d0e444a5-5099-46f8-8b40-44c00944d332">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="53130f08-5151-44ad-a253-bbf2463c92fd">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="4c7b6b8a-2b37-4ffa-81b1-420bdb11e551">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>119</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="11d1848a-77a7-4708-9e24-ceab5a63e425">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="9f3badb4-faef-4899-815f-7772052ec350"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="ddfaa14a-5762-4b58-84f3-902d08dd3b14"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="1190a8ae-bf95-4a7f-9641-8167c95af000">
        <Params type="cxxfe.ast.Variable" uuid="2932f17b-0a8f-4d3b-9907-edd495669978">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="a86e30c3-647f-4af7-b141-286c15983f5c">
          <Type type="cxxfe.ast.types.TypedefType" uuid="9f3badb4-faef-4899-815f-7772052ec350"/>
          <Name>ftDevice</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="b27d8aed-365d-4d12-ba61-c6ae44b69009">
          <Type type="cxxfe.ast.types.TypedefType" uuid="ddfaa14a-5762-4b58-84f3-902d08dd3b14"/>
          <Name>clock</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="11d1848a-77a7-4708-9e24-ceab5a63e425"/>
        <Name>Mid_SetClock</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="958b8c0e-d6b2-4a69-90f1-167f37be5cfe">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="4ee3b496-2962-4bba-a9b6-5aabeb6f4214">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="20671f76-1024-4518-b1c4-9fd4834ce326">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>120</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2e94b241-f360-4719-adc2-a5458b831f10">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="cd3052fd-5483-423d-b569-dc4e6533c41d"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="a1711d4d-bcbd-4c31-a7d9-1d8a01c89203">
        <Params type="cxxfe.ast.Variable" uuid="7aa9ac04-4a7a-4fa5-961d-ee7625cb236a">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="e8a41d62-0cd0-4e19-895e-2dba50c256e4">
          <Type type="cxxfe.ast.types.PointerType" uuid="cd3052fd-5483-423d-b569-dc4e6533c41d"/>
          <Name>ftDevice</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="2e94b241-f360-4719-adc2-a5458b831f10"/>
        <Name>Mid_GetFtDeviceType</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="c45b07c0-923a-4dd4-8f4b-89f577a2cb88">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="275c63d1-64e8-4f11-8e0e-767f98c4cb55">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="f1ecb7b6-3321-4d10-b590-061b5a2f8517">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>121</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="ff40571c-70c8-4646-a2a3-90e6893efd81">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="6255196a-5aa5-4282-87b8-a25b71e2fa48"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="ae0d9462-9408-46dc-ab4c-87b254fdcdbc">
        <Params type="cxxfe.ast.Variable" uuid="f9931d02-8a5d-4b48-b17f-2a0168d0526e">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="60e83289-ade7-45ef-8634-fa8df4fe8ea4">
          <Type type="cxxfe.ast.types.TypedefType" uuid="6255196a-5aa5-4282-87b8-a25b71e2fa48"/>
          <Name>loopBackFlag</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="ff40571c-70c8-4646-a2a3-90e6893efd81"/>
        <Name>Mid_SetDeviceLoopbackState</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="168408d7-7ea9-45c9-beec-f1336fae074d">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="abb5bb1b-edd8-46d2-9d7b-3548b37af225">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="63d47905-2fe4-4c68-9aca-010f25ff0d91">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>122</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="54dee2e0-ebba-40b3-a7c8-60ffba8db079">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="7b05bf26-8a0e-476d-b747-2d6e112a9b82">
        <Params type="cxxfe.ast.Variable" uuid="7321048b-ac3a-4a80-9ce2-aa8ae3c23ee4">
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="54dee2e0-ebba-40b3-a7c8-60ffba8db079"/>
        <Name>Mid_EmptyDeviceInputBuff</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="250b3c2e-00ce-483b-aee3-1dedef33bb28">
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="1cffc984-1c00-4751-b2fe-2e8379a87a5f">
            <definitionStatus>OutOfScope</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="04fa13f1-406e-4451-9e35-18d9c92d2057">
          <Col>18</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
          <Line>123</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="fd25f193-b11c-4b91-80a2-5e4554e8fb8a">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="4d5adf84-bc8c-44e5-97f8-4e7c1a6a7644">
        <Comments>/*!
 * \brief This function initializes libMPSSE
 *
 * This function is called once when the library is loaded. It initializes all the modules in the
 * library. This function initializes all the variables and data structures that are required to be
 * initialized once only during loading.
 *
 * \param[in] none
 * \param[out] none
 * \return none
 * \sa
 * \note May individually call Ftdi_I2C_Module_Init, Ftdi_SPI_Module_Init, Ftdi_Mid_Module_Init,
 * Ftdi_Common_Module_Init, etc if required. This function should be called by the OS specific
 * function(eg: DllMain for windows) that is called by the OS automatically during startup.
 * \warning
 */</Comments>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="fd25f193-b11c-4b91-80a2-5e4554e8fb8a"/>
        <Name>Init_libMPSSE</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="0772c00a-5f11-40b7-8727-8d4a34a5ddec">
          <cppSignature>void Init_libMPSSE()</cppSignature>
          <cppSignatureFcnType>void(*)()</cppSignatureFcnType>
          <cppType>[void]</cppType>
          <description>clib.ftLib.Init_libMPSSE Representation of C++ function Init_libMPSSE.
This function initializes libMPSSE</description>
          <detailedDescription>This content is from the external library documentation.

This function is called once when the library is loaded. It initializes all the modules in the
 library. This function initializes all the variables and data structures that are required to be
 initialized once only during loading.</detailedDescription>
          <name>clib.ftLib.Init_libMPSSE</name>
          <ptKey>F/Init_libMPSSE#[void]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="e24ef4bd-f672-4705-b01b-a1f5f8e9ca65"/>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="75984a09-4372-4d37-b36b-d0bd68b4eb80">
          <Col>27</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>230</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="48d0e30c-88e5-4f4d-ad5f-13778267f4c3">
        <IsPrototyped>true</IsPrototyped>
        <RetType type="cxxfe.ast.types.VoidType" uuid="798b5aa6-cbc4-4ff7-86a6-ff2acbfb941f"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="9b34942d-7276-4af4-856e-52bbe2e0d607">
        <Comments>/*!
 * \brief Cleans up the module before unloading
 *
 * This function frees all the resources that were allocated during initialization. It should be called
 * by the OS to ensure that the module exits gracefully
 *
 * \param[in] none
 * \param[out] none
 * \return none
 * \sa
 * \note
 * \warning
 */</Comments>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="48d0e30c-88e5-4f4d-ad5f-13778267f4c3"/>
        <Name>Cleanup_libMPSSE</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="1ee71a73-e106-4279-8a79-ee97d42f82e7">
          <cppSignature>void Cleanup_libMPSSE()</cppSignature>
          <cppSignatureFcnType>void(*)()</cppSignatureFcnType>
          <cppType>[void]</cppType>
          <description>clib.ftLib.Cleanup_libMPSSE Representation of C++ function Cleanup_libMPSSE.
Cleans up the module before unloading</description>
          <detailedDescription>This content is from the external library documentation.

This function frees all the resources that were allocated during initialization. It should be called
 by the OS to ensure that the module exits gracefully</detailedDescription>
          <name>clib.ftLib.Cleanup_libMPSSE</name>
          <ptKey>F/Cleanup_libMPSSE#[void]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="ed0bef6a-29bb-4788-85f4-8fdb99f1f65c"/>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="d7194f95-62c5-4c47-905c-a62c5f62571e">
          <Col>27</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>245</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="943d08ee-2de7-47cc-9a79-608bf6fde475">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="34dafac2-ca13-4bf2-acf8-eef13a46bb84">
        <Comments>/*!
 * \brief Gets the number of I2C channels connected to the host
 *
 * This function gets the number of I2C channels that are connected to the host system
 * The number of ports available in each of these chips are different.
 *
 * \param[out] *numChannels Pointer to variable in which the no of channels will be returned
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note This function doesn&apos;t return the number of FTDI chips connected to the host system
 * \note FT2232D has 1 MPSSE port
 * \note FT2232H has 2 MPSSE ports
 * \note FT4232H has 4 ports but only 2 of them have MPSSEs
 * so call to this function will return 2 if a FT4232 is connected to it.
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="87a07ca1-120c-4d7b-8d8a-fbebea338a5e">
          <Comments>/*!
 * \brief Gets the number of I2C channels connected to the host
 *
 * This function gets the number of I2C channels that are connected to the host system
 * The number of ports available in each of these chips are different.
 *
 * \param[out] *numChannels Pointer to variable in which the no of channels will be returned
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note This function doesn&apos;t return the number of FTDI chips connected to the host system
 * \note FT2232D has 1 MPSSE port
 * \note FT2232H has 2 MPSSE ports
 * \note FT4232H has 4 ports but only 2 of them have MPSSEs
 * so call to this function will return 2 if a FT4232 is connected to it.
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="c531c477-72d3-4966-87a4-0fddf4f5df9b"/>
          <Name>numChannels</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="943d08ee-2de7-47cc-9a79-608bf6fde475"/>
        <Name>I2C_GetNumChannels</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="44ce35a9-f7ba-4a8c-a71e-8e48b7078530">
          <cppSignature>FT_STATUS I2C_GetNumChannels(DWORD * numChannels)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(DWORD *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.I2C_GetNumChannels Representation of C++ function I2C_GetNumChannels.
Gets the number of I2C channels connected to the host</description>
          <detailedDescription>This content is from the external library documentation.

This function gets the number of I2C channels that are connected to the host system
 The number of ports available in each of these chips are different.</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="8d9c663e-a5e5-45ed-8923-2c0b41262c8e">
            <cppPosition>1</cppPosition>
            <cppType>[unsigned long]Ptr</cppType>
            <description>[out] *numChannels Pointer to variable in which the no of channels will be returned</description>
            <mwType>clib.array.ftLib.UnsignedLong</mwType>
            <name>numChannels</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedLong</validTypes>
            <validTypes>uint32</validTypes>
          </inputs>
          <name>clib.ftLib.I2C_GetNumChannels</name>
          <outputs type="mwAnnotation.Argument" uuid="03ebc126-2925-46a0-9822-f8303b13b84a">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/I2C_GetNumChannels@[unsigned long]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="de22d538-8c92-4854-bb2d-07e7df114a53">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="3836a881-bc58-46b2-a928-a6ae0d52ddff">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>263</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="76c36e07-bde2-4769-b8b9-a105a803c9e7">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="c5b4bb0a-84ac-4781-b2e3-91df74117ae8"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="57fd95cf-29c4-43f8-bf14-8cf635e4f13a">
        <Comments>/*!
 * \brief Provides information about channel
 *
 * This function takes a channel index (valid values are from 1 to the value returned by
 * I2C_GetNumChannels) and provides information about the channel in the form of a populated
 * ChannelInfo structure.
 *
 * \param[in] index Index of the channel
 * \param[out] chanInfo Pointer to FT_DEVICE_LIST_INFO_NODE structure(see D2XX  *			  Programmer&apos;s Guide)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \note  The channel ID can be determined by the user from the last digit of the location ID
 * \sa
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="1bf24471-7d79-4930-bea3-d75d70389080">
          <Comments>/*!
 * \brief Provides information about channel
 *
 * This function takes a channel index (valid values are from 1 to the value returned by
 * I2C_GetNumChannels) and provides information about the channel in the form of a populated
 * ChannelInfo structure.
 *
 * \param[in] index Index of the channel
 * \param[out] chanInfo Pointer to FT_DEVICE_LIST_INFO_NODE structure(see D2XX  *			  Programmer&apos;s Guide)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \note  The channel ID can be determined by the user from the last digit of the location ID
 * \sa
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>index</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="8e4755e2-3fac-4dd9-a2ff-b93b40c0ea6e">
          <Comments>/*!
 * \brief Provides information about channel
 *
 * This function takes a channel index (valid values are from 1 to the value returned by
 * I2C_GetNumChannels) and provides information about the channel in the form of a populated
 * ChannelInfo structure.
 *
 * \param[in] index Index of the channel
 * \param[out] chanInfo Pointer to FT_DEVICE_LIST_INFO_NODE structure(see D2XX  *			  Programmer&apos;s Guide)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \note  The channel ID can be determined by the user from the last digit of the location ID
 * \sa
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="c5b4bb0a-84ac-4781-b2e3-91df74117ae8"/>
          <Name>chanInfo</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="76c36e07-bde2-4769-b8b9-a105a803c9e7"/>
        <Name>I2C_GetChannelInfo</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="a53d6365-6dc9-40a9-9b8d-3ca0bba074b5">
          <cppSignature>FT_STATUS I2C_GetChannelInfo(DWORD index,FT_DEVICE_LIST_INFO_NODE * chanInfo)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(unsigned long, FT_DEVICE_LIST_INFO_NODE *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.I2C_GetChannelInfo Representation of C++ function I2C_GetChannelInfo.
Provides information about channel</description>
          <detailedDescription>This content is from the external library documentation.

This function takes a channel index (valid values are from 1 to the value returned by
 I2C_GetNumChannels) and provides information about the channel in the form of a populated
 ChannelInfo structure.</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="8cd6ac89-2a81-41d5-a50c-c6dc109a2968">
            <cppPosition>1</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] index Index of the channel</description>
            <mwType>uint32</mwType>
            <name>index</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="67d9c01b-3dd8-4061-bf31-4f2587f31aaa">
            <cppPosition>2</cppPosition>
            <cppType>[_ft_device_list_info_node]Ptr</cppType>
            <description>[out] chanInfo Pointer to FT_DEVICE_LIST_INFO_NODE structure(see D2XX  *			  Programmer&apos;s Guide)</description>
            <mwType>clib.ftLib.FT_DEVICE_LIST_INFO_NODE</mwType>
            <name>chanInfo</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.FT_DEVICE_LIST_INFO_NODE</validTypes>
            <validTypes>clib.array.ftLib.FT_DEVICE_LIST_INFO_NODE</validTypes>
          </inputs>
          <name>clib.ftLib.I2C_GetChannelInfo</name>
          <outputs type="mwAnnotation.Argument" uuid="f1e15303-d66a-4284-b785-317ee5807f67">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
\note  The channel ID can be determined by the user from the last digit of the location ID</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/I2C_GetChannelInfo@[unsigned long],[_ft_device_list_info_node]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="3fe56082-c599-491b-a28d-21eb393312b2">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="d4a87bc4-37f4-4f55-9711-c58542f6a264">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>280</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="13ce4ba6-3c58-45aa-8760-3937aef4113c">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="b4cca4cc-3e83-45f3-a709-db92237061a1">
        <Comments>/*!
 * \brief Opens a channel and returns a handle to it
 *
 * This function opens the indexed channel and returns a handle to it
 *
 * \param[in] index Index of the channel
 * \param[out] handle Pointer to the handle of the opened channel
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note Trying to open an already open channel will return an error code
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="55f54e8a-564f-4986-83bb-4954d47cdcd0">
          <Comments>/*!
 * \brief Opens a channel and returns a handle to it
 *
 * This function opens the indexed channel and returns a handle to it
 *
 * \param[in] index Index of the channel
 * \param[out] handle Pointer to the handle of the opened channel
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note Trying to open an already open channel will return an error code
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>index</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="e574e2e3-0029-47ab-a634-f2d18a5ce104">
          <Comments>/*!
 * \brief Opens a channel and returns a handle to it
 *
 * This function opens the indexed channel and returns a handle to it
 *
 * \param[in] index Index of the channel
 * \param[out] handle Pointer to the handle of the opened channel
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note Trying to open an already open channel will return an error code
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="07485987-ec29-4bfb-baa8-787c210ab9aa"/>
          <Name>handle</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="13ce4ba6-3c58-45aa-8760-3937aef4113c"/>
        <Name>I2C_OpenChannel</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ade4698a-d0a7-4328-ba3e-d572e959abc0">
          <cppSignature>FT_STATUS I2C_OpenChannel(DWORD index,FT_HANDLE * handle)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(unsigned long, FT_HANDLE *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.I2C_OpenChannel Representation of C++ function I2C_OpenChannel.
Opens a channel and returns a handle to it</description>
          <detailedDescription>This content is from the external library documentation.

This function opens the indexed channel and returns a handle to it</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="1e094044-9faa-4e76-9d18-75fdd7b6cde1">
            <cppPosition>1</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] index Index of the channel</description>
            <mwType>uint32</mwType>
            <name>index</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="e36cabb9-154b-4bf0-9eaf-c1b4cb6d7f51">
            <cppPosition>2</cppPosition>
            <cppType>[void]PtrPtr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[out] handle Pointer to the handle of the opened channel</description>
            <direction>Out</direction>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="66cff0d3-d93a-4f22-9e6c-d5c3e93028b4">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <name>clib.ftLib.I2C_OpenChannel</name>
          <outputs type="mwAnnotation.Argument" uuid="6b058f14-6c52-4929-8ba5-ab44130eec5c">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/I2C_OpenChannel@[unsigned long],[void]PtrPtr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="5229f86f-3f43-4e3b-bbef-52b861c66a70"/>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="a07cf38e-2037-4da4-832c-05f3324f5bc1">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>295</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="b8bb3894-cb84-4b6f-bd17-62986e9afcce">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="7c27de15-b1c0-4345-be0f-7b44b9f4a308"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="7c27de15-b1c0-4345-be0f-7b44b9f4a308">
        <Type type="cxxfe.ast.types.TypedefType" uuid="e2c180c0-39da-4024-b86b-9ecbc17a56a7"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="61500ddd-38eb-42d4-8b82-3eb0e1f7ef48">
        <Comments>/*!
 * \brief Initializes a channel
 *
 * This function initializes the channel and the communication parameters associated with it
 *
 * \param[in] handle Handle of the channel
 * \param[out] config Pointer to I2C_ChannelConfig structure(memory to be allocated by caller)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="f14fee1e-dbad-42f1-bfd0-3bb7b2091ce7">
          <Comments>/*!
 * \brief Initializes a channel
 *
 * This function initializes the channel and the communication parameters associated with it
 *
 * \param[in] handle Handle of the channel
 * \param[out] config Pointer to I2C_ChannelConfig structure(memory to be allocated by caller)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="bf548f09-2657-4b8f-a6f1-69993103cb9e">
          <Comments>/*!
 * \brief Initializes a channel
 *
 * This function initializes the channel and the communication parameters associated with it
 *
 * \param[in] handle Handle of the channel
 * \param[out] config Pointer to I2C_ChannelConfig structure(memory to be allocated by caller)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="7c27de15-b1c0-4345-be0f-7b44b9f4a308"/>
          <Name>config</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="b8bb3894-cb84-4b6f-bd17-62986e9afcce"/>
        <Name>I2C_InitChannel</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="1621a04c-17ad-46f1-94c5-d03545c60d11">
          <cppSignature>FT_STATUS I2C_InitChannel(FT_HANDLE handle,I2C_ChannelConfig * config)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, I2C_ChannelConfig *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.I2C_InitChannel Representation of C++ function I2C_InitChannel.
Initializes a channel</description>
          <detailedDescription>This content is from the external library documentation.

This function initializes the channel and the communication parameters associated with it</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="ad557407-69fb-4d3c-9bad-c6957a311ec9">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="c7d93c13-79bd-42c1-9550-92b711b52278">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="6e9d1435-1473-43e9-8451-891f6272e38b">
            <cppPosition>2</cppPosition>
            <cppType>[ChannelConfig_i2c]Ptr</cppType>
            <description>[out] config Pointer to I2C_ChannelConfig structure(memory to be allocated by caller)</description>
            <mwType>clib.ftLib.I2C_ChannelConfig</mwType>
            <name>config</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.I2C_ChannelConfig</validTypes>
            <validTypes>clib.array.ftLib.I2C_ChannelConfig</validTypes>
          </inputs>
          <name>clib.ftLib.I2C_InitChannel</name>
          <outputs type="mwAnnotation.Argument" uuid="dca348b9-1d9c-4bd8-9f2b-bbf5908c5107">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/I2C_InitChannel@[void]Ptr,[ChannelConfig_i2c]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="5b8960c4-21fb-4971-9377-9e506cdf096c">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="d974cb64-406d-47ae-88c4-a8ada5b5d4b5">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>309</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="cb92694b-7c2d-41b5-b9f6-f37bb30272e2">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="364d6980-1a98-44a7-9953-cb60905e63be">
        <Comments>/*!
 * \brief Closes a channel
 *
 * Closes a channel and frees all resources that were used by it
 *
 * \param[in] handle Handle of the channel
 * \param[out] none
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="6f7550ea-7dfa-48cc-9333-aedb2c2935a6">
          <Comments>/*!
 * \brief Closes a channel
 *
 * Closes a channel and frees all resources that were used by it
 *
 * \param[in] handle Handle of the channel
 * \param[out] none
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="cb92694b-7c2d-41b5-b9f6-f37bb30272e2"/>
        <Name>I2C_CloseChannel</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="73428579-c3c1-4977-9b07-67668dd44a85">
          <cppSignature>FT_STATUS I2C_CloseChannel(FT_HANDLE handle)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.I2C_CloseChannel Representation of C++ function I2C_CloseChannel.
Closes a channel</description>
          <detailedDescription>This content is from the external library documentation.

Closes a channel and frees all resources that were used by it</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="cb027e94-25a1-4a79-be4e-fd25efe8613b">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="c94d6c41-6e5c-4e49-add1-f5dad2965d68">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <name>clib.ftLib.I2C_CloseChannel</name>
          <outputs type="mwAnnotation.Argument" uuid="d92c7c87-5827-4891-aa12-f797e1d25bdc">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/I2C_CloseChannel@[void]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="73cd1acd-e41d-4140-9aa6-f5abe94fa0b4"/>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="76149c88-ebfe-464e-804c-c5267a70a68c">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>323</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="efe02745-0167-4fb5-90fe-054b47d9f83b">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="93da7db2-f6ea-493b-90fb-da6251fcd72d">
        <Comments>/*!
 * \brief Reads data from I2C slave
 *
 * This function reads the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be read
 * \param[out] buffer Pointer to the buffer where data is to be read
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes read
 * \param[in] options This parameter specifies data transfer options. Namely, if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="7005e350-141e-4f23-9afb-b01c7a2fb9b1">
          <Comments>/*!
 * \brief Reads data from I2C slave
 *
 * This function reads the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be read
 * \param[out] buffer Pointer to the buffer where data is to be read
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes read
 * \param[in] options This parameter specifies data transfer options. Namely, if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="808d6a43-38c4-4e2e-b2f5-eaae59bf08c4">
          <Comments>/*!
 * \brief Reads data from I2C slave
 *
 * This function reads the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be read
 * \param[out] buffer Pointer to the buffer where data is to be read
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes read
 * \param[in] options This parameter specifies data transfer options. Namely, if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>deviceAddress</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="e7dbbd48-7fdc-4343-8ecb-7c42fc8d7743">
          <Comments>/*!
 * \brief Reads data from I2C slave
 *
 * This function reads the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be read
 * \param[out] buffer Pointer to the buffer where data is to be read
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes read
 * \param[in] options This parameter specifies data transfer options. Namely, if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>sizeToTransfer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5496d437-6b2f-4bf3-a0f5-d9c92744f796">
          <Comments>/*!
 * \brief Reads data from I2C slave
 *
 * This function reads the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be read
 * \param[out] buffer Pointer to the buffer where data is to be read
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes read
 * \param[in] options This parameter specifies data transfer options. Namely, if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
          <Name>buffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c9ea618c-c71c-4f13-9320-f0b1973a3dc8">
          <Comments>/*!
 * \brief Reads data from I2C slave
 *
 * This function reads the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be read
 * \param[out] buffer Pointer to the buffer where data is to be read
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes read
 * \param[in] options This parameter specifies data transfer options. Namely, if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>sizeTransfered</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="ca61aa9e-b727-4857-b7d6-2d2bcab69f4f">
          <Comments>/*!
 * \brief Reads data from I2C slave
 *
 * This function reads the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be read
 * \param[out] buffer Pointer to the buffer where data is to be read
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes read
 * \param[in] options This parameter specifies data transfer options. Namely, if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>options</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="efe02745-0167-4fb5-90fe-054b47d9f83b"/>
        <Name>I2C_DeviceRead</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="eaf07b06-deab-40f5-9de5-127f71ae8189">
          <cppSignature>FT_STATUS I2C_DeviceRead(FT_HANDLE handle,UCHAR deviceAddress,DWORD sizeToTransfer,UCHAR * buffer,LPDWORD sizeTransfered,DWORD options)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, unsigned char, unsigned long, UCHAR *, DWORD *, unsigned long)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.I2C_DeviceRead Representation of C++ function I2C_DeviceRead.
Reads data from I2C slave</description>
          <detailedDescription>This content is from the external library documentation.

This function reads the specified number of bytes from an addressed I2C slave</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="81dc0771-f7be-4230-aab0-fa477424dda3">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="c0813266-e48d-4620-98ba-2a664a7c6075">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="221c7227-b049-44c8-a9f2-83945f8e99d3">
            <cppPosition>2</cppPosition>
            <cppType>[unsigned char]</cppType>
            <description>[in] deviceAddress Address of the I2C slave</description>
            <mwType>uint8</mwType>
            <name>deviceAddress</name>
            <storage>Value</storage>
            <validTypes>uint8</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="fc40fef4-e503-4138-bee5-28096a024cbe">
            <cppPosition>3</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] sizeToTransfer Number of bytes to be read</description>
            <mwType>uint32</mwType>
            <name>sizeToTransfer</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="bc66aaf0-9605-44d9-8268-2e996867f5c5">
            <cppPosition>4</cppPosition>
            <cppType>[unsigned char]Ptr</cppType>
            <description>[out] buffer Pointer to the buffer where data is to be read</description>
            <mwType>clib.array.ftLib.UnsignedChar</mwType>
            <name>buffer</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedChar</validTypes>
            <validTypes>uint8</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="2ed0ec93-df82-4c3e-9781-029024af567a">
            <cppPosition>5</cppPosition>
            <cppType>[unsigned long]Ptr</cppType>
            <description>[out] sizeTransferred Pointer to variable containing the number of bytes read</description>
            <mwType>clib.array.ftLib.UnsignedLong</mwType>
            <name>sizeTransfered</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedLong</validTypes>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="39e163cb-75e1-462a-9113-e2c2b90a3bb4">
            <cppPosition>6</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] options This parameter specifies data transfer options. Namely, if a start/stop bits
*			are required, if the transfer should continue or stop if device nAcks, etc</description>
            <mwType>uint32</mwType>
            <name>options</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <name>clib.ftLib.I2C_DeviceRead</name>
          <outputs type="mwAnnotation.Argument" uuid="4ab8b5ba-4114-4033-832e-4716cf077bdf">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/I2C_DeviceRead@[void]Ptr,[unsigned char],[unsigned long],[unsigned char]Ptr,[unsigned long]Ptr,[unsigned long]#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="9249c458-cbdd-403c-91ef-d362fdba1efa">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="93fa8b22-0191-48b4-8ef3-1d55170c0bdb">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>346</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="9435b47c-f895-48f0-8864-e65feaae6b47">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="d10e27cd-202e-4cb5-82c1-80735c817b7b">
        <Comments>/*!
 * \brief Writes data from I2C slave
 *
 * This function writes the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be written
 * \param[out] buffer Pointer to the buffer from where data is to be written
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes written
 * \param[in] options This parameter specifies data transfer options. Namely if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="8307e260-7dca-469b-9578-70a1aee73b1d">
          <Comments>/*!
 * \brief Writes data from I2C slave
 *
 * This function writes the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be written
 * \param[out] buffer Pointer to the buffer from where data is to be written
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes written
 * \param[in] options This parameter specifies data transfer options. Namely if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="37f5c30b-22b9-450c-9ee6-ad218bad82b1">
          <Comments>/*!
 * \brief Writes data from I2C slave
 *
 * This function writes the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be written
 * \param[out] buffer Pointer to the buffer from where data is to be written
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes written
 * \param[in] options This parameter specifies data transfer options. Namely if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>deviceAddress</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="0aa14f2d-d696-4e05-b9d4-f65968514541">
          <Comments>/*!
 * \brief Writes data from I2C slave
 *
 * This function writes the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be written
 * \param[out] buffer Pointer to the buffer from where data is to be written
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes written
 * \param[in] options This parameter specifies data transfer options. Namely if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>sizeToTransfer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="a3940a31-620c-4284-8c3a-d539a8221e44">
          <Comments>/*!
 * \brief Writes data from I2C slave
 *
 * This function writes the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be written
 * \param[out] buffer Pointer to the buffer from where data is to be written
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes written
 * \param[in] options This parameter specifies data transfer options. Namely if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
          <Name>buffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5911f242-5994-4781-bad0-d0f93fbddf0d">
          <Comments>/*!
 * \brief Writes data from I2C slave
 *
 * This function writes the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be written
 * \param[out] buffer Pointer to the buffer from where data is to be written
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes written
 * \param[in] options This parameter specifies data transfer options. Namely if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>sizeTransfered</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="40b1fd00-572e-479e-808f-247dd421d263">
          <Comments>/*!
 * \brief Writes data from I2C slave
 *
 * This function writes the specified number of bytes from an addressed I2C slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[in] sizeToTransfer Number of bytes to be written
 * \param[out] buffer Pointer to the buffer from where data is to be written
 * \param[out] sizeTransferred Pointer to variable containing the number of bytes written
 * \param[in] options This parameter specifies data transfer options. Namely if a start/stop bits
 *			are required, if the transfer should continue or stop if device nAcks, etc
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa	Definitions of macros I2C_TRANSFER_OPTIONS_START_BIT,
 *		I2C_TRANSFER_OPTIONS_STOP_BIT, I2C_TRANSFER_OPTIONS_BREAK_ON_NACK,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BYTES,
 *		I2C_TRANSFER_OPTIONS_FAST_TRANSFER_BITS &amp;
 *		I2C_TRANSFER_OPTIONS_NO_ADDRESS
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="fceb3ab7-4c06-41b6-8424-795799628d23"/>
          <Name>options</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="9435b47c-f895-48f0-8864-e65feaae6b47"/>
        <Name>I2C_DeviceWrite</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="c7aae787-2bbf-4fc7-a549-adfc5d710b03">
          <cppSignature>FT_STATUS I2C_DeviceWrite(FT_HANDLE handle,UCHAR deviceAddress,DWORD sizeToTransfer,UCHAR * buffer,LPDWORD sizeTransfered,DWORD options)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, unsigned char, unsigned long, UCHAR *, DWORD *, unsigned long)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.I2C_DeviceWrite Representation of C++ function I2C_DeviceWrite.
Writes data from I2C slave</description>
          <detailedDescription>This content is from the external library documentation.

This function writes the specified number of bytes from an addressed I2C slave</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="5b5f3931-fa85-47ab-b05c-631862fdc1c1">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="83ff5db5-e705-4367-a6cb-1b8cefe45203">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="9d2268c2-c7e0-48a8-af31-a50c123dc170">
            <cppPosition>2</cppPosition>
            <cppType>[unsigned char]</cppType>
            <description>[in] deviceAddress Address of the I2C slave</description>
            <mwType>uint8</mwType>
            <name>deviceAddress</name>
            <storage>Value</storage>
            <validTypes>uint8</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="fe1e21f2-3a68-4d61-b11e-257f735c8843">
            <cppPosition>3</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] sizeToTransfer Number of bytes to be written</description>
            <mwType>uint32</mwType>
            <name>sizeToTransfer</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="4ab0a7b3-346a-4bc7-b443-01cc4864b9d5">
            <cppPosition>4</cppPosition>
            <cppType>[unsigned char]Ptr</cppType>
            <description>[out] buffer Pointer to the buffer from where data is to be written</description>
            <mwType>clib.array.ftLib.UnsignedChar</mwType>
            <name>buffer</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedChar</validTypes>
            <validTypes>uint8</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="631fc7b0-cdcf-4cf8-88a5-774229c1f774">
            <cppPosition>5</cppPosition>
            <cppType>[unsigned long]Ptr</cppType>
            <description>[out] sizeTransferred Pointer to variable containing the number of bytes written</description>
            <mwType>clib.array.ftLib.UnsignedLong</mwType>
            <name>sizeTransfered</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedLong</validTypes>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="4a11e5a8-2935-4c86-b65f-acf00626cf8b">
            <cppPosition>6</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] options This parameter specifies data transfer options. Namely if a start/stop bits
*			are required, if the transfer should continue or stop if device nAcks, etc</description>
            <mwType>uint32</mwType>
            <name>options</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <name>clib.ftLib.I2C_DeviceWrite</name>
          <outputs type="mwAnnotation.Argument" uuid="0a4318cf-f81e-48f6-8904-b98d70a40f8d">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/I2C_DeviceWrite@[void]Ptr,[unsigned char],[unsigned long],[unsigned char]Ptr,[unsigned long]Ptr,[unsigned long]#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="322dd75a-379b-407c-a788-4db114a3aaf9">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="35628877-bd03-437f-bbef-e2783ed096ea">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>370</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="af5b0f6e-b64d-4f84-b30b-6a1fdc683272">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="9becb9db-4077-420a-9f55-50c0cdfc523e">
        <Comments>/*!
 * \brief Get the I2C device ID
 *
 * This function retrieves the I2C device ID. It may not be enabled in the library
 * depending on build configuration. If it is not enabled then it will return
 * FT_NOT_SUPPORTED.
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[out] deviceID Address of memory where the 3byte I2C device ID will be stored
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="0a3c69d8-ebec-4077-be3d-27891684af2e">
          <Comments>/*!
 * \brief Get the I2C device ID
 *
 * This function retrieves the I2C device ID. It may not be enabled in the library
 * depending on build configuration. If it is not enabled then it will return
 * FT_NOT_SUPPORTED.
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[out] deviceID Address of memory where the 3byte I2C device ID will be stored
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="bfe3c901-d83e-4cac-9415-a46db6051b61">
          <Comments>/*!
 * \brief Get the I2C device ID
 *
 * This function retrieves the I2C device ID. It may not be enabled in the library
 * depending on build configuration. If it is not enabled then it will return
 * FT_NOT_SUPPORTED.
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[out] deviceID Address of memory where the 3byte I2C device ID will be stored
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>deviceAddress</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="59db14ad-b6fd-49f9-9d76-4f7c50671b3f">
          <Comments>/*!
 * \brief Get the I2C device ID
 *
 * This function retrieves the I2C device ID. It may not be enabled in the library
 * depending on build configuration. If it is not enabled then it will return
 * FT_NOT_SUPPORTED.
 *
 * \param[in] handle Handle of the channel
 * \param[in] deviceAddress Address of the I2C slave
 * \param[out] deviceID Address of memory where the 3byte I2C device ID will be stored
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
          <Name>deviceID</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="af5b0f6e-b64d-4f84-b30b-6a1fdc683272"/>
        <Name>I2C_GetDeviceID</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="018adbb7-74f3-47c2-8d43-3608e6c42acc">
          <cppSignature>FT_STATUS I2C_GetDeviceID(FT_HANDLE handle,UCHAR deviceAddress,UCHAR * deviceID)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, unsigned char, UCHAR *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.I2C_GetDeviceID Representation of C++ function I2C_GetDeviceID.
Get the I2C device ID</description>
          <detailedDescription>This content is from the external library documentation.

This function retrieves the I2C device ID. It may not be enabled in the library
 depending on build configuration. If it is not enabled then it will return
 FT_NOT_SUPPORTED.</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="497181af-fab2-4b76-913c-219b4bf610c6">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="780fc815-72a3-4d7e-81a8-3299cb252c16">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="e7619809-8b51-497b-a5af-a3211ed3bc83">
            <cppPosition>2</cppPosition>
            <cppType>[unsigned char]</cppType>
            <description>[in] deviceAddress Address of the I2C slave</description>
            <mwType>uint8</mwType>
            <name>deviceAddress</name>
            <storage>Value</storage>
            <validTypes>uint8</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="98e1e907-78f9-4cd4-8ec2-2f1714b3ede8">
            <cppPosition>3</cppPosition>
            <cppType>[unsigned char]Ptr</cppType>
            <description>[out] deviceID Address of memory where the 3byte I2C device ID will be stored</description>
            <mwType>clib.array.ftLib.UnsignedChar</mwType>
            <name>deviceID</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedChar</validTypes>
            <validTypes>uint8</validTypes>
          </inputs>
          <name>clib.ftLib.I2C_GetDeviceID</name>
          <outputs type="mwAnnotation.Argument" uuid="ddf69693-8ef9-40a6-b618-c357797306fe">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/I2C_GetDeviceID@[void]Ptr,[unsigned char],[unsigned char]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="1b85e5f9-9d59-4b95-bcbf-88b43fb75e9c">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="39aa8f69-b38e-47d3-a8e4-276a4833b5b8">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>388</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="e94bf21a-995a-4c8a-9e41-eb6a6d7c53ed">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="4c2d01a7-054d-4694-99e9-ecfc43647aa0">
        <Comments>/*!
 * \brief Writes to the 8 GPIO lines
 *
 * Writes to the 8 GPIO lines associated with the high byte of the MPSSE channel
 *
 * \param[in] handle Handle of the channel
 * \param[in] dir The direction of the 8 lines. 0 for in and 1 for out
 * \param[in] value Output state of the 8 GPIO lines
 * \return status
 * \sa
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="f18054d5-62db-4a66-b28b-8aeb8e61724c">
          <Comments>/*!
 * \brief Writes to the 8 GPIO lines
 *
 * Writes to the 8 GPIO lines associated with the high byte of the MPSSE channel
 *
 * \param[in] handle Handle of the channel
 * \param[in] dir The direction of the 8 lines. 0 for in and 1 for out
 * \param[in] value Output state of the 8 GPIO lines
 * \return status
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="02027ec9-5c0d-47c2-bf9d-9681342879ed">
          <Comments>/*!
 * \brief Writes to the 8 GPIO lines
 *
 * Writes to the 8 GPIO lines associated with the high byte of the MPSSE channel
 *
 * \param[in] handle Handle of the channel
 * \param[in] dir The direction of the 8 lines. 0 for in and 1 for out
 * \param[in] value Output state of the 8 GPIO lines
 * \return status
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>dir</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="7c5dc56d-1704-4c5c-9854-c40af63630e3">
          <Comments>/*!
 * \brief Writes to the 8 GPIO lines
 *
 * Writes to the 8 GPIO lines associated with the high byte of the MPSSE channel
 *
 * \param[in] handle Handle of the channel
 * \param[in] dir The direction of the 8 lines. 0 for in and 1 for out
 * \param[in] value Output state of the 8 GPIO lines
 * \return status
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="8b8e5a4b-1b5d-4837-b3e9-9d106dc993a1"/>
          <Name>value</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="e94bf21a-995a-4c8a-9e41-eb6a6d7c53ed"/>
        <Name>FT_WriteGPIO</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="a490a567-578e-46b9-9a31-682c1a2fd5b9">
          <cppSignature>FT_STATUS FT_WriteGPIO(FT_HANDLE handle,UCHAR dir,UCHAR value)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, unsigned char, unsigned char)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.FT_WriteGPIO Representation of C++ function FT_WriteGPIO.
Writes to the 8 GPIO lines</description>
          <detailedDescription>This content is from the external library documentation.

Writes to the 8 GPIO lines associated with the high byte of the MPSSE channel</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="18765137-dfc3-407a-bfd2-3a24807846e8">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="f16e0505-b41e-4eb2-8ad1-4f76d698e2c8">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="6b3718a9-9ad9-462a-acb0-d191672fc8c2">
            <cppPosition>2</cppPosition>
            <cppType>[unsigned char]</cppType>
            <description>[in] dir The direction of the 8 lines. 0 for in and 1 for out</description>
            <mwType>uint8</mwType>
            <name>dir</name>
            <storage>Value</storage>
            <validTypes>uint8</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="82d2ce22-e8e8-4d8f-976b-85261999105f">
            <cppPosition>3</cppPosition>
            <cppType>[unsigned char]</cppType>
            <description>[in] value Output state of the 8 GPIO lines</description>
            <mwType>uint8</mwType>
            <name>value</name>
            <storage>Value</storage>
            <validTypes>uint8</validTypes>
          </inputs>
          <name>clib.ftLib.FT_WriteGPIO</name>
          <outputs type="mwAnnotation.Argument" uuid="99c6d238-6bd9-4d86-ac9a-4bf98534a977">
            <cppType>[unsigned long]</cppType>
            <description>status</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/FT_WriteGPIO@[void]Ptr,[unsigned char],[unsigned char]#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="811b5021-9db9-4998-9561-19cb51f81c52"/>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="e68eb611-fd9c-4783-95e4-20c785f59a2a">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>404</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="55d643e6-719a-42bd-8957-6f5b6bd3e6f6">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="d6086a09-8a8f-47e9-a6fd-512466aa8a07">
        <Comments>/*!
 * \brief Reads from the 8 GPIO lines
 *
 * This function reads the GPIO lines associated with the high byte of the MPSSE channel
 *
 * \param[in] handle Handle of the channel
 * \param[out] *value Input state of the 8 GPIO lines(1 = high)
 * \return status
 * \sa
 * \note The directions of the GPIO pins have to be first set to input mode using FT_WriteGPIO
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="5dd136be-06eb-4954-a997-cc50ea1a63eb">
          <Comments>/*!
 * \brief Reads from the 8 GPIO lines
 *
 * This function reads the GPIO lines associated with the high byte of the MPSSE channel
 *
 * \param[in] handle Handle of the channel
 * \param[out] *value Input state of the 8 GPIO lines(1 = high)
 * \return status
 * \sa
 * \note The directions of the GPIO pins have to be first set to input mode using FT_WriteGPIO
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="580eafbf-2637-4ce4-92f9-7234b57a337c"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="ae1780e0-86d5-4f85-8bc6-66a13e544624">
          <Comments>/*!
 * \brief Reads from the 8 GPIO lines
 *
 * This function reads the GPIO lines associated with the high byte of the MPSSE channel
 *
 * \param[in] handle Handle of the channel
 * \param[out] *value Input state of the 8 GPIO lines(1 = high)
 * \return status
 * \sa
 * \note The directions of the GPIO pins have to be first set to input mode using FT_WriteGPIO
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="0522af94-fab0-4752-9de3-9ea70efce93e"/>
          <Name>value</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="55d643e6-719a-42bd-8957-6f5b6bd3e6f6"/>
        <Name>FT_ReadGPIO</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="e03425d6-d8f4-47f1-9800-2e212bfde378">
          <cppSignature>FT_STATUS FT_ReadGPIO(FT_HANDLE handle,UCHAR * value)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, UCHAR *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.FT_ReadGPIO Representation of C++ function FT_ReadGPIO.
Reads from the 8 GPIO lines</description>
          <detailedDescription>This content is from the external library documentation.

This function reads the GPIO lines associated with the high byte of the MPSSE channel</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="c2044cd2-83ec-444d-b3c1-ffecaca11dc7">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="17484724-b63a-4550-ad4e-49ea3468bcdf">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="cc05e99b-a90e-498a-8dff-fcc41eea7129">
            <cppPosition>2</cppPosition>
            <cppType>[unsigned char]Ptr</cppType>
            <description>[out] *value Input state of the 8 GPIO lines(1 = high)</description>
            <mwType>clib.array.ftLib.UnsignedChar</mwType>
            <name>value</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedChar</validTypes>
            <validTypes>uint8</validTypes>
          </inputs>
          <name>clib.ftLib.FT_ReadGPIO</name>
          <outputs type="mwAnnotation.Argument" uuid="f96d8d4d-d9ac-4ec6-a1cc-14cb4df74572">
            <cppType>[unsigned long]</cppType>
            <description>status</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/FT_ReadGPIO@[void]Ptr,[unsigned char]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="ab403eae-6b65-4fe9-a371-2ecee54f3e0f">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="2aa340e7-dd76-492f-90c9-22a35f4f68dc">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>418</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="2a4ec485-990a-4a3a-be6b-a5a646978ebf">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="d34ae4c2-e5d4-4af9-9f1d-f02c0c656154"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="805d560f-837a-4456-abf3-dbb17e207f88">
        <Comments>/*!
 * \brief Version Number Function
 *
 * Returns libMPSSE and libFTD2XX version number
 *
 * \param[out]  *libmpsse	MPSSE version number is returned
 * \param[out]  *libftd2xx	D2XX version number is returned
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="4f498d43-545b-44f6-bd85-7626e437570c">
          <Comments>/*!
 * \brief Version Number Function
 *
 * Returns libMPSSE and libFTD2XX version number
 *
 * \param[out]  *libmpsse	MPSSE version number is returned
 * \param[out]  *libftd2xx	D2XX version number is returned
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>libmpsse</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5d2d2fd3-b428-4d26-915b-6172bfc83392">
          <Comments>/*!
 * \brief Version Number Function
 *
 * Returns libMPSSE and libFTD2XX version number
 *
 * \param[out]  *libmpsse	MPSSE version number is returned
 * \param[out]  *libftd2xx	D2XX version number is returned
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="17b85abf-a806-4c69-b03d-8c18dbebd1c4"/>
          <Name>libftd2xx</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="2a4ec485-990a-4a3a-be6b-a5a646978ebf"/>
        <Name>Ver_libMPSSE</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="e4314cb8-8151-4a7e-8891-c8e9a2eb3436">
          <cppSignature>FT_STATUS Ver_libMPSSE(LPDWORD libmpsse,LPDWORD libftd2xx)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(DWORD *, DWORD *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.Ver_libMPSSE Representation of C++ function Ver_libMPSSE.
Version Number Function</description>
          <detailedDescription>This content is from the external library documentation.

Returns libMPSSE and libFTD2XX version number</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="4336c95b-a475-422c-bad6-27f43efee72b">
            <cppPosition>1</cppPosition>
            <cppType>[unsigned long]Ptr</cppType>
            <description>[out]  *libmpsse	MPSSE version number is returned</description>
            <mwType>clib.array.ftLib.UnsignedLong</mwType>
            <name>libmpsse</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedLong</validTypes>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="48ee1037-b46b-405f-8282-6c18df5c741b">
            <cppPosition>2</cppPosition>
            <cppType>[unsigned long]Ptr</cppType>
            <description>[out]  *libftd2xx	D2XX version number is returned</description>
            <mwType>clib.array.ftLib.UnsignedLong</mwType>
            <name>libftd2xx</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedLong</validTypes>
            <validTypes>uint32</validTypes>
          </inputs>
          <name>clib.ftLib.Ver_libMPSSE</name>
          <outputs type="mwAnnotation.Argument" uuid="c72558c2-9df0-4df3-9a66-4973d64f8fdf">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/Ver_libMPSSE@[unsigned long]Ptr,[unsigned long]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="4908d808-2909-427e-b68f-cf8bc3939195">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="bfe8e7a4-7c4a-4177-b0e8-0e7db2e39338">
          <Col>32</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187"/>
          <Line>433</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="efc99c81-e336-4891-a166-d2854556838f">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="9fd15935-0fcb-486c-8def-d510d48c5f2c"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="76b86244-68ce-4d46-8796-e072139b34ca">
        <Comments>/*!
 * \brief Gets the number of SPI channels connected to the host
 *
 * This function gets the number of SPI channels that are connected to the host system
 *
 * \param[out] *numChannels Pointer to variable in which the no of channels will be returned
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note This function doesn&apos;t return the number of FTDI chips connected to the host system
 * \note FT2232D has 1 MPSSE port
 * \note FT2232H has 2 MPSSE ports
 * \note FT4232H has 4 ports but only 2 of them have MPSSEs
 * so call to this function will return 2 if a FT4232 is connected to it.
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="0c182dca-eb69-4068-b91f-43921951292e">
          <Comments>/*!
 * \brief Gets the number of SPI channels connected to the host
 *
 * This function gets the number of SPI channels that are connected to the host system
 *
 * \param[out] *numChannels Pointer to variable in which the no of channels will be returned
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note This function doesn&apos;t return the number of FTDI chips connected to the host system
 * \note FT2232D has 1 MPSSE port
 * \note FT2232H has 2 MPSSE ports
 * \note FT4232H has 4 ports but only 2 of them have MPSSEs
 * so call to this function will return 2 if a FT4232 is connected to it.
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="9fd15935-0fcb-486c-8def-d510d48c5f2c"/>
          <Name>numChannels</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="efc99c81-e336-4891-a166-d2854556838f"/>
        <Name>SPI_GetNumChannels</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="104308d7-6206-4389-be51-a05bd07d672d">
          <cppSignature>FT_STATUS SPI_GetNumChannels(DWORD * numChannels)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(DWORD *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_GetNumChannels Representation of C++ function SPI_GetNumChannels.
Gets the number of SPI channels connected to the host</description>
          <detailedDescription>This content is from the external library documentation.

This function gets the number of SPI channels that are connected to the host system</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="cc70306e-f538-44e2-b1ae-16e07a083196">
            <cppPosition>1</cppPosition>
            <cppType>[unsigned long]Ptr</cppType>
            <description>[out] *numChannels Pointer to variable in which the no of channels will be returned</description>
            <mwType>clib.array.ftLib.UnsignedLong</mwType>
            <name>numChannels</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedLong</validTypes>
            <validTypes>uint32</validTypes>
          </inputs>
          <name>clib.ftLib.SPI_GetNumChannels</name>
          <outputs type="mwAnnotation.Argument" uuid="5f7258e4-81b9-41aa-b2bf-cf86af5a72bd">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_GetNumChannels@[unsigned long]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="f62ac9c0-7f96-487c-b1d8-d63853ac141a">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="6d129f9b-c139-401a-82c5-078de1e4858a">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>209</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c6aae3be-0028-4252-895b-bb968f59fa70">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="a51a5be6-e9d2-4226-9a13-7bd65a8120c6"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="3c6aded6-861a-41de-90ba-f6713939ef93">
        <Comments>/*!
 * \brief Provides information about channel
 *
 * This function takes a channel index (valid values are from 0 to the value returned by
 * SPI_GetChannelInfo -1) and provides information about the channel in the form of a
 * populated ChannelInfo structure.
 *
 * \param[in] index Index of the channel
 * \param[out] chanInfo Pointer to FT_DEVICE_LIST_INFO_NODE structure(see D2XX Programmer&apos;s Guide)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \note  The channel ID can be determined by the user from the last digit of the location ID
 * \sa
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="375cf339-c81e-484d-b018-f360da81ffd8">
          <Comments>/*!
 * \brief Provides information about channel
 *
 * This function takes a channel index (valid values are from 0 to the value returned by
 * SPI_GetChannelInfo -1) and provides information about the channel in the form of a
 * populated ChannelInfo structure.
 *
 * \param[in] index Index of the channel
 * \param[out] chanInfo Pointer to FT_DEVICE_LIST_INFO_NODE structure(see D2XX Programmer&apos;s Guide)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \note  The channel ID can be determined by the user from the last digit of the location ID
 * \sa
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>index</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="295938ed-43b9-4817-a870-7f90c931a621">
          <Comments>/*!
 * \brief Provides information about channel
 *
 * This function takes a channel index (valid values are from 0 to the value returned by
 * SPI_GetChannelInfo -1) and provides information about the channel in the form of a
 * populated ChannelInfo structure.
 *
 * \param[in] index Index of the channel
 * \param[out] chanInfo Pointer to FT_DEVICE_LIST_INFO_NODE structure(see D2XX Programmer&apos;s Guide)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \note  The channel ID can be determined by the user from the last digit of the location ID
 * \sa
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="a51a5be6-e9d2-4226-9a13-7bd65a8120c6"/>
          <Name>chanInfo</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="c6aae3be-0028-4252-895b-bb968f59fa70"/>
        <Name>SPI_GetChannelInfo</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="f0206c22-0968-4655-be19-7b4539db52d4">
          <cppSignature>FT_STATUS SPI_GetChannelInfo(DWORD index,FT_DEVICE_LIST_INFO_NODE * chanInfo)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(unsigned long, FT_DEVICE_LIST_INFO_NODE *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_GetChannelInfo Representation of C++ function SPI_GetChannelInfo.
Provides information about channel</description>
          <detailedDescription>This content is from the external library documentation.

This function takes a channel index (valid values are from 0 to the value returned by
 SPI_GetChannelInfo -1) and provides information about the channel in the form of a
 populated ChannelInfo structure.</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="6620d5d8-163e-4813-8681-cff1fe860021">
            <cppPosition>1</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] index Index of the channel</description>
            <mwType>uint32</mwType>
            <name>index</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="0d2c403e-8dd9-4fa9-8f35-46a6b07dbf13">
            <cppPosition>2</cppPosition>
            <cppType>[_ft_device_list_info_node]Ptr</cppType>
            <description>[out] chanInfo Pointer to FT_DEVICE_LIST_INFO_NODE structure(see D2XX Programmer&apos;s Guide)</description>
            <mwType>clib.ftLib.FT_DEVICE_LIST_INFO_NODE</mwType>
            <name>chanInfo</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.FT_DEVICE_LIST_INFO_NODE</validTypes>
            <validTypes>clib.array.ftLib.FT_DEVICE_LIST_INFO_NODE</validTypes>
          </inputs>
          <name>clib.ftLib.SPI_GetChannelInfo</name>
          <outputs type="mwAnnotation.Argument" uuid="bb771362-d27f-48d1-96c3-f144f7ddfbbd">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
\note  The channel ID can be determined by the user from the last digit of the location ID</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_GetChannelInfo@[unsigned long],[_ft_device_list_info_node]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c547399d-afc0-42e2-946e-cbbc8ab4cf78">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="90c81b18-c8db-46a6-90be-888dc565b903">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>226</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="a38a2eae-a575-4cd1-885e-e4dc5f275917">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="131d3698-c38f-4d4f-8a41-a70ed518a5bc"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="52b39cdb-165a-4c24-8223-749ad758ed2d">
        <Comments>/*!
 * \brief Opens a channel and returns a handle to it
 *
 * This function opens the indexed channel and returns a handle to it
 *
 * \param[in] index Index of the channel
 * \param[out] handle Pointer to the handle of the opened channel
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note Trying to open an already open channel will return an error code
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="d3e9ac7c-ad06-4b47-8a15-95d6e1adbae6">
          <Comments>/*!
 * \brief Opens a channel and returns a handle to it
 *
 * This function opens the indexed channel and returns a handle to it
 *
 * \param[in] index Index of the channel
 * \param[out] handle Pointer to the handle of the opened channel
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note Trying to open an already open channel will return an error code
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>index</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="7c245fc3-f3b1-4715-9eb5-7d20976fb76e">
          <Comments>/*!
 * \brief Opens a channel and returns a handle to it
 *
 * This function opens the indexed channel and returns a handle to it
 *
 * \param[in] index Index of the channel
 * \param[out] handle Pointer to the handle of the opened channel
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note Trying to open an already open channel will return an error code
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="131d3698-c38f-4d4f-8a41-a70ed518a5bc"/>
          <Name>handle</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="a38a2eae-a575-4cd1-885e-e4dc5f275917"/>
        <Name>SPI_OpenChannel</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="90d417b5-978b-454f-b1ef-2975b951611f">
          <cppSignature>FT_STATUS SPI_OpenChannel(DWORD index,FT_HANDLE * handle)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(unsigned long, FT_HANDLE *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_OpenChannel Representation of C++ function SPI_OpenChannel.
Opens a channel and returns a handle to it</description>
          <detailedDescription>This content is from the external library documentation.

This function opens the indexed channel and returns a handle to it</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="0d777ddc-eb99-483b-bbe3-9127dba63932">
            <cppPosition>1</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] index Index of the channel</description>
            <mwType>uint32</mwType>
            <name>index</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="035cc230-cbd3-4005-bac3-e375f5cbdef7">
            <cppPosition>2</cppPosition>
            <cppType>[void]PtrPtr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[out] handle Pointer to the handle of the opened channel</description>
            <direction>Out</direction>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="0221f22d-7072-40bf-bbb2-feeae917743c">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <name>clib.ftLib.SPI_OpenChannel</name>
          <outputs type="mwAnnotation.Argument" uuid="02f7b418-9b2b-48de-86ab-3fbcba6a168b">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_OpenChannel@[unsigned long],[void]PtrPtr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c7d31072-b36c-4c68-834f-ac13b09c586e"/>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="d1251d1f-b962-472c-a96f-964389e9ff60">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>241</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="851b767a-655e-4121-bbd7-479640e5f930">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="95b013ab-c7a4-4811-b463-5da04bcad5f2"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="95b013ab-c7a4-4811-b463-5da04bcad5f2">
        <Type type="cxxfe.ast.types.TypedefType" uuid="60a1a947-3ee8-4fa8-97f1-e87a75a9c28b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="1668a2ee-1be6-49ef-8812-78e9a1b874d7">
        <Comments>/*!
 * \brief Initializes a channel
 *
 * This function initializes the channel and the communication parameters associated with it
 *
 * \param[in] handle Handle of the channel
 * \param[out] config Pointer to SPI_ChannelConfig structure(memory to be allocated by caller)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="55933fed-0c4c-446f-a9c3-4132e50fa73a">
          <Comments>/*!
 * \brief Initializes a channel
 *
 * This function initializes the channel and the communication parameters associated with it
 *
 * \param[in] handle Handle of the channel
 * \param[out] config Pointer to SPI_ChannelConfig structure(memory to be allocated by caller)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c0d3a098-edf3-4c54-9378-e4f2112fafaa">
          <Comments>/*!
 * \brief Initializes a channel
 *
 * This function initializes the channel and the communication parameters associated with it
 *
 * \param[in] handle Handle of the channel
 * \param[out] config Pointer to SPI_ChannelConfig structure(memory to be allocated by caller)
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="95b013ab-c7a4-4811-b463-5da04bcad5f2"/>
          <Name>config</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="851b767a-655e-4121-bbd7-479640e5f930"/>
        <Name>SPI_InitChannel</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="17a43ca0-df59-47c2-b5bd-1e45036a9c71">
          <cppSignature>FT_STATUS SPI_InitChannel(FT_HANDLE handle,SPI_ChannelConfig * config)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, SPI_ChannelConfig *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_InitChannel Representation of C++ function SPI_InitChannel.
Initializes a channel</description>
          <detailedDescription>This content is from the external library documentation.

This function initializes the channel and the communication parameters associated with it</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="0dc1be1a-89b2-46e3-8249-fb385d9554e0">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="c91cfc11-f123-46e1-93e7-6d02e17962d6">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="3eaba747-4d58-4f15-a5b9-7b77f0af8f1b">
            <cppPosition>2</cppPosition>
            <cppType>[ChannelConfig_spi]Ptr</cppType>
            <description>[out] config Pointer to SPI_ChannelConfig structure(memory to be allocated by caller)</description>
            <mwType>clib.ftLib.SPI_ChannelConfig</mwType>
            <name>config</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.SPI_ChannelConfig</validTypes>
            <validTypes>clib.array.ftLib.SPI_ChannelConfig</validTypes>
          </inputs>
          <name>clib.ftLib.SPI_InitChannel</name>
          <outputs type="mwAnnotation.Argument" uuid="f46708b4-1ed4-45d6-bfa2-9f3955ef563c">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_InitChannel@[void]Ptr,[ChannelConfig_spi]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d98cb643-c8ed-47a7-b2a2-8c5b7c251e40">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="aec9b17b-1626-4697-a53b-f498e8cbd571">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>255</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="c1afd587-2b54-4681-8358-227870d4079e">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="a5730a88-ae5a-49a1-b4e3-631103add0a9">
        <Comments>/*!
 * \brief Closes a channel
 *
 * Closes a channel and frees all resources that were used by it
 *
 * \param[in] handle Handle of the channel
 * \param[out] none
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="30f83910-496b-44bb-b9b6-15822cd8cf14">
          <Comments>/*!
 * \brief Closes a channel
 *
 * Closes a channel and frees all resources that were used by it
 *
 * \param[in] handle Handle of the channel
 * \param[out] none
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
          <Name>handle</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="c1afd587-2b54-4681-8358-227870d4079e"/>
        <Name>SPI_CloseChannel</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="d2562af5-432d-447e-a462-929f3211c2e1">
          <cppSignature>FT_STATUS SPI_CloseChannel(FT_HANDLE handle)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_CloseChannel Representation of C++ function SPI_CloseChannel.
Closes a channel</description>
          <detailedDescription>This content is from the external library documentation.

Closes a channel and frees all resources that were used by it</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="d52b95a4-1318-4f0e-9452-53ed4b2152a5">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="8be426de-6777-42ec-ba70-125efa277764">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <name>clib.ftLib.SPI_CloseChannel</name>
          <outputs type="mwAnnotation.Argument" uuid="d5ff16b6-6f28-47a3-8d9f-0ebf9e1e576d">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_CloseChannel@[void]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="7d32ea8a-6f39-44c9-807d-85e7b5813140"/>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="86d90129-4442-4f39-874e-e1096945a64d">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>269</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="f360ce89-4f17-4f31-a749-b6f1aaf96f1a">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="032ad8fa-f650-4ff8-963a-584793236ec6"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="7c3bbbe9-fb28-4ba5-b9f7-b2932f67474e">
        <Comments>/*!
 * \brief Reads data from a SPI slave device
 *
 * This function reads the specified number of bits or bytes from the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer to where data will be read to
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="10741b60-3f16-43a4-a56f-10f7ecb2c150">
          <Comments>/*!
 * \brief Reads data from a SPI slave device
 *
 * This function reads the specified number of bits or bytes from the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer to where data will be read to
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c7d19bee-b9d0-4854-a566-54a429ad7940">
          <Comments>/*!
 * \brief Reads data from a SPI slave device
 *
 * This function reads the specified number of bits or bytes from the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer to where data will be read to
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="032ad8fa-f650-4ff8-963a-584793236ec6"/>
          <Name>buffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="763d8a98-4588-4520-b899-520150724a18">
          <Comments>/*!
 * \brief Reads data from a SPI slave device
 *
 * This function reads the specified number of bits or bytes from the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer to where data will be read to
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>sizeToTransfer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="dd13e72d-0219-4402-8ac9-2594d02c1a40">
          <Comments>/*!
 * \brief Reads data from a SPI slave device
 *
 * This function reads the specified number of bits or bytes from the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer to where data will be read to
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
          <Name>sizeTransfered</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="b3d32140-9040-466b-870c-992ae83113c0">
          <Comments>/*!
 * \brief Reads data from a SPI slave device
 *
 * This function reads the specified number of bits or bytes from the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer to where data will be read to
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>options</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="f360ce89-4f17-4f31-a749-b6f1aaf96f1a"/>
        <Name>SPI_Read</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ee494501-f8f6-4001-9530-404b546f684f">
          <cppSignature>FT_STATUS SPI_Read(FT_HANDLE handle,UCHAR * buffer,DWORD sizeToTransfer,LPDWORD sizeTransfered,DWORD options)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, UCHAR *, unsigned long, DWORD *, unsigned long)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_Read Representation of C++ function SPI_Read.
Reads data from a SPI slave device</description>
          <detailedDescription>This content is from the external library documentation.

This function reads the specified number of bits or bytes from the SPI device</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="57ba0b60-146d-48b0-bf90-07838dc5b42e">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="98348db6-9d9f-420d-ad3b-4b54a5da10bc">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="a34036f7-14a5-4051-89d4-7afaec04d61c">
            <cppPosition>2</cppPosition>
            <cppType>[unsigned char]Ptr</cppType>
            <description>[in] *buffer Pointer to buffer to where data will be read to</description>
            <mwType>clib.array.ftLib.UnsignedChar</mwType>
            <name>buffer</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedChar</validTypes>
            <validTypes>uint8</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="2a66de72-5fd7-4a85-b514-77ae765d7f5e">
            <cppPosition>3</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] sizeToTransfer Size of data to be transfered</description>
            <mwType>uint32</mwType>
            <name>sizeToTransfer</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="e7dda451-ce3b-43d4-a118-2c6b3c31c441">
            <cppPosition>4</cppPosition>
            <cppType>[unsigned long]Ptr</cppType>
            <description>[out] sizeTransfered Pointer to variable containing the size of data
*			that got transferred</description>
            <mwType>clib.array.ftLib.UnsignedLong</mwType>
            <name>sizeTransfered</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedLong</validTypes>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="0688a780-bea1-41c6-aca9-55439a628f0b">
            <cppPosition>5</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] transferOptions This parameter specifies data transfer options
*				if BIT0 is 0 then size is in bytes, otherwise in bits
*				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
*				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer</description>
            <mwType>uint32</mwType>
            <name>options</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <name>clib.ftLib.SPI_Read</name>
          <outputs type="mwAnnotation.Argument" uuid="84b5d284-b5e6-4b4d-a240-40133d107b22">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_Read@[void]Ptr,[unsigned char]Ptr,[unsigned long],[unsigned long]Ptr,[unsigned long]#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="3b89fcb5-f038-4070-b881-9cd024bbb07c">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="30c01939-0c55-404b-b7d6-2c1164298759">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>291</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="8927e116-7810-45b3-988f-7e41a51f7f27">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="032ad8fa-f650-4ff8-963a-584793236ec6"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="5b721d52-a000-4e44-a2e9-b0ac0c2a5c10">
        <Comments>/*!
 * \brief Writes data to a SPI slave device
 *
 * This function writes the specified number of bits or bytes to the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer from containing the data
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="221b1bd5-ec7b-4fff-be91-7e10327a44f7">
          <Comments>/*!
 * \brief Writes data to a SPI slave device
 *
 * This function writes the specified number of bits or bytes to the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer from containing the data
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="0f0403dd-a9ed-4942-a55f-e5532944ae49">
          <Comments>/*!
 * \brief Writes data to a SPI slave device
 *
 * This function writes the specified number of bits or bytes to the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer from containing the data
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="032ad8fa-f650-4ff8-963a-584793236ec6"/>
          <Name>buffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="f2d21d60-ceef-417e-b2a2-cfe1d225b79b">
          <Comments>/*!
 * \brief Writes data to a SPI slave device
 *
 * This function writes the specified number of bits or bytes to the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer from containing the data
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>sizeToTransfer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="ff93a572-1496-469d-8666-49a373f1063c">
          <Comments>/*!
 * \brief Writes data to a SPI slave device
 *
 * This function writes the specified number of bits or bytes to the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer from containing the data
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
          <Name>sizeTransfered</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="5c42ffb0-dc3f-4047-a14a-f06463a30c33">
          <Comments>/*!
 * \brief Writes data to a SPI slave device
 *
 * This function writes the specified number of bits or bytes to the SPI device
 *
 * \param[in] handle Handle of the channel
 * \param[in] *buffer Pointer to buffer from containing the data
 * \param[in] sizeToTransfer Size of data to be transfered
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>options</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="8927e116-7810-45b3-988f-7e41a51f7f27"/>
        <Name>SPI_Write</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="0a94a999-18dd-4f2c-ba26-e289a331bae1">
          <cppSignature>FT_STATUS SPI_Write(FT_HANDLE handle,UCHAR * buffer,DWORD sizeToTransfer,LPDWORD sizeTransfered,DWORD options)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, UCHAR *, unsigned long, DWORD *, unsigned long)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_Write Representation of C++ function SPI_Write.
Writes data to a SPI slave device</description>
          <detailedDescription>This content is from the external library documentation.

This function writes the specified number of bits or bytes to the SPI device</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="7e402adf-48a3-4050-8f1f-d77d242c873d">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="d67f0c8e-2897-4ffc-ba33-7f1520a5d78b">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="b8d46148-f0e5-425f-a218-66ffa220080b">
            <cppPosition>2</cppPosition>
            <cppType>[unsigned char]Ptr</cppType>
            <description>[in] *buffer Pointer to buffer from containing the data</description>
            <mwType>clib.array.ftLib.UnsignedChar</mwType>
            <name>buffer</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedChar</validTypes>
            <validTypes>uint8</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="e67f5a11-4950-4f97-b58a-33106eb5e185">
            <cppPosition>3</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] sizeToTransfer Size of data to be transfered</description>
            <mwType>uint32</mwType>
            <name>sizeToTransfer</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="7fb38321-1eb4-4a7f-b9aa-862fe8e87870">
            <cppPosition>4</cppPosition>
            <cppType>[unsigned long]Ptr</cppType>
            <description>[out] sizeTransfered Pointer to variable containing the size of data
*			that got transferred</description>
            <mwType>clib.array.ftLib.UnsignedLong</mwType>
            <name>sizeTransfered</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedLong</validTypes>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="e316c230-6ffc-4f47-b375-6e0a01f8e8bc">
            <cppPosition>5</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] transferOptions This parameter specifies data transfer options
*				if BIT0 is 0 then size is in bytes, otherwise in bits
*				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
*				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer</description>
            <mwType>uint32</mwType>
            <name>options</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <name>clib.ftLib.SPI_Write</name>
          <outputs type="mwAnnotation.Argument" uuid="c0895c3a-fea3-44dc-9605-e503ff5069e9">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_Write@[void]Ptr,[unsigned char]Ptr,[unsigned long],[unsigned long]Ptr,[unsigned long]#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="dc498884-8e60-4522-89d9-d9ab821696c5">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="00cfcd8f-baf1-4b86-88b8-3b3500e6e646">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>314</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="1d768ccc-7681-4c0f-b717-8cc3a509e9d8">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="032ad8fa-f650-4ff8-963a-584793236ec6"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="032ad8fa-f650-4ff8-963a-584793236ec6"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="a1270215-1688-415b-8e45-4f3a38ca07e0">
        <Comments>/*!
 * \brief Reads and writes data from/to a SPI slave device
 *
 * This function transfers data in both directions between a SPI master and a slave. One bit is
 * clocked out and one bit is clocked in during every clock.
 *
 * \param[in] handle Handle of the channel
 * \param[in] *inBuffer Pointer to buffer to which data read will be stored
 * \param[in] *outBuffer Pointer to buffer that contains data to be transferred to the slave
 * \param[in] sizeToTransfer Size of data to be transferred
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="5cd56b76-e809-4bda-bf8a-e44ac2f65e4b">
          <Comments>/*!
 * \brief Reads and writes data from/to a SPI slave device
 *
 * This function transfers data in both directions between a SPI master and a slave. One bit is
 * clocked out and one bit is clocked in during every clock.
 *
 * \param[in] handle Handle of the channel
 * \param[in] *inBuffer Pointer to buffer to which data read will be stored
 * \param[in] *outBuffer Pointer to buffer that contains data to be transferred to the slave
 * \param[in] sizeToTransfer Size of data to be transferred
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="fac1ce97-35da-423b-9f94-8c40a0e9427f">
          <Comments>/*!
 * \brief Reads and writes data from/to a SPI slave device
 *
 * This function transfers data in both directions between a SPI master and a slave. One bit is
 * clocked out and one bit is clocked in during every clock.
 *
 * \param[in] handle Handle of the channel
 * \param[in] *inBuffer Pointer to buffer to which data read will be stored
 * \param[in] *outBuffer Pointer to buffer that contains data to be transferred to the slave
 * \param[in] sizeToTransfer Size of data to be transferred
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="032ad8fa-f650-4ff8-963a-584793236ec6"/>
          <Name>inBuffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="7cc6b5e9-7d0b-43e8-b599-4f2af4a4d24e">
          <Comments>/*!
 * \brief Reads and writes data from/to a SPI slave device
 *
 * This function transfers data in both directions between a SPI master and a slave. One bit is
 * clocked out and one bit is clocked in during every clock.
 *
 * \param[in] handle Handle of the channel
 * \param[in] *inBuffer Pointer to buffer to which data read will be stored
 * \param[in] *outBuffer Pointer to buffer that contains data to be transferred to the slave
 * \param[in] sizeToTransfer Size of data to be transferred
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="032ad8fa-f650-4ff8-963a-584793236ec6"/>
          <Name>outBuffer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="c5736a09-c2cb-40d9-808e-38417e28e49d">
          <Comments>/*!
 * \brief Reads and writes data from/to a SPI slave device
 *
 * This function transfers data in both directions between a SPI master and a slave. One bit is
 * clocked out and one bit is clocked in during every clock.
 *
 * \param[in] handle Handle of the channel
 * \param[in] *inBuffer Pointer to buffer to which data read will be stored
 * \param[in] *outBuffer Pointer to buffer that contains data to be transferred to the slave
 * \param[in] sizeToTransfer Size of data to be transferred
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>sizeToTransfer</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="d9d46cb4-01b6-4b82-8763-e62c6a33dce3">
          <Comments>/*!
 * \brief Reads and writes data from/to a SPI slave device
 *
 * This function transfers data in both directions between a SPI master and a slave. One bit is
 * clocked out and one bit is clocked in during every clock.
 *
 * \param[in] handle Handle of the channel
 * \param[in] *inBuffer Pointer to buffer to which data read will be stored
 * \param[in] *outBuffer Pointer to buffer that contains data to be transferred to the slave
 * \param[in] sizeToTransfer Size of data to be transferred
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="71c2caff-38d4-4556-87c2-cfdc0117f7fc"/>
          <Name>sizeTransferred</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="ce52207c-2374-4dea-bbdc-b04f4605a4a5">
          <Comments>/*!
 * \brief Reads and writes data from/to a SPI slave device
 *
 * This function transfers data in both directions between a SPI master and a slave. One bit is
 * clocked out and one bit is clocked in during every clock.
 *
 * \param[in] handle Handle of the channel
 * \param[in] *inBuffer Pointer to buffer to which data read will be stored
 * \param[in] *outBuffer Pointer to buffer that contains data to be transferred to the slave
 * \param[in] sizeToTransfer Size of data to be transferred
 * \param[out] sizeTransfered Pointer to variable containing the size of data
 *			that got transferred
 * \param[in] transferOptions This parameter specifies data transfer options
 *				if BIT0 is 0 then size is in bytes, otherwise in bits
 *				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
 *				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer
 *
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>transferOptions</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="1d768ccc-7681-4c0f-b717-8cc3a509e9d8"/>
        <Name>SPI_ReadWrite</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ff0a97d5-b35d-4c1b-96f0-f3fdf3748c18">
          <cppSignature>FT_STATUS SPI_ReadWrite(FT_HANDLE handle,UCHAR * inBuffer,UCHAR * outBuffer,DWORD sizeToTransfer,LPDWORD sizeTransferred,DWORD transferOptions)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, UCHAR *, UCHAR *, unsigned long, DWORD *, unsigned long)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_ReadWrite Representation of C++ function SPI_ReadWrite.
Reads and writes data from/to a SPI slave device</description>
          <detailedDescription>This content is from the external library documentation.

This function transfers data in both directions between a SPI master and a slave. One bit is
 clocked out and one bit is clocked in during every clock.</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="547c5e61-1702-4158-a3e7-d08dd2e6141d">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="81fad0ea-8e97-485d-825a-866f486b6c11">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="dc0a99a5-69a1-435e-80ec-a45933867893">
            <cppPosition>2</cppPosition>
            <cppType>[unsigned char]Ptr</cppType>
            <description>[in] *inBuffer Pointer to buffer to which data read will be stored</description>
            <mwType>clib.array.ftLib.UnsignedChar</mwType>
            <name>inBuffer</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedChar</validTypes>
            <validTypes>uint8</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="9eec4824-99a8-4dc8-a2a1-4ee8b89826ae">
            <cppPosition>3</cppPosition>
            <cppType>[unsigned char]Ptr</cppType>
            <description>[in] *outBuffer Pointer to buffer that contains data to be transferred to the slave</description>
            <mwType>clib.array.ftLib.UnsignedChar</mwType>
            <name>outBuffer</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedChar</validTypes>
            <validTypes>uint8</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="21b2ba58-7989-493f-9bbb-16afd7e79c51">
            <cppPosition>4</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] sizeToTransfer Size of data to be transferred</description>
            <mwType>uint32</mwType>
            <name>sizeToTransfer</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="bac0789d-48a3-4861-ac6a-276c70f18008">
            <cppPosition>5</cppPosition>
            <cppType>[unsigned long]Ptr</cppType>
            <description>[out] sizeTransfered Pointer to variable containing the size of data
*			that got transferred</description>
            <mwType>clib.array.ftLib.UnsignedLong</mwType>
            <name>sizeTransferred</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.UnsignedLong</validTypes>
            <validTypes>uint32</validTypes>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="552c915f-23d8-4c78-ade4-c35ea0ce4eac">
            <cppPosition>6</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] transferOptions This parameter specifies data transfer options
*				if BIT0 is 0 then size is in bytes, otherwise in bits
*				if BIT1 is 1 then CHIP_SELECT line will be enables at start of transfer
*				if BIT2 is 1 then CHIP_SELECT line will be disabled at end of transfer</description>
            <mwType>uint32</mwType>
            <name>transferOptions</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <name>clib.ftLib.SPI_ReadWrite</name>
          <outputs type="mwAnnotation.Argument" uuid="4798ab94-1a6e-4be3-ab83-b552367a2573">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_ReadWrite@[void]Ptr,[unsigned char]Ptr,[unsigned char]Ptr,[unsigned long],[unsigned long]Ptr,[unsigned long]#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="c2ef87fe-13d6-4a91-809b-48bb69b3d7a5">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="6bcd8282-d363-43f2-b208-fa581f0ce9b7">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>339</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="591263ef-cbd9-47a2-a9cb-25adf15f3e38">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.PointerType" uuid="725ff9be-e184-4745-aa83-825ef650d820"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.types.PointerType" uuid="725ff9be-e184-4745-aa83-825ef650d820">
        <Type type="cxxfe.ast.types.TypedefType" uuid="468244ee-e6f0-459d-9ef2-e98c07320af4"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="a12c5025-c38d-427a-baf5-e1b74a4c634c">
        <Comments>/*!
 * \brief Read the state of SPI MISO line
 *
 * Reads the logic state of the SPI MISO line without clocking the bus
 *
 * \param[in] handle Handle of the channel
 * \param[out] *state State of the line
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note This function may be used for applications that needs to poll the state of
 *		the MISO line to check if the device is busy
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="1b54345a-09c7-455f-8d6c-8991b71ab214">
          <Comments>/*!
 * \brief Read the state of SPI MISO line
 *
 * Reads the logic state of the SPI MISO line without clocking the bus
 *
 * \param[in] handle Handle of the channel
 * \param[out] *state State of the line
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note This function may be used for applications that needs to poll the state of
 *		the MISO line to check if the device is busy
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="abd95dbd-9fd8-4780-9624-b67ae95ecee1">
          <Comments>/*!
 * \brief Read the state of SPI MISO line
 *
 * Reads the logic state of the SPI MISO line without clocking the bus
 *
 * \param[in] handle Handle of the channel
 * \param[out] *state State of the line
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note This function may be used for applications that needs to poll the state of
 *		the MISO line to check if the device is busy
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.PointerType" uuid="725ff9be-e184-4745-aa83-825ef650d820"/>
          <Name>state</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="591263ef-cbd9-47a2-a9cb-25adf15f3e38"/>
        <Name>SPI_IsBusy</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="d9b747f4-9b07-4922-900a-bbde0e059ddf">
          <cppSignature>FT_STATUS SPI_IsBusy(FT_HANDLE handle,BOOL * state)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, BOOL *)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_IsBusy Representation of C++ function SPI_IsBusy.
Read the state of SPI MISO line</description>
          <detailedDescription>This content is from the external library documentation.

Reads the logic state of the SPI MISO line without clocking the bus</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="cb85487b-7be2-498c-8f9d-44a067455b6a">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="6982474c-a40f-495d-9f83-ae62eb1d5695">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="72d98d2a-14ab-4b4d-9030-afb319938143">
            <cppPosition>2</cppPosition>
            <cppType>[int]Ptr</cppType>
            <description>[out] *state State of the line</description>
            <mwType>clib.array.ftLib.Int</mwType>
            <name>state</name>
            <shape>Undefined</shape>
            <storage>Pointer</storage>
            <validTypes>clib.array.ftLib.Int</validTypes>
            <validTypes>int32</validTypes>
          </inputs>
          <name>clib.ftLib.SPI_IsBusy</name>
          <outputs type="mwAnnotation.Argument" uuid="94a15777-872f-4057-ae20-6e0122fa9bbf">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_IsBusy@[void]Ptr,[int]Ptr#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="6e4059af-bc72-4786-9159-5e73e91f6f8a">
            <definitionStatus>PartiallySpecified</definitionStatus>
          </integrationStatus>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="fb52e4dc-224c-458e-85e9-763e9fa0f4f9">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>356</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="856a2439-e4a5-492b-82ce-8437a4b277af">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="db037fdd-5ce9-4bef-905c-e106660aa02e">
        <Comments>/*!
 * \brief Changes the chip select line
 *
 * This function changes the chip select line that is to be used to communicate to the SPI slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] configOptions Provides a way to select the chip select line &amp; SPI mode
 *	BIT1-0=CPOL-CPHA:	00 - MODE0 - data captured on rising edge, propagated on falling
 *						01 - MODE1 - data captured on falling edge, propagated on rising
 *						10 - MODE2 - data captured on falling edge, propagated on rising
 *						11 - MODE3 - data captured on rising edge, propagated on falling
 *	BIT4-BIT2: 000 - A/B/C/D_DBUS3=ChipSelect
 *			 : 001 - A/B/C/D_DBUS4=ChipSelect
 * 			 : 010 - A/B/C/D_DBUS5=ChipSelect
 *			 : 011 - A/B/C/D_DBUS6=ChipSelect
 *			 : 100 - A/B/C/D_DBUS7=ChipSelect
 *	BIT5: ChipSelect is active high if this bit is 0
 *	BIT6 -BIT31		: Reserved
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note This function should only be called after SPI_Init has been called
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="20552043-ecf7-4d85-921b-84ba0accb139">
          <Comments>/*!
 * \brief Changes the chip select line
 *
 * This function changes the chip select line that is to be used to communicate to the SPI slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] configOptions Provides a way to select the chip select line &amp; SPI mode
 *	BIT1-0=CPOL-CPHA:	00 - MODE0 - data captured on rising edge, propagated on falling
 *						01 - MODE1 - data captured on falling edge, propagated on rising
 *						10 - MODE2 - data captured on falling edge, propagated on rising
 *						11 - MODE3 - data captured on rising edge, propagated on falling
 *	BIT4-BIT2: 000 - A/B/C/D_DBUS3=ChipSelect
 *			 : 001 - A/B/C/D_DBUS4=ChipSelect
 * 			 : 010 - A/B/C/D_DBUS5=ChipSelect
 *			 : 011 - A/B/C/D_DBUS6=ChipSelect
 *			 : 100 - A/B/C/D_DBUS7=ChipSelect
 *	BIT5: ChipSelect is active high if this bit is 0
 *	BIT6 -BIT31		: Reserved
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note This function should only be called after SPI_Init has been called
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="50a370c1-8e85-4e2f-b9c5-762218879cee">
          <Comments>/*!
 * \brief Changes the chip select line
 *
 * This function changes the chip select line that is to be used to communicate to the SPI slave
 *
 * \param[in] handle Handle of the channel
 * \param[in] configOptions Provides a way to select the chip select line &amp; SPI mode
 *	BIT1-0=CPOL-CPHA:	00 - MODE0 - data captured on rising edge, propagated on falling
 *						01 - MODE1 - data captured on falling edge, propagated on rising
 *						10 - MODE2 - data captured on falling edge, propagated on rising
 *						11 - MODE3 - data captured on rising edge, propagated on falling
 *	BIT4-BIT2: 000 - A/B/C/D_DBUS3=ChipSelect
 *			 : 001 - A/B/C/D_DBUS4=ChipSelect
 * 			 : 010 - A/B/C/D_DBUS5=ChipSelect
 *			 : 011 - A/B/C/D_DBUS6=ChipSelect
 *			 : 100 - A/B/C/D_DBUS7=ChipSelect
 *	BIT5: ChipSelect is active high if this bit is 0
 *	BIT6 -BIT31		: Reserved
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note This function should only be called after SPI_Init has been called
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="2c106b20-7440-45c3-9bd4-79427a2c6808"/>
          <Name>configOptions</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="856a2439-e4a5-492b-82ce-8437a4b277af"/>
        <Name>SPI_ChangeCS</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="ef529c7b-3632-437c-873b-ad093c3ea7a1">
          <cppSignature>FT_STATUS SPI_ChangeCS(FT_HANDLE handle,DWORD configOptions)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, unsigned long)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_ChangeCS Representation of C++ function SPI_ChangeCS.
Changes the chip select line</description>
          <detailedDescription>This content is from the external library documentation.

This function changes the chip select line that is to be used to communicate to the SPI slave</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="773fe98d-d44d-49dd-b948-45eb6693411e">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="f0bdfb3b-1f23-4328-8653-5b8927df47e6">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="e85056ec-3698-476f-913a-e7d25d17e9ac">
            <cppPosition>2</cppPosition>
            <cppType>[unsigned long]</cppType>
            <description>[in] configOptions Provides a way to select the chip select line &amp; SPI mode
*	BIT1-0=CPOL-CPHA:	00 - MODE0 - data captured on rising edge, propagated on falling
*						01 - MODE1 - data captured on falling edge, propagated on rising
*						10 - MODE2 - data captured on falling edge, propagated on rising
*						11 - MODE3 - data captured on rising edge, propagated on falling
*	BIT4-BIT2: 000 - A/B/C/D_DBUS3=ChipSelect
*			 : 001 - A/B/C/D_DBUS4=ChipSelect
			 : 010 - A/B/C/D_DBUS5=ChipSelect
*			 : 011 - A/B/C/D_DBUS6=ChipSelect
*			 : 100 - A/B/C/D_DBUS7=ChipSelect
*	BIT5: ChipSelect is active high if this bit is 0
*	BIT6 -BIT31		: Reserved</description>
            <mwType>uint32</mwType>
            <name>configOptions</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </inputs>
          <name>clib.ftLib.SPI_ChangeCS</name>
          <outputs type="mwAnnotation.Argument" uuid="8fe9fb93-4c16-4f5f-ad2c-a5ba5cd90b6f">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_ChangeCS@[void]Ptr,[unsigned long]#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="d3e2e69b-854d-4ec1-839b-1183b8e578a0"/>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="cd4a849a-8433-4c7d-abe3-b2bcffaf0acc">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>381</Line>
        </DeclPos>
      </Symbols>
      <Symbols type="cxxfe.ast.types.FunctionType" uuid="7604995f-8950-428e-a0b3-52268e128e53">
        <IsPrototyped>true</IsPrototyped>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
        <ParamTypes type="cxxfe.ast.types.TypedefType" uuid="468244ee-e6f0-459d-9ef2-e98c07320af4"/>
        <RetType type="cxxfe.ast.types.TypedefType" uuid="6dd27311-a8bf-487e-9568-db9a48ef7b1b"/>
      </Symbols>
      <Symbols type="cxxfe.ast.Function" uuid="47d827ef-d9ab-422d-aa90-fa9dde299fe5">
        <Comments>/*!
 * \brief Toggles the state of the CS line
 *
 * This function turns ON/OFF the chip select line associated with the channel
 *
 * \param[in] handle Handle of the channel
 * \param[in] state TRUE if CS needs to be set, false otherwise
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
        <Params type="cxxfe.ast.Variable" uuid="c1f0abf6-55f3-46fc-a92c-0240cc5ddacf">
          <Comments>/*!
 * \brief Toggles the state of the CS line
 *
 * This function turns ON/OFF the chip select line associated with the channel
 *
 * \param[in] handle Handle of the channel
 * \param[in] state TRUE if CS needs to be set, false otherwise
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="26fc811a-2bb3-4b05-8d34-6f63a4998695"/>
          <Name>handle</Name>
        </Params>
        <Params type="cxxfe.ast.Variable" uuid="2098e6d2-1a22-4bc9-b87b-2773735a496b">
          <Comments>/*!
 * \brief Toggles the state of the CS line
 *
 * This function turns ON/OFF the chip select line associated with the channel
 *
 * \param[in] handle Handle of the channel
 * \param[in] state TRUE if CS needs to be set, false otherwise
 * \return Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)
 * \sa
 * \note
 * \warning
 */</Comments>
          <Type type="cxxfe.ast.types.TypedefType" uuid="468244ee-e6f0-459d-9ef2-e98c07320af4"/>
          <Name>state</Name>
        </Params>
        <DeclModifierFlags>2</DeclModifierFlags>
        <Linkage>External</Linkage>
        <StorageClass>Extern</StorageClass>
        <Type type="cxxfe.ast.types.FunctionType" uuid="7604995f-8950-428e-a0b3-52268e128e53"/>
        <Name>SPI_ToggleCS</Name>
        <Annotations type="mwAnnotation.FunctionAnnotation" uuid="49ecc9ac-4c97-4769-9f6e-e507b93f8bf4">
          <cppSignature>FT_STATUS SPI_ToggleCS(FT_HANDLE handle,BOOL state)</cppSignature>
          <cppSignatureFcnType>unsigned long(*)(void *, int)</cppSignatureFcnType>
          <cppType>[unsigned long]</cppType>
          <description>clib.ftLib.SPI_ToggleCS Representation of C++ function SPI_ToggleCS.
Toggles the state of the CS line</description>
          <detailedDescription>This content is from the external library documentation.

This function turns ON/OFF the chip select line associated with the channel</detailedDescription>
          <inputs type="mwAnnotation.Argument" uuid="45edd8d6-551b-4f54-ba7b-baeb754de814">
            <cppPosition>1</cppPosition>
            <cppType>[void]Ptr</cppType>
            <cppWrapperName>PVOID</cppWrapperName>
            <description>[in] handle Handle of the channel</description>
            <mwType>clib.ftLib.PVOID</mwType>
            <name>handle</name>
            <storage>Pointer</storage>
            <validTypes>clib.ftLib.PVOID</validTypes>
            <opaqueTypeInfo type="mwAnnotation.OpaqueTypeArgumentInfo" uuid="bd481f88-a095-4a8d-aec1-bd6d6b44d3b3">
              <isTypedef>true</isTypedef>
            </opaqueTypeInfo>
          </inputs>
          <inputs type="mwAnnotation.Argument" uuid="5a683014-e63a-48ad-91f3-9c0d1a44a3e1">
            <cppPosition>2</cppPosition>
            <cppType>[int]</cppType>
            <description>[in] state TRUE if CS needs to be set, false otherwise</description>
            <mwType>int32</mwType>
            <name>state</name>
            <storage>Value</storage>
            <validTypes>int32</validTypes>
          </inputs>
          <name>clib.ftLib.SPI_ToggleCS</name>
          <outputs type="mwAnnotation.Argument" uuid="3a61248a-8ed3-4896-955f-15a6ea4d61fe">
            <cppType>[unsigned long]</cppType>
            <description>Returns status code of type FT_STATUS(see D2XX Programmer&apos;s Guide)</description>
            <direction>Out</direction>
            <isOwned>true</isOwned>
            <mwType>uint32</mwType>
            <name>RetVal</name>
            <storage>Value</storage>
            <validTypes>uint32</validTypes>
          </outputs>
          <ptKey>F/SPI_ToggleCS@[void]Ptr,[int]#[unsigned long]</ptKey>
          <integrationStatus type="mwAnnotation.IntegrationStatus" uuid="3cb8045d-aed0-4a53-bc63-0e5cea9a9877"/>
        </Annotations>
        <DeclPos type="cxxfe.ast.source.SourcePosition" uuid="25df67c5-85b1-48a3-b58b-a57e2ea51683">
          <Col>25</Col>
          <File type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2"/>
          <Line>395</Line>
        </DeclPos>
      </Symbols>
    </Compilations>
    <Files type="cxxfe.ast.source.SourceFile" uuid="b4cb5810-bfa0-4cd6-b2fb-753502003f9b">
      <IncludedFileWrittenNames>guiddef.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="f926cc4c-dc74-4271-83ff-6276cffebde1"/>
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\WTypesbase.h</Path>
      <WrittenName>wtypesbase.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="6c8020f1-b735-43b5-bedf-28e4ba783b09">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\apiset.h</Path>
      <WrittenName>apiset.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="07bf7e9e-8cea-4848-a58f-5114987c632b">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\apisetcconv.h</Path>
      <WrittenName>apisetcconv.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="8cae1e0a-1885-4f22-80e8-12cff3f68c00">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\basetsd.h</Path>
      <WrittenName>basetsd.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="7a0fb71e-075d-41cf-b663-5765915f9a80">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\bcrypt.h</Path>
      <WrittenName>bcrypt.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="7af5b6c9-3193-4bec-9e12-ca685744e2be">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\cderr.h</Path>
      <WrittenName>cderr.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="e0fee305-1128-4e28-856e-e1495ec04513">
      <IncludedFileWrittenNames>sdv_driverspecs.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="f0c486de-8f63-40d6-9b36-ae23ef558228"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\driverspecs.h</Path>
      <WrittenName>driverspecs.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="f926cc4c-dc74-4271-83ff-6276cffebde1">
      <IncludedFileWrittenNames>string.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="df21b847-9646-4876-805d-35971aa04496"/>
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\guiddef.h</Path>
      <WrittenName>guiddef.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="66efd9db-e091-4078-a49c-5f8165c7a4d2">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\inaddr.h</Path>
      <WrittenName>inaddr.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="4769bee7-3d0b-4964-9cc8-2c444bbf0ac5">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\kernelspecs.h</Path>
      <WrittenName>kernelspecs.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="525720a4-77b2-4a2d-a6c6-e5b41bfbf3c3">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\ktmtypes.h</Path>
      <WrittenName>ktmtypes.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59">
      <IncludedFileWrittenNames>specstrings.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winnt.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="86ca8d11-000a-4549-b163-d2e4124cd713"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\minwindef.h</Path>
      <WrittenName>minwindef.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\poppack.h</Path>
      <WrittenName>poppack.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="fa230fac-1af4-4d2c-a7cf-e91eb07250a5">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\pshpack1.h</Path>
      <WrittenName>pshpack1.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="3d11f179-2214-45d6-a7f8-efc6cd8c13ea">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\pshpack2.h</Path>
      <WrittenName>pshpack2.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="65677413-182f-42bb-aea5-5609baf511f0">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\pshpack4.h</Path>
      <WrittenName>pshpack4.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\pshpack8.h</Path>
      <WrittenName>pshpack8.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="bf5b76c7-7e41-488f-8333-106846d5f903">
      <IncludedFileWrittenNames>pshpack8.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>rpcdce.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>rpcnsi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>rpcnterr.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>rpcasync.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="1a4742bd-f8fd-496f-80d4-01a191653668"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="7d8f7fd5-eef7-495a-98e4-5202350bb175"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="7b147184-4bf0-415b-874a-ce9a9e5f3eb3"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="29bda236-204e-4815-89d9-7b4b95359cc9"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\rpc.h</Path>
      <WrittenName>rpc.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="29bda236-204e-4815-89d9-7b4b95359cc9">
      <IncludedFileWrittenNames>pshpack8.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\rpcasync.h</Path>
      <WrittenName>rpcasync.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="1a4742bd-f8fd-496f-80d4-01a191653668">
      <IncludedFileWrittenNames>rpcdcep.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="6752d5d9-7bbb-4d1c-9086-e603f68bf20e"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\rpcdce.h</Path>
      <WrittenName>rpcdce.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="6752d5d9-7bbb-4d1c-9086-e603f68bf20e">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\rpcdcep.h</Path>
      <WrittenName>rpcdcep.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="e42d214e-8ec5-477f-91c3-cfacd69ce4c1">
      <IncludedFileWrittenNames>pshpack8.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>rpcnsip.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>rpcsal.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="5c3cb414-9688-4cf8-ac7f-20587fe386d6"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="72c8cc5b-2802-463d-9037-44c076bfec8e"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\rpcndr.h</Path>
      <WrittenName>rpcndr.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="7b147184-4bf0-415b-874a-ce9a9e5f3eb3">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\rpcnterr.h</Path>
      <WrittenName>rpcnterr.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="72c8cc5b-2802-463d-9037-44c076bfec8e">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\rpcsal.h</Path>
      <WrittenName>rpcsal.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="d574c7ba-c850-4521-952b-411dad41e761">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\sdkddkver.h</Path>
      <WrittenName>sdkddkver.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="f0c486de-8f63-40d6-9b36-ae23ef558228">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\sdv_driverspecs.h</Path>
      <WrittenName>sdv_driverspecs.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="86ca8d11-000a-4549-b163-d2e4124cd713">
      <IncludedFileWrittenNames>specstrings_strict.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>driverspecs.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="1d1d50b4-228d-4943-ac2a-3663a82508ed"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="e0fee305-1128-4e28-856e-e1495ec04513"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\specstrings.h</Path>
      <WrittenName>specstrings.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="1d1d50b4-228d-4943-ac2a-3663a82508ed">
      <IncludedFileWrittenNames>specstrings_undef.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="34460bee-f255-4564-bd6f-adf666d4e3a8"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\specstrings_strict.h</Path>
      <WrittenName>specstrings_strict.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="34460bee-f255-4564-bd6f-adf666d4e3a8">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\specstrings_undef.h</Path>
      <WrittenName>specstrings_undef.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="0286df50-c0e6-450e-98d4-2da544ee1adb">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\stralign.h</Path>
      <WrittenName>stralign.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="83ee99cf-c377-435d-a420-bb142abdb9ff">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\tvout.h</Path>
      <WrittenName>tvout.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="aa43b9cb-4281-45aa-bd86-e497fb0c257d">
      <IncludedFileWrittenNames>winpackagefamily.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="62d5ee27-b189-4160-a84d-f5fc3b3c624f"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\winapifamily.h</Path>
      <WrittenName>winapifamily.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="87ab6ef0-1463-46f8-a2c6-d2b24b079540">
      <IncludedFileWrittenNames>minwindef.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="67d83886-e7e8-49b7-be9f-354117c75a59"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\windef.h</Path>
      <WrittenName>windef.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="f536f29d-2762-4e4d-b7f5-9d73d6a726d6">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\winerror.h</Path>
      <WrittenName>winerror.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="62d5ee27-b189-4160-a84d-f5fc3b3c624f">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\winpackagefamily.h</Path>
      <WrittenName>winpackagefamily.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="909399f0-250c-411b-9158-4c7fa1249605">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\winsmcrd.h</Path>
      <WrittenName>winsmcrd.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="542f9791-9305-4c1e-8330-7a01e2ceab02">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\wnnc.h</Path>
      <WrittenName>wnnc.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="64c3e5d8-1e6b-4c19-949e-e83d0dd074f1">
      <IncludedFileWrittenNames>rpcndr.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>wtypesbase.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="e42d214e-8ec5-477f-91c3-cfacd69ce4c1"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="b4cb5810-bfa0-4cd6-b2fb-753502003f9b"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\shared\wtypes.h</Path>
      <WrittenName>wtypes.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="f15f0cab-d1b1-4d57-b2c6-958d5b328a44">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt.h</Path>
      <WrittenName>corecrt.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="c2f536fa-c38c-49c6-b5d8-d77a855267b4">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_malloc.h</Path>
      <WrittenName>corecrt_malloc.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="b9289121-7112-4c17-a61e-c47e7a7c9337">
      <IncludedFileWrittenNames>errno.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>vcruntime_string.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="1be4f9a7-e137-4e37-a848-6098716bc660"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="a6275c3d-e573-4dd2-91ed-4772c1ecf269"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_memcpy_s.h</Path>
      <WrittenName>corecrt_memcpy_s.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="7ca818b7-89c3-49ac-a631-c329741e0f0e">
      <IncludedFileWrittenNames>corecrt_memcpy_s.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="b9289121-7112-4c17-a61e-c47e7a7c9337"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_memory.h</Path>
      <WrittenName>corecrt_memory.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="c76b013c-dd22-49f3-83c4-8a4991cb2be9">
      <IncludedFileWrittenNames>stddef.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="8aa37737-1fb2-498f-b9e1-1bcc5d0bdb63"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_search.h</Path>
      <WrittenName>corecrt_search.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="1de96c5e-a9fc-484a-9383-c61b7587eaa9">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_stdio_config.h</Path>
      <WrittenName>corecrt_stdio_config.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="2fceb289-a422-433e-b53e-3540899742fd">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_wctype.h</Path>
      <WrittenName>corecrt_wctype.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="19e784b4-d623-4688-b739-353ddc5cd50e">
      <IncludedFileWrittenNames>corecrt_stdio_config.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="1de96c5e-a9fc-484a-9383-c61b7587eaa9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_wstdio.h</Path>
      <WrittenName>corecrt_wstdio.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="de555870-8a1d-4a50-b12a-64bee3c864b8">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_wstdlib.h</Path>
      <WrittenName>corecrt_wstdlib.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="b3d05006-943f-40dd-98d6-b44ab62cf83d">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_wstring.h</Path>
      <WrittenName>corecrt_wstring.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="914834aa-9bd9-406b-8560-341b321f90b3">
      <IncludedFileWrittenNames>corecrt.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>corecrt_wctype.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="f15f0cab-d1b1-4d57-b2c6-958d5b328a44"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="2fceb289-a422-433e-b53e-3540899742fd"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\ctype.h</Path>
      <WrittenName>ctype.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="1be4f9a7-e137-4e37-a848-6098716bc660">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\errno.h</Path>
      <WrittenName>errno.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="64522161-f518-4aee-a94d-c3264fec04fc">
      <IncludedFileWrittenNames>stdint.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="cc768b1d-2648-411b-913f-8f723bd28b67"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\inttypes.h</Path>
      <WrittenName>inttypes.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="8aa37737-1fb2-498f-b9e1-1bcc5d0bdb63">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stddef.h</Path>
      <WrittenName>stddef.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="fbaa8820-ee6e-45f7-837e-9db94d05c8f1">
      <IncludedFileWrittenNames>corecrt_wstdio.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="19e784b4-d623-4688-b739-353ddc5cd50e"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdio.h</Path>
      <WrittenName>stdio.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="e3089c42-f424-4655-98d5-bb1d8ff2a2ae">
      <IncludedFileWrittenNames>corecrt_malloc.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>corecrt_search.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>corecrt_wstdlib.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>limits.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="c2f536fa-c38c-49c6-b5d8-d77a855267b4"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="c76b013c-dd22-49f3-83c4-8a4991cb2be9"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="de555870-8a1d-4a50-b12a-64bee3c864b8"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="9b67f733-92fb-4418-bf47-40bbd483ac27"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\stdlib.h</Path>
      <WrittenName>stdlib.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="df21b847-9646-4876-805d-35971aa04496">
      <IncludedFileWrittenNames>corecrt_memory.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>corecrt_wstring.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="7ca818b7-89c3-49ac-a631-c329741e0f0e"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="b3d05006-943f-40dd-98d6-b44ab62cf83d"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\string.h</Path>
      <WrittenName>string.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="d115156d-e5f3-4c34-b1e5-cc8824866f19">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\PropIdl.h</Path>
      <WrittenName>propidl.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="826b7e89-fb5e-48c2-af7e-66bfc8b89609">
      <IncludedFileWrittenNames>oaidl.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="33cd6ca5-c53b-4088-812e-4d3bb2230d95"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\PropIdlBase.h</Path>
      <WrittenName>propidlbase.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="f4cddfc6-1faa-4cbb-932a-042a9e879260">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\Unknwn.h</Path>
      <WrittenName>unknwn.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="09ce5fde-dfec-4306-bd05-8cbc62b5c3b2">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\Unknwnbase.h</Path>
      <WrittenName>unknwnbase.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="346a87e8-273b-4052-8e94-5b40aee56029">
      <IncludedFileWrittenNames>apisetcconv.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>minwinbase.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>apiquery2.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>processenv.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>fileapifromapp.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>debugapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>utilapiset.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>handleapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>errhandlingapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>fibersapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>namedpipeapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>profileapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>heapapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>ioapiset.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>synchapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>interlockedapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>processthreadsapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>sysinfoapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>memoryapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>enclaveapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>threadpoollegacyapiset.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>threadpoolapiset.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>jobapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>jobapi2.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>wow64apiset.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>libloaderapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>securitybaseapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>namespaceapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>systemtopologyapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>processtopologyapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>securityappcontainer.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>realtimeapiset.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winerror.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>timezoneapi.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="07bf7e9e-8cea-4848-a58f-5114987c632b"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="01c17269-ec9f-4557-9ab5-28e893e4769b"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="5b9f7fcb-9657-40e4-b788-05c619f1212d"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="13146ded-d23b-41f8-9f95-4d598ce3e4dd"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="cbf9e9f0-e68b-48b9-af48-18f44e9c3806"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="d87b4479-28a2-4f13-8e1a-84c1959c6432"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="6cfd9561-d86d-414f-811a-fdc09d62dea0"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0f5a525f-fd95-4056-a86a-950668131337"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="2d4da5aa-ec7f-4807-8921-d02ec66042b0"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="e30c1002-f007-4629-8d84-7ca00bf24a7e"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="593c9bb9-e733-4a77-a3c0-5871561cf497"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="2415790d-15c0-4cb9-a8e8-bc53de103d23"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="b83e78d5-5953-487b-8284-faa17e267565"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="44831ceb-9764-427c-ba0c-44fa511efe23"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="7ad7d3bf-068d-44f7-9427-7bdbe8fff167"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="653ac24d-4b8f-419a-ab59-ccf94e9c1cc1"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="63c99791-ebc0-49fb-ab1e-b2aa548814d0"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="72d6536b-b670-46e8-b3cb-507daf8ad56a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="1567f577-c3d8-4031-832b-fba9b6ee1741"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="6631d632-0ab8-4ff8-aa90-0057a636b1bc"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4dc62e8c-1e0c-45d5-84b8-68695d0b98bb"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="56c65f26-bec7-4c8d-8588-6bb702e2e250"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="bf1c9cdf-d2ca-417e-9b07-2cf9df59d007"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0a405e69-01c5-46b2-aad3-4e700e690502"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="752e6f09-f5ac-432c-9332-21e56fc3cd0d"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="bf9ee244-09d6-4268-9b7b-c31de6e8ce68"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="3af0f67e-bc65-4e11-b6cd-d51d32aa3052"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="e7faadc4-f27a-439d-a675-b4e1776fdcc5"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="78164018-774f-4d8d-ac8c-dae9f7503898"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="eb6ce521-9b8e-4dc3-be87-b7e0aa772c90"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="9ab08f77-f9a8-4f3c-a510-8544944adb75"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="f536f29d-2762-4e4d-b7f5-9d73d6a726d6"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="cce5bf81-07e3-4ec1-b538-e6804057ffc1"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\WinBase.h</Path>
      <WrittenName>winbase.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="497b1096-37d9-418e-a864-dc9e7796c249">
      <IncludedFileWrittenNames>datetimeapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>stringapiset.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="b4821c86-5187-4ed7-aad9-529b6a7af8b1"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="08c67807-1bd7-41b0-98d8-1c0be400f2c5"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\WinNls.h</Path>
      <WrittenName>winnls.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="09c4db17-7eb2-43fa-a0c0-d2078a176b08">
      <IncludedFileWrittenNames>pshpack2.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>tvout.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="3d11f179-2214-45d6-a7f8-efc6cd8c13ea"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="83ee99cf-c377-435d-a420-bb142abdb9ff"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\WinUser.h</Path>
      <WrittenName>winuser.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="77b2c8c5-5df2-4fb8-a4eb-d8c3744169e8">
      <IncludedFileWrittenNames>winapifamily.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>sdkddkver.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>excpt.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>stdarg.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>windef.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winbase.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>wingdi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winuser.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winnls.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>wincon.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winver.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winreg.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winnetwk.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>cderr.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>dde.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>ddeml.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>dlgs.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>lzexpand.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>mmsystem.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>nb30.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>rpc.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>shellapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winperf.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winsock.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>wincrypt.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winefs.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winscard.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winspool.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>ole2.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>commdlg.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>stralign.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winsvc.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>mcx.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>imm.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="aa43b9cb-4281-45aa-bd86-e497fb0c257d"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="d574c7ba-c850-4521-952b-411dad41e761"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="2ba364af-f3ed-4f5a-9a15-4fadf64ade07"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="9146040a-6edd-4a55-ba82-745254e53f9b"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="87ab6ef0-1463-46f8-a2c6-d2b24b079540"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="346a87e8-273b-4052-8e94-5b40aee56029"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="c02bff85-b0b4-4195-aa34-b9f3de034372"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="09c4db17-7eb2-43fa-a0c0-d2078a176b08"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="497b1096-37d9-418e-a864-dc9e7796c249"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="344e412b-e3bf-4a9c-8701-fbceb58bd507"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="b1e6a632-71c4-4388-aa23-7f9fc585feed"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="136e190f-2fa9-4782-8c65-083a0d52ba3e"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="8c343848-0ee6-4572-8903-106fa783df92"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="7af5b6c9-3193-4bec-9e12-ca685744e2be"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="79e1e68d-1f61-4191-96b8-9145dc7a245e"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="c080f8c2-1b19-4c77-9d8c-8011d55d6141"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="bf340ff8-13ce-432d-8b97-6cc6157b93c5"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="f8210083-5100-4ae5-ade9-00a247a8c516"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="5f9c78c4-641e-4b3b-b4ba-c0e22d2a1d48"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="41fae331-fa21-4f77-b142-b0b303a7f6a9"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="bf5b76c7-7e41-488f-8333-106846d5f903"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="e5184d32-b9e5-4213-b8a3-8daa58ce2650"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="25ca98a2-3dd3-4de6-abd1-5a3c76f3db6d"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="5dfe1170-e9d5-4fae-a880-68f0a4a62211"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="d6fa1596-28a1-4980-9073-af93d8119d5d"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="f7771543-3ada-4b10-9ab9-233d1c6f6331"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="18f46152-3023-468e-a4d6-27c46d21127c"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4ace888c-cb14-4faf-b09b-0fcf6a58bd15"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="a2b14ff0-2e6b-46db-9a4c-86979d7614b6"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="7a53f6fa-e01c-4605-8b0e-40aea44338a3"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0286df50-c0e6-450e-98d4-2da544ee1adb"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="539083e6-feb8-44ab-b843-404dd4a7ebc7"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="32c72ba5-3df6-439b-9be9-ff510c3e9c96"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4fa90819-1239-4543-ab73-fb2f34607f0d"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\Windows.h</Path>
      <WrittenName>windows.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="01c17269-ec9f-4557-9ab5-28e893e4769b">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\apiquery2.h</Path>
      <WrittenName>apiquery2.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="1ade0480-ee16-4795-a326-421a0b4279aa">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\cguid.h</Path>
      <WrittenName>cguid.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="d4a6e20e-4323-4a79-bb56-fa8f47321c59">
      <IncludedFileWrittenNames>pshpack8.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>stdlib.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>unknwnbase.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>objidlbase.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>guiddef.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>cguid.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="e3089c42-f424-4655-98d5-bb1d8ff2a2ae"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="09ce5fde-dfec-4306-bd05-8cbc62b5c3b2"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="6c127e32-f574-4718-a8b7-efebc8269ffc"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="f926cc4c-dc74-4271-83ff-6276cffebde1"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="1ade0480-ee16-4795-a326-421a0b4279aa"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\combaseapi.h</Path>
      <WrittenName>combaseapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="5e88eb81-2bf1-44ee-b886-136665618d6e">
      <IncludedFileWrittenNames>objidl.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>propidlbase.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="7b2d1e4a-610e-4fcd-80db-11b440fa0935"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="826b7e89-fb5e-48c2-af7e-66bfc8b89609"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\coml2api.h</Path>
      <WrittenName>coml2api.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="7a53f6fa-e01c-4605-8b0e-40aea44338a3">
      <IncludedFileWrittenNames>prsht.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="3a40b8b0-9390-42f5-b028-21258000cb27"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\commdlg.h</Path>
      <WrittenName>commdlg.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="e27312b1-c33e-4c6f-984c-358e3e72ba17">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\consoleapi.h</Path>
      <WrittenName>consoleapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="5a0c3102-0827-4da7-bc2b-941b7b0a1c3a">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\consoleapi2.h</Path>
      <WrittenName>consoleapi2.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="e1711008-feb1-4afe-af09-ce597c6a7184">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\consoleapi3.h</Path>
      <WrittenName>consoleapi3.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="b4821c86-5187-4ed7-aad9-529b6a7af8b1">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\datetimeapi.h</Path>
      <WrittenName>datetimeapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="79e1e68d-1f61-4191-96b8-9145dc7a245e">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\dde.h</Path>
      <WrittenName>dde.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="c080f8c2-1b19-4c77-9d8c-8011d55d6141">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\ddeml.h</Path>
      <WrittenName>ddeml.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="cbf9e9f0-e68b-48b9-af48-18f44e9c3806">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\debugapi.h</Path>
      <WrittenName>debugapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="bf340ff8-13ce-432d-8b97-6cc6157b93c5">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\dlgs.h</Path>
      <WrittenName>dlgs.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="03d12157-4dea-4135-9c11-105cfa2d7947">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\dpapi.h</Path>
      <WrittenName>dpapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="1567f577-c3d8-4031-832b-fba9b6ee1741">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\enclaveapi.h</Path>
      <WrittenName>enclaveapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="0f5a525f-fd95-4056-a86a-950668131337">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\errhandlingapi.h</Path>
      <WrittenName>errhandlingapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="2d4da5aa-ec7f-4807-8921-d02ec66042b0">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\fibersapi.h</Path>
      <WrittenName>fibersapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="4ab21d39-59c2-47e1-a342-e74931bd146e">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\fileapi.h</Path>
      <WrittenName>fileapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="13146ded-d23b-41f8-9f95-4d598ce3e4dd">
      <IncludedFileWrittenNames>fileapi.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4ab21d39-59c2-47e1-a342-e74931bd146e"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\fileapifromapp.h</Path>
      <WrittenName>fileapifromapp.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="6cfd9561-d86d-414f-811a-fdc09d62dea0">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\handleapi.h</Path>
      <WrittenName>handleapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="2415790d-15c0-4cb9-a8e8-bc53de103d23">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\heapapi.h</Path>
      <WrittenName>heapapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="9ce4f56d-afd5-48ef-b2ed-9ca055f4aa23">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\ime_cmodes.h</Path>
      <WrittenName>ime_cmodes.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="4fa90819-1239-4543-ab73-fb2f34607f0d">
      <IncludedFileWrittenNames>ime_cmodes.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="9ce4f56d-afd5-48ef-b2ed-9ca055f4aa23"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\imm.h</Path>
      <WrittenName>imm.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="7ad7d3bf-068d-44f7-9427-7bdbe8fff167">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\interlockedapi.h</Path>
      <WrittenName>interlockedapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="b83e78d5-5953-487b-8284-faa17e267565">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\ioapiset.h</Path>
      <WrittenName>ioapiset.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="56c65f26-bec7-4c8d-8588-6bb702e2e250">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\jobapi.h</Path>
      <WrittenName>jobapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="bf1c9cdf-d2ca-417e-9b07-2cf9df59d007">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\jobapi2.h</Path>
      <WrittenName>jobapi2.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="14114e6a-1378-4237-8dc6-bd6569d038ea">
      <IncludedFileWrittenNames>mmsyscom.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4064ce76-ccec-4f25-9aea-1c27e2ab41fe"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\joystickapi.h</Path>
      <WrittenName>joystickapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="752e6f09-f5ac-432c-9332-21e56fc3cd0d">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\libloaderapi.h</Path>
      <WrittenName>libloaderapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="f8210083-5100-4ae5-ade9-00a247a8c516">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\lzexpand.h</Path>
      <WrittenName>lzexpand.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="79ac752a-437c-4d8e-a700-01f09fbc4f9d">
      <IncludedFileWrittenNames>mmsyscom.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4064ce76-ccec-4f25-9aea-1c27e2ab41fe"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\mciapi.h</Path>
      <WrittenName>mciapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="32c72ba5-3df6-439b-9be9-ff510c3e9c96">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\mcx.h</Path>
      <WrittenName>mcx.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="72d6536b-b670-46e8-b3cb-507daf8ad56a">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\memoryapi.h</Path>
      <WrittenName>memoryapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="0863cf03-c30e-4544-8e94-e201ccca88a5">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\minwinbase.h</Path>
      <WrittenName>minwinbase.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="274e8925-588a-4068-84f4-bbe3b915db23">
      <IncludedFileWrittenNames>mmsyscom.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4064ce76-ccec-4f25-9aea-1c27e2ab41fe"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\mmeapi.h</Path>
      <WrittenName>mmeapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="af6a3c79-5358-4e5b-858e-d4e917a51d27">
      <IncludedFileWrittenNames>mmsyscom.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4064ce76-ccec-4f25-9aea-1c27e2ab41fe"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\mmiscapi.h</Path>
      <WrittenName>mmiscapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="6a0f074d-5f46-42a1-b4b4-34bfd7bf05c2">
      <IncludedFileWrittenNames>mmsyscom.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4064ce76-ccec-4f25-9aea-1c27e2ab41fe"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\mmiscapi2.h</Path>
      <WrittenName>mmiscapi2.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="4064ce76-ccec-4f25-9aea-1c27e2ab41fe">
      <IncludedFileWrittenNames>pshpack1.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="fa230fac-1af4-4d2c-a7cf-e91eb07250a5"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\mmsyscom.h</Path>
      <WrittenName>mmsyscom.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="5f9c78c4-641e-4b3b-b4ba-c0e22d2a1d48">
      <IncludedFileWrittenNames>mmsyscom.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>pshpack1.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>mciapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>mmiscapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>mmiscapi2.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>playsoundapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>mmeapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>timeapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>joystickapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4064ce76-ccec-4f25-9aea-1c27e2ab41fe"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="fa230fac-1af4-4d2c-a7cf-e91eb07250a5"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="79ac752a-437c-4d8e-a700-01f09fbc4f9d"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="af6a3c79-5358-4e5b-858e-d4e917a51d27"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="6a0f074d-5f46-42a1-b4b4-34bfd7bf05c2"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="8d6e39d2-ff4c-40f4-8788-d2d74d89fa1e"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="274e8925-588a-4068-84f4-bbe3b915db23"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="75912609-18b9-4b68-8b64-550ccd21a28c"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="14114e6a-1378-4237-8dc6-bd6569d038ea"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\mmsystem.h</Path>
      <WrittenName>mmsystem.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="edf1fa2e-13a5-41b0-b2e3-c77cad119131">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\msxml.h</Path>
      <WrittenName>msxml.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="e30c1002-f007-4629-8d84-7ca00bf24a7e">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\namedpipeapi.h</Path>
      <WrittenName>namedpipeapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="3af0f67e-bc65-4e11-b6cd-d51d32aa3052">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\namespaceapi.h</Path>
      <WrittenName>namespaceapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="41fae331-fa21-4f77-b142-b0b303a7f6a9">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\nb30.h</Path>
      <WrittenName>nb30.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="6e7275d3-a60b-450e-b705-138e9dcbe622">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\ncrypt.h</Path>
      <WrittenName>ncrypt.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="33cd6ca5-c53b-4088-812e-4d3bb2230d95">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\oaidl.h</Path>
      <WrittenName>oaidl.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="4c6fd158-c258-411d-99db-4724f7abae06">
      <IncludedFileWrittenNames>pshpack8.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>combaseapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>coml2api.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>urlmon.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>propidl.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="d4a6e20e-4323-4a79-bb56-fa8f47321c59"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="5e88eb81-2bf1-44ee-b886-136665618d6e"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="e28f29a9-201f-4163-bf95-02bcabc22ab0"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="d115156d-e5f3-4c34-b1e5-cc8824866f19"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\objbase.h</Path>
      <WrittenName>objbase.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="7b2d1e4a-610e-4fcd-80db-11b440fa0935">
      <IncludedFileWrittenNames>unknwn.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="f4cddfc6-1faa-4cbb-932a-042a9e879260"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\objidl.h</Path>
      <WrittenName>objidl.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="6c127e32-f574-4718-a8b7-efebc8269ffc">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\objidlbase.h</Path>
      <WrittenName>objidlbase.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="a2b14ff0-2e6b-46db-9a4c-86979d7614b6">
      <IncludedFileWrittenNames>pshpack8.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>objbase.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>oleauto.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4c6fd158-c258-411d-99db-4724f7abae06"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="613d6801-bc31-4b1f-9222-eef5e7ba4cbb"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\ole2.h</Path>
      <WrittenName>ole2.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="613d6801-bc31-4b1f-9222-eef5e7ba4cbb">
      <IncludedFileWrittenNames>pshpack8.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\oleauto.h</Path>
      <WrittenName>oleauto.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="9353d5fa-db36-4bfe-9a5a-f978058d29fd">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\oleidl.h</Path>
      <WrittenName>oleidl.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="8d6e39d2-ff4c-40f4-8788-d2d74d89fa1e">
      <IncludedFileWrittenNames>mmsyscom.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4064ce76-ccec-4f25-9aea-1c27e2ab41fe"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\playsoundapi.h</Path>
      <WrittenName>playsoundapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="5b9f7fcb-9657-40e4-b788-05c619f1212d">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\processenv.h</Path>
      <WrittenName>processenv.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="653ac24d-4b8f-419a-ab59-ccf94e9c1cc1">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\processthreadsapi.h</Path>
      <WrittenName>processthreadsapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="78164018-774f-4d8d-ac8c-dae9f7503898">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\processtopologyapi.h</Path>
      <WrittenName>processtopologyapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="593c9bb9-e733-4a77-a3c0-5871561cf497">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\profileapi.h</Path>
      <WrittenName>profileapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="3a40b8b0-9390-42f5-b028-21258000cb27">
      <IncludedFileWrittenNames>pshpack8.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\prsht.h</Path>
      <WrittenName>prsht.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="9ab08f77-f9a8-4f3c-a510-8544944adb75">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\realtimeapiset.h</Path>
      <WrittenName>realtimeapiset.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="6d696dfb-d730-44e9-9870-72d6bccd3dfa">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\reason.h</Path>
      <WrittenName>reason.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="7d8f7fd5-eef7-495a-98e4-5202350bb175">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\rpcnsi.h</Path>
      <WrittenName>rpcnsi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="5c3cb414-9688-4cf8-ac7f-20587fe386d6">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\rpcnsip.h</Path>
      <WrittenName>rpcnsip.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="eb6ce521-9b8e-4dc3-be87-b7e0aa772c90">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\securityappcontainer.h</Path>
      <WrittenName>securityappcontainer.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="bf9ee244-09d6-4268-9b7b-c31de6e8ce68">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\securitybaseapi.h</Path>
      <WrittenName>securitybaseapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="3c6f2f63-2cd4-4022-9c5c-d92ca8ee265a">
      <IsInclude>true</IsInclude>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\servprov.h</Path>
      <WrittenName>servprov.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="e5184d32-b9e5-4213-b8a3-8daa58ce2650">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\shellapi.h</Path>
      <WrittenName>shellapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="08c67807-1bd7-41b0-98d8-1c0be400f2c5">
      <IncludedFileWrittenNames>winnls.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="497b1096-37d9-418e-a864-dc9e7796c249"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\stringapiset.h</Path>
      <WrittenName>stringapiset.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="44831ceb-9764-427c-ba0c-44fa511efe23">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\synchapi.h</Path>
      <WrittenName>synchapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="63c99791-ebc0-49fb-ab1e-b2aa548814d0">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\sysinfoapi.h</Path>
      <WrittenName>sysinfoapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="e7faadc4-f27a-439d-a675-b4e1776fdcc5">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\systemtopologyapi.h</Path>
      <WrittenName>systemtopologyapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="4dc62e8c-1e0c-45d5-84b8-68695d0b98bb">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\threadpoolapiset.h</Path>
      <WrittenName>threadpoolapiset.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="6631d632-0ab8-4ff8-aa90-0057a636b1bc">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\threadpoollegacyapiset.h</Path>
      <WrittenName>threadpoollegacyapiset.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="75912609-18b9-4b68-8b64-550ccd21a28c">
      <IncludedFileWrittenNames>mmsyscom.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4064ce76-ccec-4f25-9aea-1c27e2ab41fe"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\timeapi.h</Path>
      <WrittenName>timeapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="cce5bf81-07e3-4ec1-b538-e6804057ffc1">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\timezoneapi.h</Path>
      <WrittenName>timezoneapi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="e28f29a9-201f-4163-bf95-02bcabc22ab0">
      <IncludedFileWrittenNames>oleidl.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>servprov.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>msxml.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="9353d5fa-db36-4bfe-9a5a-f978058d29fd"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="3c6f2f63-2cd4-4022-9c5c-d92ca8ee265a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="edf1fa2e-13a5-41b0-b2e3-c77cad119131"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\urlmon.h</Path>
      <WrittenName>urlmon.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="d87b4479-28a2-4f13-8e1a-84c1959c6432">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\utilapiset.h</Path>
      <WrittenName>utilapiset.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="c2488ffc-d4ce-4d79-973c-117fca949823">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\verrsrc.h</Path>
      <WrittenName>verrsrc.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="344e412b-e3bf-4a9c-8701-fbceb58bd507">
      <IncludedFileWrittenNames>wincontypes.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>consoleapi.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>consoleapi2.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>consoleapi3.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="29d42b06-0e64-4515-aa3b-2bc9d3584339"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="e27312b1-c33e-4c6f-984c-358e3e72ba17"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="5a0c3102-0827-4da7-bc2b-941b7b0a1c3a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="e1711008-feb1-4afe-af09-ce597c6a7184"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\wincon.h</Path>
      <WrittenName>wincon.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="29d42b06-0e64-4515-aa3b-2bc9d3584339">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\wincontypes.h</Path>
      <WrittenName>wincontypes.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="d6fa1596-28a1-4980-9073-af93d8119d5d">
      <IncludedFileWrittenNames>bcrypt.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>ncrypt.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>dpapi.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="7a0fb71e-075d-41cf-b663-5765915f9a80"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="6e7275d3-a60b-450e-b705-138e9dcbe622"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="03d12157-4dea-4135-9c11-105cfa2d7947"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\wincrypt.h</Path>
      <WrittenName>wincrypt.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="f7771543-3ada-4b10-9ab9-233d1c6f6331">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winefs.h</Path>
      <WrittenName>winefs.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="c02bff85-b0b4-4195-aa34-b9f3de034372">
      <IncludedFileWrittenNames>pshpack1.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>pshpack2.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>pshpack4.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="fa230fac-1af4-4d2c-a7cf-e91eb07250a5"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="3d11f179-2214-45d6-a7f8-efc6cd8c13ea"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="65677413-182f-42bb-aea5-5609baf511f0"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\wingdi.h</Path>
      <WrittenName>wingdi.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="90d47a6d-0dfa-475e-b671-5a872e2b1801">
      <IncludedFileWrittenNames>pshpack1.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="fa230fac-1af4-4d2c-a7cf-e91eb07250a5"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winioctl.h</Path>
      <WrittenName>winioctl.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="8c343848-0ee6-4572-8903-106fa783df92">
      <IncludedFileWrittenNames>wnnc.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="542f9791-9305-4c1e-8330-7a01e2ceab02"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winnetwk.h</Path>
      <WrittenName>winnetwk.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="b335132b-df0c-492e-a7c6-a746b812bc7f">
      <IncludedFileWrittenNames>ctype.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>kernelspecs.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>basetsd.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>guiddef.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>pshpack4.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>pshpack2.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>pshpack8.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>pshpack1.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>apiset.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>ktmtypes.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="914834aa-9bd9-406b-8560-341b321f90b3"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="4769bee7-3d0b-4964-9cc8-2c444bbf0ac5"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="8cae1e0a-1885-4f22-80e8-12cff3f68c00"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="f926cc4c-dc74-4271-83ff-6276cffebde1"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="65677413-182f-42bb-aea5-5609baf511f0"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="3d11f179-2214-45d6-a7f8-efc6cd8c13ea"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="fa230fac-1af4-4d2c-a7cf-e91eb07250a5"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="6c8020f1-b735-43b5-bedf-28e4ba783b09"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="525720a4-77b2-4a2d-a6c6-e5b41bfbf3c3"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winnt.h</Path>
      <WrittenName>winnt.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="25ca98a2-3dd3-4de6-abd1-5a3c76f3db6d">
      <IncludedFileWrittenNames>pshpack8.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>poppack.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="26daf3a6-fefc-4af3-93a0-2a3d7a44150a"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="0efdebfb-d71d-4142-b357-8df6935d14d9"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winperf.h</Path>
      <WrittenName>winperf.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="136e190f-2fa9-4782-8c65-083a0d52ba3e">
      <IncludedFileWrittenNames>reason.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="6d696dfb-d730-44e9-9870-72d6bccd3dfa"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winreg.h</Path>
      <WrittenName>winreg.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="18f46152-3023-468e-a4d6-27c46d21127c">
      <IncludedFileWrittenNames>wtypes.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winioctl.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>winsmcrd.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="64c3e5d8-1e6b-4c19-949e-e83d0dd074f1"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="90d47a6d-0dfa-475e-b671-5a872e2b1801"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="909399f0-250c-411b-9158-4c7fa1249605"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winscard.h</Path>
      <WrittenName>winscard.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="5dfe1170-e9d5-4fae-a880-68f0a4a62211">
      <IncludedFileWrittenNames>inaddr.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="66efd9db-e091-4078-a49c-5f8165c7a4d2"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winsock.h</Path>
      <WrittenName>winsock.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="4ace888c-cb14-4faf-b09b-0fcf6a58bd15">
      <IncludedFileWrittenNames>prsht.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="3a40b8b0-9390-42f5-b028-21258000cb27"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winspool.h</Path>
      <WrittenName>winspool.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="539083e6-feb8-44ab-b843-404dd4a7ebc7">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winsvc.h</Path>
      <WrittenName>winsvc.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="b1e6a632-71c4-4388-aa23-7f9fc585feed">
      <IncludedFileWrittenNames>verrsrc.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="c2488ffc-d4ce-4d79-973c-117fca949823"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\winver.h</Path>
      <WrittenName>winver.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="0a405e69-01c5-46b2-aad3-4e700e690502">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\um\wow64apiset.h</Path>
      <WrittenName>wow64apiset.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="656126a5-a367-4f9a-820d-06aff8f96fe7">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\concurrencysal.h</Path>
      <WrittenName>concurrencysal.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="2ba364af-f3ed-4f5a-9a15-4fadf64ade07">
      <IncludedFileWrittenNames>vcruntime.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="c5349402-ec56-42c9-a26c-19a1ed906357"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\excpt.h</Path>
      <WrittenName>excpt.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="9b67f733-92fb-4418-bf47-40bbd483ac27">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\limits.h</Path>
      <WrittenName>limits.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="23b6b9a3-a8fd-48cc-84b4-93b1574b6724">
      <IncludedFileWrittenNames>concurrencysal.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="656126a5-a367-4f9a-820d-06aff8f96fe7"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\sal.h</Path>
      <WrittenName>sal.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="9146040a-6edd-4a55-ba82-745254e53f9b">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\stdarg.h</Path>
      <WrittenName>stdarg.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="cc768b1d-2648-411b-913f-8f723bd28b67">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\stdint.h</Path>
      <WrittenName>stdint.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="3a4b4f0e-55c2-4c20-922a-62bdec772645">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\vadefs.h</Path>
      <WrittenName>vadefs.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="c5349402-ec56-42c9-a26c-19a1ed906357">
      <IncludedFileWrittenNames>sal.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>vadefs.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="23b6b9a3-a8fd-48cc-84b4-93b1574b6724"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="3a4b4f0e-55c2-4c20-922a-62bdec772645"/>
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\vcruntime.h</Path>
      <WrittenName>vcruntime.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="a6275c3d-e573-4dd2-91ed-4772c1ecf269">
      <IsInclude>true</IsInclude>
      <IsIncludedBySystemIncludeSyntax>true</IsIncludedBySystemIncludeSyntax>
      <IsIncludedFromSystemIncludeDir>true</IsIncludedFromSystemIncludeDir>
      <Path>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.42.34433\include\vcruntime_string.h</Path>
      <WrittenName>vcruntime_string.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721">
      <IsInclude>true</IsInclude>
      <Path>D:\matlabDLL\ftd2xx.h</Path>
      <WrittenName>ftd2xx.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="3dba0d30-15bc-4e46-bd36-84bd0a23f39d">
      <IsInclude>true</IsInclude>
      <Path>D:\matlabDLL\ftdi_common.h</Path>
      <WrittenName>ftdi_common.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c">
      <IncludedFileWrittenNames>windows.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>inttypes.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>stdio.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>ftd2xx.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="77b2c8c5-5df2-4fb8-a4eb-d8c3744169e8"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="64522161-f518-4aee-a94d-c3264fec04fc"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="fbaa8820-ee6e-45f7-837e-9db94d05c8f1"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="2146eb1b-fc7e-4cb9-a4a3-b0edd31c8721"/>
      <IsInclude>true</IsInclude>
      <Path>D:\matlabDLL\ftdi_infra.h</Path>
      <WrittenName>ftdi_infra.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065">
      <IsInclude>true</IsInclude>
      <Path>D:\matlabDLL\ftdi_mid.h</Path>
      <WrittenName>ftdi_mid.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="39101f1c-4da1-4a41-b811-fc946768a187">
      <IncludedFileWrittenNames>ftdi_infra.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>ftdi_common.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>ftdi_mid.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="3dba0d30-15bc-4e46-bd36-84bd0a23f39d"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
      <IsTopLevelFile>true</IsTopLevelFile>
      <Path>D:\matlabDLL\libmpsse_i2c.h</Path>
      <WrittenName>D:\matlabDLL\libmpsse_i2c.h</WrittenName>
    </Files>
    <Files type="cxxfe.ast.source.SourceFile" uuid="ff9d9c70-b0b5-4291-986a-d374554123e2">
      <IncludedFileWrittenNames>ftdi_infra.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>ftdi_common.h</IncludedFileWrittenNames>
      <IncludedFileWrittenNames>ftdi_mid.h</IncludedFileWrittenNames>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="cf0075d2-2579-4564-8eba-cc6fc114bc5c"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="3dba0d30-15bc-4e46-bd36-84bd0a23f39d"/>
      <IncludedFiles type="cxxfe.ast.source.SourceFile" uuid="84f0e1a1-cea4-4193-b87d-7960dcdda065"/>
      <IsTopLevelFile>true</IsTopLevelFile>
      <Path>D:\matlabDLL\libmpsse_spi.h</Path>
      <WrittenName>D:\matlabDLL\libmpsse_spi.h</WrittenName>
    </Files>
    <LongDoubleNumBits>64</LongDoubleNumBits>
    <PointerNumBits>64</PointerNumBits>
    <PtrDiffTypeKind>SignedLongLong</PtrDiffTypeKind>
    <SizeTypeKind>UnsignedLongLong</SizeTypeKind>
  </cxxfe.ast.Project>
  <mwAnnotation.FundamentalArray type="mwAnnotation.FundamentalArray" uuid="4f44580a-c7b4-4b84-9be2-4b899fc9b519">
    <cppElemType>char</cppElemType>
    <mlElemType>int8</mlElemType>
    <name>clib.array.ftLib.Char</name>
  </mwAnnotation.FundamentalArray>
  <mwAnnotation.FundamentalArray type="mwAnnotation.FundamentalArray" uuid="c843a0c1-46bf-4a24-8d99-c38c972aa3ee">
    <cppElemType>int</cppElemType>
    <mlElemType>int32</mlElemType>
    <name>clib.array.ftLib.Int</name>
  </mwAnnotation.FundamentalArray>
  <mwAnnotation.OpaqueTypeAnnotation type="mwAnnotation.OpaqueTypeAnnotation" uuid="e34922e9-b02f-4b31-b282-852e4361e0aa">
    <cppSignature>typedef void* PVOID</cppSignature>
    <cppWrapperName>PVOID</cppWrapperName>
    <opaqueTypeData type="mwAnnotation.ClassAnnotation" uuid="a1ebcc8a-7f5a-447e-b18d-368d4a2ff1ba">
      <deallocatorPTKey>O//delete</deallocatorPTKey>
      <description>clib.ftLib.PVOID    C++ opaque type.</description>
      <name>clib.ftLib.PVOID</name>
    </opaqueTypeData>
  </mwAnnotation.OpaqueTypeAnnotation>
  <mwAnnotation.FundamentalArray type="mwAnnotation.FundamentalArray" uuid="539be08e-079b-4d21-bb3d-be301916d107">
    <cppElemType>unsigned long</cppElemType>
    <mlElemType>uint32</mlElemType>
    <name>clib.array.ftLib.UnsignedLong</name>
  </mwAnnotation.FundamentalArray>
</MF0>